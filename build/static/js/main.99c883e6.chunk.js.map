{"version":3,"sources":["contexts/User/index.tsx","contexts/index.tsx","theme.ts","urls.ts","components/ComponentsForApp/MainMenu/MainMenu.tsx","components/ComponentsForApp/AppBar/AppBarComponent.tsx","components/ComponentsForApp/Table/TableComponent.tsx","components/ComponentsForApp/CashReceipt/CashReceiptForm.tsx","mappers/Third/third.mapper.ts","services/Third/index.ts","components/ComponentsForApp/Third/ThirdForm.tsx","components/ComponentsForApp/Third/ThirdMigration.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionForm.tsx","components/ComponentsForApp/CashReceipt/CashReceiptReport.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionReport.tsx","mappers/Item/item.mapper.ts","services/Item/index.ts","components/ComponentsForApp/Item/ItemForm.tsx","services/ElectronicBill/index.ts","utils.ts","components/ComponentsForApp/ElectronicBill/ItemTable.tsx","mappers/ElectronicBill/electronicBill.mapper.ts","components/ComponentsForApp/ElectronicBill/ElectronicBillForm.tsx","components/ComponentsForApp/Index/Card/BalanceCard.tsx","components/ComponentsForApp/Index/Graphics/LineGraphic/LineGraphic.tsx","components/ComponentsForApp/Index/DailyReport/DailyReportForm.tsx","components/ComponentsForApp/Index/IndexApp.tsx","components/ComponentsForProtectRoutes/ProtectRoute.tsx","components/ComponentsForApp/ContainerApp/ContainerApp.tsx","mappers/User/user.mapper.ts","services/User/index.ts","components/ComponentsForPage/Login/Login.tsx","components/ComponentsForPage/ContainerPage/ContainerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Context","createContext","initialState","id","email","name","lastname","entityId","state","permissions","UserContextProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","userContext","setUserContext","_jsx","Provider","value","GlobalProvider","props","theme","createMuiTheme","palette","primary","main","lightBlue","secondary","deepOrange","urls","home","login","index","third","form","thirdMigrationForm","cashReceipt","report","electronicBill","internalTransaction","item","useStyles","makeStyles","createStyles","root","minHeight","width","backgroundColor","position","rootResponsive","maxWidth","fixed","fixedResponsive","hidden","display","textPrimary","color","fontSize","icon","menuTitle","fontWeight","textAlign","secondaryMenuTitle","logo","nestedList","background","nested","paddingLeft","spacing","initState","selected","menu","itemHeader","title","path","alt","items","InsertChart","permission","view","url","Contacts","indexedMenu","open","ContactMail","create","migrate","Keyboard","movement_receipt","ImportExport","movement_internal","QueueRounded","electronic_bill","FindInPage","Assignment","MainMenu","classes","history","useHistory","_React$useState","React","_React$useState2","setState","useContext","UserContext","sizeScreen","setSizeScreen","matches","useMediaQuery","concat","handleListMenu","event","_objectSpread","map","savedItem","push","className","_jsxs","List","component","aria-label","ListItem","ListItemIcon","onClick","src","Typography","variant","Divider","some","Fragment","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","indexedItem","grow","flexGrow","toolBar","search","_defineProperty","borderRadius","shape","fade","common","white","marginRight","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","sectionDesktop","sectionMobile","AppBarComponent","anchorEl","setAnchorEl","_React$useState3","_React$useState4","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","AppBar","elevation","Toolbar","SearchIcon","InputBase","placeholder","input","inputProps","edge","MoreIcon","table","minWidth","texts","headers","concept","detail","delete","TableComponent","rows","handleTable","reload","setReload","useEffect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","newValue","Number","replace","handleDelete","DeleteIcon","margin","marginBottom","divider","alignRight","addButton","initStateForm","type","date","Date","serial","classThird","valueText","valueNumber","wayPay","conceptTable","header","fields","helperText","options","_id","typeThird","typeDocument","document","enterpriceName","bank","helperTextIng","helperTextEgr","numberAccount","typeAccount","conceptDetail","conceptValue","buttonAddConcept","body","subtitle","CashReceiptForm","setForm","_useState3","_useState4","setWayPay","_useState5","_useState6","setBank","_useState7","_useState8","modalBank","setModalBank","_useState9","_useState10","setConceptTable","_useState11","_useState12","setConcept","_useState13","_useState14","setConceptDetail","_useState15","_useState16","setConceptValue","_useState17","_useState18","total","setTotal","handleChange","e","_e$target","target","prev","handleChangeSelect","handleModalBank","cond1","cond2","func","_toConsumableArray","console","log","undefined","newArray","splice","onSubmit","preventDefault","arrayWayPay","handleSubmit","Grid","container","md","sm","xs","Select","fullWidth","onChange","FormHelperText","TextField","Help","_e$target2","newInput","split","join","reverse","output","aux","paginator","Math","ceil","length","i","j","Button","size","startIcon","Save","NoteAdd","Cancel","thirdMapper","_third$entityId","_third$document","_third$dv","_third$documentType","_third$organizationTy","_third$liabilityType","_third$regimeType","_third$name","_third$lastname","_third$businessName","_third$phone","_third$address","_third$email","dv","documentType","code","description","organizationType","liabilityType","regimeType","businessName","phone","address","ThirdService","_classCallCheck","_createClass","key","_saveThird","_asyncToGenerator","_regeneratorRuntime","mark","_callee","thirdData","token","responseApi","wrap","_context","next","axios","post","authorization","sent","abrupt","data","t0","stop","_x","_x2","apply","arguments","_getThirds","_callee2","thirds","_context2","get","_x3","thirdClassTitle","field","one","two","ThirdForm","_ref2","_userContext$token","thirdService","thirdCreated","serverError","saveThird","toast","success","isAxiosError","response","error","message","required","contentAside","lastThird","secondName","lastName","companyName","newThird","aside","content","ThirdMigration","newThirdOptions","setNewThirdOptions","res","filter","optionOne","optionTwo","optionThree","secondBank","InternalTransactionForm","valueStr","setValueStr","newBankOptions","setNewBankOptions","from","to","CashReceiptReport","itemMapper","_item$code","_item$description","_item$price","_code$description","_item$unitMeasure$cod","_item$unitMeasure","_item$unitMeasure$des","_item$unitMeasure2","price","unitMeasure","ItemService","_saveItem","itemData","_getItems","ItemForm","_state$form$unitMeasu","itemService","itemCreated","saveItem","ElectronicBillService","_saveBill","billData","Utils","buildItem","applyTaxes","tax","percent","taxAmount","taxableAmount","selectedTax","currentPercentTax","currentQuantity","currentPrice","currentItem","itemType","currentItemType","quantity","taxes","buildTaxesForElectronicBill","forEach","ItemTable","electronicBillMapper","_form$third","orderReference","wayToPay","paymentMethod","paymentDueDate","note","totalTaxes","totalToPay","subtitles","payment","itemsTable","buttons","addProduct","selectedItems","ElectronicBillForm","_state$form$third","_state$form$currentIt","_loadData","getThirds","getItems","loadData","electronicBillService","saveBill","selectedItem","FormControlLabel","control","Checkbox","checked","onApplyTaxes","label","disabled","card","cardBody","marginTop","cardPrefix","cardPorcent","BalanceCard","Card","CardContent","prefix","Tooltip","tooltip","ArrowUpwardIcon","ArrowDownwardIcon","uv","LineGraphic","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Bar","fill","submitButton","DailyReportForm","gridCard","cardGraphic","user","cards","cashBalance","bankBalance","percentBalance","respectPreviousMonth","IndexApp","Container","ProtectRoute","rest","_objectWithoutProperties","Route","render","Redirect","ContainerApp","CssBaseline","Switch","InternalTransactionReport","userMapper","_user$id","_user$email","_user$password","_user$name","_user$lastname","_user$entityId","_user$state","_user$permissions","_user$token","password","UserService","_login","tokenData","userData","Error","jwt","_getUsers","_saveUser","_callee3","_context3","_x4","_x5","paper","flexDirection","avatar","submit","rememberCheck","signinButton","footer","forgotPasswordLink","createAccountLink","copyright","Copyright","Link","href","getFullYear","SignIn","_onLogin","userService","Avatar","noValidate","autoFocus","autoComplete","Box","mt","exact","Login","App","MuiThemeProvider","Router","ContainerPage","ToastContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99c883e6.chunk.js","sourcesContent":["import { createContext, ReactNode, useState } from 'react'\r\nimport { User } from '../../schemas/User/index'\r\n\r\nconst Context = createContext({})\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n}\r\n\r\nconst initialState: User = {\r\n  id: '',\r\n  email: '',\r\n  name: '',\r\n  lastname: '',\r\n  entityId: '',\r\n  state: '',\r\n  permissions: ['']\r\n}\r\n\r\nexport function UserContextProvider({ children }: Props) {\r\n  const [userContext, setUserContext] = useState<User>(initialState)\r\n  return (\r\n    <Context.Provider value={{ userContext, setUserContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context","import * as React from 'react'\r\nimport { UserContextProvider } from './User/index'\r\n\r\nexport default function GlobalProvider(props: any) {\r\n  return (\r\n    <UserContextProvider>\r\n      {props.children}\r\n    </UserContextProvider>\r\n  )\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {\r\n    deepOrange,\r\n    lightBlue,\r\n} from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: lightBlue[400]\r\n        },\r\n        secondary: {\r\n            main: deepOrange['A400']\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","export const urls = {\r\n    page: {\r\n      home: '/page',\r\n      login: '/page/login'\r\n    },\r\n    app: {\r\n      index: '/app',\r\n      main: {\r\n        home: '/app/home',\r\n        third: {\r\n          form: '/app/third/form',\r\n          thirdMigrationForm: '/app/third/migration/form',\r\n        },\r\n        cashReceipt: {\r\n          form: '/app/cash-receipt/form',\r\n          report: '/app/cash-receipt/report'\r\n        },\r\n        electronicBill: {\r\n          form: '/app/electronic-bill/form'\r\n        },\r\n        internalTransaction: {\r\n          form: '/app/internal-transaction/form',\r\n          report: '/app/internal-transaction/report'\r\n        },\r\n        item: {\r\n          form: '/app/item/form'\r\n        }\r\n      }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { urls } from '../../../urls'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {\r\n  InsertChart,\r\n  Assignment,\r\n  Keyboard,\r\n  ImportExport,\r\n  Contacts,\r\n  FindInPage,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  ContactMail,\r\n  QueueRounded\r\n} from '@material-ui/icons'\r\nimport { Collapse, Typography } from '@material-ui/core'\r\nimport permissions from '../../../permissions.json'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    rootResponsive: {\r\n      minHeight: '100%',\r\n      maxWidth: '60px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    fixed: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n    },\r\n    fixedResponsive: {\r\n      minHeight: '100vh',\r\n      width: '60px',\r\n    },\r\n    hidden: {\r\n      display: 'none'\r\n    },\r\n    textPrimary: {\r\n      color: '#ffff',\r\n      fontSize: '1rem'\r\n    },\r\n    icon: {\r\n      color: '#ffff',\r\n      width: '1rem'\r\n    },\r\n    menuTitle: {\r\n      color: '#ffff',\r\n      fontWeight: 'bolder',\r\n      fontSize: '1.6rem',\r\n      textAlign: 'center'\r\n    },\r\n    secondaryMenuTitle: {\r\n      color: '#29b6f6',\r\n      fontSize: '1.3rem'\r\n    },\r\n    logo: {\r\n      width: '1.8rem'\r\n    },\r\n    nestedList: {\r\n      background: '#455a64'\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }),\r\n)\r\n\r\n// - in this part all the component menu are housed\r\nconst initState = {\r\n  selected: '',\r\n  menu: {\r\n    itemHeader: {\r\n      title: {\r\n        main: 'Crecer',\r\n        secondary: 'DMC'\r\n      },\r\n      logo: {\r\n        path: '/images/logotipo-crecer-dmc.svg',\r\n        alt: 'logotipo de crecer dmc'\r\n      }\r\n    },\r\n    items: [\r\n      {\r\n        id: '001',\r\n        title: 'Inicio',\r\n        icon: <InsertChart />,\r\n        permission: permissions.home.view,\r\n        url: urls.app.main.home\r\n      },\r\n      {\r\n        id: '002',\r\n        title: 'Administración de terceros',\r\n        icon: <Contacts />,\r\n        permission: permissions.third.view,\r\n        indexedMenu: {\r\n          open: false,\r\n          items: [\r\n            {\r\n              id: '001-01',\r\n              title: 'Creación de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.create,\r\n              url: urls.app.main.third.form\r\n            },\r\n            {\r\n              id: '001-01',\r\n              title: 'Migración de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.migrate,\r\n              url: urls.app.main.third.thirdMigrationForm\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        id: '003',\r\n        title: 'Recibos de ingreso / egreso',\r\n        icon: <Keyboard />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.form\r\n      },\r\n      {\r\n        id: '004',\r\n        title: 'Transacciones internas',\r\n        icon: <ImportExport />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.form\r\n      },\r\n      {\r\n        id: '005',\r\n        title: 'Productos',\r\n        icon: <QueueRounded/>,\r\n        permission: permissions.item.view,\r\n        url: urls.app.main.item.form\r\n      },\r\n      {\r\n        id: '006',\r\n        title: 'Factura electrónica',\r\n        icon: <QueueRounded/>,\r\n        permission: permissions.electronic_bill.view,\r\n        url: urls.app.main.electronicBill.form\r\n      },\r\n      {\r\n        id: '007',\r\n        title: 'Reporte de recibos',\r\n        icon: <FindInPage />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.report\r\n      },\r\n      {\r\n        id: '008',\r\n        title: 'Reporte de transacciones',\r\n        icon: <Assignment />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.report\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport default function MainMenu() {\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const [state, setState] = React.useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const [sizeScreen, setSizeScreen] = useState(900)\r\n\r\n  const matches = useMediaQuery(`(min-width:${sizeScreen}px)`)\r\n\r\n  const handleListMenu = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    item: any,\r\n  ) => {\r\n    if (item.indexedMenu) {\r\n      setState({\r\n        ...state,\r\n        selected: item.id,\r\n        menu: {\r\n          ...state.menu,\r\n          items: state.menu.items.map(savedItem => {\r\n            if (savedItem.id === item.id) {\r\n              if (savedItem.indexedMenu) {\r\n                savedItem.indexedMenu.open = !savedItem.indexedMenu.open\r\n              }\r\n            }\r\n            return savedItem\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        selected: item.id\r\n      })\r\n      history.push(item.url)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={matches ? classes.fixed : classes.fixedResponsive}>\r\n      <div className={matches ? classes.root : classes.rootResponsive}>\r\n        <List\r\n          component=\"nav\"\r\n          aria-label=\"main mailbox folders\"\r\n        >\r\n          <ListItem>\r\n            <ListItemIcon\r\n              onClick={() => {\r\n                if (sizeScreen === 900) {\r\n                  setSizeScreen(100)\r\n                } else if (sizeScreen === 100) {\r\n                  setSizeScreen(900)\r\n                }\r\n              }}\r\n            >\r\n              <img\r\n                className={classes.logo}\r\n                src={state.menu.itemHeader.logo.path}\r\n                alt={state.menu.itemHeader.logo.alt}\r\n              />\r\n            </ListItemIcon>\r\n            <Typography\r\n              variant='h6'\r\n              className={matches ? classes.menuTitle : classes.hidden}\r\n            >\r\n              {state.menu.itemHeader.title.main} <span className={classes.secondaryMenuTitle}>{state.menu.itemHeader.title.secondary}</span>\r\n            </Typography>\r\n          </ListItem>\r\n\r\n          <Divider />\r\n          {\r\n            state.menu.items.map(item => (\r\n              userContext.permissions.some(permission => permission === item.permission) ? \r\n              (\r\n                <React.Fragment>\r\n                  <ListItem\r\n                    button\r\n                    selected={state.selected === item.id}\r\n                    onClick={(event) => handleListMenu(event, item)}\r\n                  >\r\n                    <ListItemIcon\r\n                      className={classes.icon}\r\n                    >\r\n                      {item.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={item.title}\r\n                      className={matches ? classes.textPrimary : classes.hidden}\r\n                    />\r\n                    {\r\n                      item.indexedMenu && matches ?\r\n                        item.indexedMenu.open ? <ExpandLess color='primary' /> : <ExpandMore color='secondary' />\r\n                        :\r\n                        ''\r\n                    }\r\n                  </ListItem>\r\n                  {\r\n                    item.indexedMenu ?\r\n                      (\r\n                        <Collapse\r\n                          in={item.indexedMenu.open}\r\n                          timeout=\"auto\"\r\n                          unmountOnExit\r\n                        >\r\n                          <List\r\n                            component=\"div\"\r\n                            disablePadding\r\n                            className={classes.nestedList}\r\n                          >\r\n                            {\r\n                              item.indexedMenu.items.map(indexedItem => (\r\n                                userContext.permissions.some(permission => permission === indexedItem.permission) ?\r\n                                (\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={state.selected === indexedItem.id}\r\n                                    onClick={(event) => handleListMenu(event, indexedItem)}\r\n                                  >\r\n                                    <ListItemIcon\r\n                                      className={classes.icon}\r\n                                    >\r\n                                      {indexedItem.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                      className={matches ? classes.textPrimary : classes.hidden}\r\n                                      primary={indexedItem.title}\r\n                                    />\r\n                                  </ListItem>\r\n                                ) : ''\r\n                              ))\r\n                            }\r\n                          </List>\r\n                        </Collapse>\r\n                      ) : ''\r\n                  }\r\n                </React.Fragment>\r\n              ) : ''\r\n            ))\r\n          }\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    toolBar: {\r\n        background: '#ffff'  \r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function AppBarComponent() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Perfil</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Cerrar sesión</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Mensajes</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notificaciones</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Perfil</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Buscar…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show new mails\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n    table: {\r\n        headers: {\r\n            concept: 'Concepto',\r\n            detail: 'Detalle',\r\n            value: 'Valor',\r\n            delete: 'Eliminar'\r\n        }\r\n    }\r\n}\r\nexport default function TableComponent({rows, handleTable} : {rows: Array<any>, handleTable: Function}) {\r\n  \r\n    const classes = useStyles();\r\n    const [reload, setReload] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReload(false)\r\n    }, [reload])\r\n\r\n    // HandleDelete is the handler to delete items from\r\n    // the table.\r\n    const handleDelete = (index: number, value: string) => {\r\n        // this code become the newValue (total of receipt) to number\r\n        const r = /,/gi;\r\n        const newValue = Number(value.replace(r, ''));\r\n        handleTable(\"DEL\", index, newValue)\r\n        setReload(true)\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{texts.table.headers.concept}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.detail}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.value}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {\r\n                    rows.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                            <TableCell component=\"th\" >{row.concept}</TableCell>\r\n                            <TableCell align=\"right\">{row.detail}</TableCell>\r\n                            <TableCell align=\"right\">{row.value}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton \r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleDelete(index, row.value)}\r\n                                >\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TableComponent from '../Table/TableComponent'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Button, \r\n    Divider, \r\n    FormHelperText, \r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { CashReceipt, Concept } from './cashReceipt.slice';\r\nimport { Save, Help, NoteAdd, Cancel } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n    addButton: {\r\n        width: '100%',\r\n        height: '70%',\r\n        color: '#ffff',\r\n    },\r\n}));\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm: CashReceipt = {\r\n    type: 'INGRESO',\r\n    date: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    classThird: '',\r\n    valueText: '',\r\n    valueNumber: 0,\r\n    wayPay: [],\r\n    conceptTable: []\r\n}\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Recibos de ingreso y egreso'\r\n    },\r\n    fields: {\r\n        type: {\r\n            name: 'type',\r\n            helperText: 'Escoja el tipo de recibo',\r\n            options: ['INGRESO', 'EGRESO']\r\n        },\r\n        date: {\r\n            name: 'date',\r\n            helperText: 'Indique la fecha'\r\n        },\r\n        serial: {\r\n            name: 'serial',\r\n            helperText: 'Escriba el consecutivo',\r\n            placeholder: 'Serial'\r\n        },\r\n        third: {\r\n            name: 'third',\r\n            helperText: 'Escoja uno de los terceros',\r\n            options: [\r\n                {\r\n                    _id: '1',\r\n                    typeThird: 'JURIDICA',\r\n                    typeDocument: 'NIT',\r\n                    document: '123456-7',\r\n                    enterpriceName: 'Almacenes Éxito',\r\n                }\r\n            ]\r\n        },\r\n        classThird: {\r\n            name: 'classThird',\r\n            helperText: 'Escoja una clase del tercero',\r\n            options: [\r\n                {\r\n                    classThird: 'Proveedor'\r\n                }\r\n            ]\r\n        },\r\n        valueText: {\r\n            name: 'valueText',\r\n            helperText: 'Escriba el valor total del recibo en letras',\r\n            placeholder: 'Valor en letras'\r\n        },\r\n        wayPay: {\r\n            name: 'wayPay',\r\n            helperText: 'Selecciona la forma de pago',\r\n            options: [\r\n                {title: 'EFECTIVO', value: 'EFECTIVO'},\r\n                {title: 'CHEQUE', value: 'CHEQUE'},\r\n                {title: 'CONSIGNACIÓN', value: 'CONSIGNACION'},\r\n                {title: 'TRANSFERENCIA', value: 'TRANSFERENCIA'}\r\n            ]\r\n        },\r\n        bank: {\r\n            name: 'bank',\r\n            helperTextIng: 'Selecciona el banco a depositar',\r\n            helperTextEgr: 'Selecciona el banco a debitar',\r\n            options: [\r\n                {\r\n                    _id: \"5fac806e7434966c842292fe\",\r\n                    bank: \"BANCOLOMBIA\",\r\n                    numberAccount: \"28563044871\",\r\n                    typeAccount: \"DEBITO\"\r\n                }\r\n            ]\r\n        },\r\n        concept: {\r\n            name: 'concept',\r\n            helperText: 'Selecciona un concepto',\r\n            options: [\r\n                {\r\n                    concept: 'Concepto de prueba'\r\n                }\r\n            ]\r\n        },\r\n        conceptDetail: {\r\n            name: 'conceptDetail',\r\n            helperText: 'Detalla el concepto a profundidad',\r\n            placeholder: 'Detalle'\r\n        },\r\n        conceptValue: {\r\n            name: 'conceptValue',\r\n            helperText: 'Ingresa el valor del concepto',\r\n            placeholder: '$ Valor'\r\n        },\r\n        buttonAddConcept: {\r\n            title: 'Agregar'\r\n        }\r\n    },\r\n    body: {\r\n        subtitle: 'Tabla de conceptos'\r\n    }\r\n}\r\n\r\nexport default function CashReceiptForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [form, setForm] = useState<CashReceipt>(initStateForm);\r\n    const [wayPay, setWayPay] = useState('');\r\n    const [bank, setBank] = useState('NO DEFINIDO');\r\n    const [modalBank, setModalBank] = useState(false);\r\n\r\n    // States of the concept table\r\n    // This table will go into the main form\r\n    // Main form field: 'wayPay'\r\n    const [conceptTable, setConceptTable] = useState<Concept[]>([]);\r\n    const [concept, setConcept] = useState('');\r\n    const [conceptDetail, setConceptDetail] = useState('');\r\n    const [conceptValue, setConceptValue] = useState('');\r\n    const [total, setTotal] = useState(0);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input.\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        switch (name) {\r\n\r\n            case 'conceptDetail':\r\n                setConceptDetail(value)\r\n                break;\r\n\r\n            default:\r\n                setForm(prev => {\r\n                    (prev as any)[name] = value\r\n                    const newValue = {...prev}\r\n                    return newValue\r\n                })\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        switch (name) {\r\n            case 'wayPay':\r\n                setWayPay(event.target.value as any)\r\n                handleModalBank(event.target.value as any, form.type);\r\n                break;\r\n\r\n            case 'bank':\r\n                setBank(event.target.value as any)\r\n                break;\r\n            \r\n            case 'type':\r\n                setForm({\r\n                    ...form,\r\n                    type: event.target.value as any,\r\n                });\r\n                handleModalBank(wayPay, event.target.value as any);\r\n                break;\r\n            \r\n            case 'concept':\r\n                setConcept(event.target.value as any);\r\n                break;\r\n\r\n            default:\r\n                setForm({\r\n                    ...form,\r\n                    [name]: event.target.value,\r\n                });\r\n        }\r\n    };\r\n\r\n    // HandleModalBank is the handler to show and hide\r\n    // the bank input select: cond1 is wayPay value and\r\n    // cond2 is type value.\r\n    const handleModalBank = (cond1: string, cond2: string) => {\r\n\r\n        switch (cond1) {\r\n            case 'EFECTIVO':\r\n                setModalBank(false);\r\n                setBank('NO DEFINIDO');\r\n                break;\r\n\r\n            case 'CHEQUE':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(true);\r\n                }\r\n                break;\r\n\r\n            case 'CONSIGNACION':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(true);\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n                }\r\n                break;\r\n\r\n            case 'TRANSFERENCIA':\r\n                setModalBank(true);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleTable is the handler to add and remove items\r\n    // from the concept table, it also adds or subtracts \r\n    // the value of the total receipt.\r\n    const handleTable = (func: string, id?: number, value?: number) => {\r\n\r\n        switch (func) {\r\n            case 'PUSH':\r\n                setConceptTable([...conceptTable, {\r\n                    concept,\r\n                    detail: conceptDetail,\r\n                    value: conceptValue\r\n                }]);\r\n\r\n                const r = /,/gi;\r\n                const newValue = Number(conceptValue.replace(r, ''));\r\n\r\n                setTotal(total + newValue);\r\n                setConcept('');\r\n                setConceptDetail('');\r\n                setConceptValue('');\r\n                break;\r\n\r\n            case 'DEL':\r\n                console.log(id)\r\n                if(id !== undefined){\r\n                    let newArray = conceptTable;\r\n                    newArray.splice(id, 1);\r\n                    setConceptTable(newArray);\r\n                }\r\n                if(value !== undefined){\r\n                    setTotal(total - value) \r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    \r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber.\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setConceptValue(value);\r\n        if(name === 'conceptValue'){\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setConceptValue(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        let arrayWayPay = [\r\n            {wayPay: wayPay, bank: bank}\r\n        ]\r\n\r\n        setForm({\r\n            ...form,\r\n            valueNumber: total,\r\n            wayPay: arrayWayPay,\r\n            conceptTable: conceptTable\r\n        })\r\n        console.log(form)\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initStateForm);\r\n        setWayPay('');\r\n        setBank('NO DEFINIDO');\r\n        setModalBank(false);\r\n        setConceptTable([]);\r\n        setConcept('');\r\n        setConceptDetail('');\r\n        setConceptValue('');\r\n        setTotal(0);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {/* ------- *Header --------- */}\r\n            <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n            \r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ------- *Body ----------- */}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e} \r\n                                    >\r\n                                        {e}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.fields.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.serial.helperText}\r\n                        placeholder = {texts.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={12} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e._id} \r\n                                    >\r\n                                        {e.enterpriceName}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **class third ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.classThird.name}\r\n                        value = {form.classThird}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.classThird.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.classThird} \r\n                                    >\r\n                                        {e.classThird}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.classThird.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **value in text ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.valueText.name}\r\n                        value = {form.valueText}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.valueText.helperText}\r\n                        placeholder = {texts.fields.valueText.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={modalBank ? 4 : 8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.wayPay.name}\r\n                        value = {wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {\r\n                        // this section is visible if modal bank is true\r\n                        // the logic for this is on HandleModalBank function ^\r\n                        modalBank === true ?\r\n                        <Grid item md={4} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.fields.bank.name}\r\n                            value = {bank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    texts.fields.bank.options.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.numberAccount} \r\n                                        >\r\n                                            {e.bank} - {e.numberAccount}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>\r\n                                {\r\n                                    form.type === 'INGRESO' \r\n                                    ?\r\n                                    texts.fields.bank.helperTextIng \r\n                                    :\r\n                                    texts.fields.bank.helperTextEgr\r\n                                }\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: button **help ------*/}\r\n                    <Grid item md={4} sm={6} xs={12} className={classes.alignRight}>\r\n                        <IconButton \r\n                        aria-label='Ayuda'\r\n                        type=\"button\"\r\n                        >\r\n                            <Help fontSize=\"large\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Typography\r\n                        variant='h6'\r\n                        >\r\n                            {texts.body.subtitle}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Divider className={classes.divider}/>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.concept.name}\r\n                        value = {concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.concept} \r\n                                    >\r\n                                        {e.concept}\r\n                                    </MenuItem>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {texts.fields.concept.helperText}\r\n                        </FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***value per concept ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                            name={texts.fields.conceptValue.name}\r\n                            value = {conceptValue}\r\n                            onChange={thousandSeparator}\r\n                            fullWidth\r\n                            variant = \"outlined\"\r\n                            helperText = {texts.fields.conceptValue.helperText}\r\n                            placeholder = {texts.fields.conceptValue.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept detail ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.conceptDetail.name}\r\n                        value = {conceptDetail}\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.conceptDetail.helperText}\r\n                        placeholder = {texts.fields.conceptDetail.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            onClick={() => handleTable(\"PUSH\")}\r\n                            className={classes.addButton}\r\n                            startIcon={<Save />}\r\n                        >\r\n                            {texts.fields.buttonAddConcept.title}\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **concepts table rendering ------*/}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TableComponent rows={conceptTable} handleTable={handleTable}/>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **total ------*/}\r\n                    <Grid item md={4} sm={4} xs ={6}>\r\n                        <Typography variant=\"h6\">\r\n                            <span>Total: </span>$ {total}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        onClick={cancel}\r\n                        type=\"button\"\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Third } from \"../../schemas/Third\";\r\n\r\nexport default function thirdMapper(third: any | unknown): Third {\r\n  return {\r\n    entityId: third.entityId ?? '',\r\n    document: third.document ?? '',\r\n    dv: third.dv ?? '',\r\n    documentType: third.documentType ?? { code: '', description: '' },\r\n    organizationType: third.organizationType ?? { code: '', description: '' },\r\n    liabilityType: third.liabilityType ?? { code: '', description: '' },\r\n    regimeType: third.regimeType ?? { code: '', description: '' },\r\n    name: third.name ?? undefined,\r\n    lastname: third.lastname ?? undefined,\r\n    businessName: third.businessName ?? undefined,\r\n    phone: third.phone ?? '',\r\n    address: third.address ?? '',\r\n    email: third.email ?? ''\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport thirdMapper from '../../mappers/Third/third.mapper'\r\nimport { Third } from '../../schemas/Third'\r\n\r\nclass ThirdService {\r\n  async saveThird(thirdData: Third, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/third', thirdData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getThirds(token: string) : Promise<Third[]> {\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/third', {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n\r\n      const thirds = responseApi.data.map((third:any) => {\r\n        return thirdMapper(third) \r\n      })\r\n\r\n      return thirds\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ThirdService\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Third } from '../../../schemas/Third'\r\nimport ThirdService from '../../../services/Third'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear terceros'\r\n  },\r\n  body: {\r\n    field: {\r\n      organizationType: {\r\n        name: 'organizationType',\r\n        helperText: 'Escoja un tipo de persona',\r\n        options: [\r\n          { description: 'Jurídica', code: '1' },\r\n          { description: 'Natural', code: '2' }\r\n        ]\r\n      },\r\n      documentType: {\r\n        name: 'documentType',\r\n        helperText: 'Escoja el tipo de documento',\r\n        options: {\r\n          one: [\r\n            { description: 'NIT', code: '6' }\r\n          ],\r\n          two: [\r\n            { description: 'Registro civil', code: '1' },\r\n            { description: 'Tarjeta de identidad', code: '2' },\r\n            { description: 'Cédula de ciudadanía', code: '3' },\r\n            { description: 'Cédula de extranjería', code: '5' },\r\n            { description: 'Pasaporte', code: '7' },\r\n            { description: 'Documento de identificación extranjero', code: '8' }\r\n          ]\r\n        }\r\n      },\r\n      liabilityType: {\r\n        name: 'liabilityType',\r\n        helperText: 'Escoja el tipo de responsabilidad',\r\n        options: [\r\n          { description: 'Gran contribuyente', code: '7' },\r\n          { description: 'Autorretenedor', code: '9' },\r\n          { description: 'Agente de retención en el impuesto sobre las ventas', code: '14' },\r\n          { description: 'Régimen Simple de Tributación – SIMPLE', code: '112' },\r\n          { description: 'No responsable', code: '117' }\r\n        ]\r\n      },\r\n      regimeType: {\r\n        name: 'regimeType',\r\n        helperText: 'Escoja el tipo de régimen',\r\n        options: [\r\n          { description: 'Responsable de IVA', code: '1' },\r\n          { description: 'No responsable de IVA', code: '2' }\r\n        ]\r\n      },\r\n      document: {\r\n        name: 'document',\r\n        helperText: 'Escriba el número de documento',\r\n        placeholder: 'Documento'\r\n      },\r\n      dv: {\r\n        name: 'dv',\r\n        helperText: 'DV',\r\n        placeholder: 'DV'\r\n      },\r\n      name: {\r\n        one: {\r\n          name: {\r\n            name: 'name',\r\n            helperText: 'Escriba el primer nombre de la persona',\r\n            placeholder: 'Nombre'\r\n          },\r\n          lastname: {\r\n            name: 'lastname',\r\n            helperText: 'Escriba el apellido de la persona',\r\n            placeholder: 'Apellido(s)'\r\n          }\r\n        },\r\n        two: {\r\n          businessName: {\r\n            name: 'businessName',\r\n            helperText: 'Escriba el nombre de la empresa',\r\n            placeholder: 'Razón social'\r\n          }\r\n        }\r\n      },\r\n      email: {\r\n        name: 'email',\r\n        helperText: 'Escriba el email',\r\n        placeholder: 'Email'\r\n      },\r\n      phone: {\r\n        name: 'phone',\r\n        helperText: 'Escriba el número telefónico',\r\n        placeholder: 'Número telefónico'\r\n      },\r\n      address: {\r\n        name: 'address',\r\n        helperText: 'Escriba la dirección',\r\n        placeholder: 'Dirección'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Third\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    document: '',\r\n    dv: undefined,\r\n    documentType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    organizationType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    liabilityType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    regimeType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    name: undefined,\r\n    lastname: undefined,\r\n    businessName: undefined,\r\n    phone: '',\r\n    address: '',\r\n    email: ''\r\n  }\r\n}\r\n\r\nexport default function ThirdForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const thirdService = new ThirdService()\r\n      const thirdCreated = await thirdService.saveThird(state.form, userContext.token ?? '')\r\n      setState(initState)\r\n      return toast.success(`El tercero ${thirdCreated.document} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header ------*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: item thrid type ------*/}\r\n          <Grid item md={state.form.organizationType.code === '2' ? 4 : 3} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.organizationType.name}\r\n              value={state.form.organizationType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.organizationType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.organizationType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.organizationType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.documentType.name}\r\n              value={state.form.documentType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                // this will depend of organizationType field\r\n                state.form.organizationType.code === texts.body.field.organizationType.options[0].code ?\r\n                  texts.body.field.documentType.options.one.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n                  :\r\n                  texts.body.field.documentType.options.two.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.documentType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document number ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.document.name}\r\n              value={state.form.document}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.document.helperText}\r\n              placeholder={texts.body.field.document.placeholder}\r\n            />\r\n          </Grid>\r\n          {\r\n            /*\r\n            In this section the name, secondName, lastName and businessName\r\n            fields are conditioned to the organizationType field.\r\n            If typeThird field is NATURAL then the name, secondName and lastName\r\n            fields will be availabe while businessName field will be unavailable,\r\n            else if typeThird field is JURIDICA then the businessName field will\r\n            be available while the name, secondName and lastName fields will be\r\n            unavailable\r\n            */\r\n\r\n            state.form.organizationType.code === '2'\r\n              ?\r\n              <React.Fragment>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.name.name}\r\n                    value={state.form.name}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.name.helperText}\r\n                    placeholder={texts.body.field.name.one.name.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.lastname.name}\r\n                    value={state.form.lastname}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.lastname.helperText}\r\n                    placeholder={texts.body.field.name.one.lastname.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n              :\r\n              <React.Fragment>\r\n                {/* ----- Form: item document dv ------*/}\r\n                <Grid item md={1} sm={3} xs={2}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.dv.name}\r\n                    value={state.form.dv}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.dv.helperText}\r\n                    placeholder={texts.body.field.dv.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={12} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.two.businessName.name}\r\n                    value={state.form.businessName}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.two.businessName.helperText}\r\n                    placeholder={texts.body.field.name.two.businessName.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n          }\r\n\r\n          {/* ----- Form: item liability type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.liabilityType.name}\r\n              value={state.form.liabilityType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.liabilityType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.liabilityType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.liabilityType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item regime type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.regimeType.name}\r\n              value={state.form.regimeType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.regimeType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.regimeType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.regimeType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item email ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.email.name}\r\n              value={state.form.email}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.email.helperText}\r\n              placeholder={texts.body.field.email.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item phone ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.phone.name}\r\n              value={state.form.phone}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.phone.helperText}\r\n              placeholder={texts.body.field.phone.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item address ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.address.name}\r\n              value={state.form.address}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.address.helperText}\r\n              placeholder={texts.body.field.address.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Divider, FormHelperText, Grid, IconButton, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    contentAside: {\r\n        textAlign: 'right',\r\n        padding: '5vh 5vh 0 10vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Migrar terceros'\r\n    },\r\n    body: {\r\n        field: {\r\n            lastThird: {\r\n                name: 'lastThird',\r\n                helperText: 'Escoja el tercero a migrar',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            },\r\n            newThird: {\r\n                name: 'newThird',\r\n                helperText: 'Escoja el nuevo tercero',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        aside: {\r\n            title: 'Necesitas ayuda?',\r\n            content: 'La migración de terceros es la manera de transferir los recibos y demás registros de un tercero a otro tercero. Esto te será útil en caso de querer unificar un tercero que tengas duplicado.'\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm = {\r\n    lastThird: '',\r\n    newThird: ''\r\n}\r\n\r\nexport default function ThirdMigration() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initStateForm);\r\n    const [ newThirdOptions, setNewThirdOptions ] = useState(texts.body.field.lastThird.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the lastThird\r\n        // from the third array, with this if the user wants to\r\n        // transfer from one third to another the new options will\r\n        // be the other thirds.\r\n        if(name === 'lastThird'){\r\n            let res = texts.body.field.lastThird.options.filter(e => e.id !== event.target.value);\r\n            setNewThirdOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* ----- Header ------*/}\r\n            <React.Fragment>\r\n                <Typography\r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <Grid container spacing={5}>\r\n                <Grid item md={7} sm={12} xs={12}>\r\n\r\n                    <form onSubmit={(e) => handleSubmit(e)}>\r\n                        <Grid container spacing={3}>\r\n                            {/* ----- Form: item last thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.lastThird.name}\r\n                                value = {form.lastThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        texts.body.field.lastThird.options.map((e, index) => \r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.lastThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n\r\n                            {/* ----- Form: item new thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.newThird.name}\r\n                                value = {form.newThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        newThirdOptions.map((e, index) =>\r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.newThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n                            \r\n                            <Grid item md={12} sm={6} xs ={12} className={classes.alignRight}>\r\n                                <IconButton\r\n                                type=\"submit\"\r\n                                >\r\n                                    <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </Grid>\r\n\r\n                {/* ------------ Aside -----------------*/}\r\n                <Grid md={5} sm={12} xs={12} className={classes.contentAside}>\r\n                    <Typography color='primary' variant='h6'>{texts.body.aside.title}</Typography>\r\n                    <Typography variant='body2'>{texts.body.aside.content}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\nimport { InternalTransaction } from './internalTransaction.slice';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Transacciones internas'\r\n    },\r\n    body: {\r\n        field: {\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de transacción',\r\n                options: [\r\n                    {title: 'Consignación de efectivo a un banco', value: 'CONSIGNACION'},\r\n                    {title: 'Retiro de efectivo de un banco', value: 'RETIRO'},\r\n                    {title: 'Transferencia de un banco a otro banco', value: 'TRANSFERENCIA'}\r\n                ]\r\n            },\r\n            date: {\r\n                name: 'date',\r\n                helperText: 'Ingrese la fecha del movimiento',\r\n                placeholder: 'Fecha *'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial o código de transacción',\r\n                placeholder: 'Serial *'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: {\r\n                    optionOne: 'Escoja el banco a consignar',\r\n                    optionTwo: 'Escoja el banco a retirar',\r\n                    optionThree: 'Escoja el banco que transfiere'\r\n                },\r\n                options: [\r\n                    {title: 'Bancolombia', value: '674867836'},\r\n                    {title: 'BBVA', value: '7786786687'}\r\n                ]\r\n            },\r\n            secondBank: {\r\n                name: 'secondBank',\r\n                helperText: 'Escoja el banco a transferir'\r\n            },\r\n            value: {\r\n                name: 'value',\r\n                helperText: 'Ingrese el valor de la transacción',\r\n                placeholder: 'Value *'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState: InternalTransaction = {\r\n    type: '',\r\n    date: new Date(),\r\n    serial: '',\r\n    bank: '',\r\n    secondBank: undefined,\r\n    value: 0\r\n}\r\n\r\nexport default function InternalTransactionForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState<InternalTransaction>(initState);\r\n    const [ valueStr, setValueStr ] = useState('');\r\n    const [ newBankOptions, setNewBankOptions ] = useState(texts.body.field.bank.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the bank\r\n        // from the bank array, with this if the user wants \r\n        // to transfer from one bank to another the new options\r\n        // will be the other banks.\r\n        if(name === texts.body.field.bank.name){\r\n            let res = texts.body.field.bank.options.filter(e => e.value !== event.target.value);\r\n            setNewBankOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n\r\n        if(name === texts.body.field.value.name){\r\n            setValueStr(value);\r\n\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setValueStr(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        // this code become the valueStr to number\r\n        const r = /,/gi;\r\n        const newValue = valueStr.replace(r, '');\r\n        setForm({\r\n            ...form,\r\n            value: Number(newValue)\r\n        });\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n        setValueStr('');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                \r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.field.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.field.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.field.serial.helperText}\r\n                        placeholder = {texts.body.field.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **bank ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title} - {e.value}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {\r\n                                form.type === texts.body.field.type.options[0].value \r\n                                ? \r\n                                texts.body.field.bank.helperText.optionOne\r\n                                : \r\n                                form.type === texts.body.field.type.options[1].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionTwo\r\n                                :\r\n                                form.type === texts.body.field.type.options[2].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionThree\r\n                                :\r\n                                texts.body.field.bank.helperText.optionOne\r\n                            }\r\n                                \r\n                        </FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **secondBank ------*/}\r\n                    {\r\n                        // this item will depend on the value in form.type \r\n                        form.type === texts.body.field.type.options[2].value\r\n                        ?\r\n                        <Grid item md={6} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.body.field.secondBank.name}\r\n                            value = {form.secondBank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    newBankOptions.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.value} \r\n                                        >\r\n                                            {e.title} - {e.value}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>{texts.body.field.secondBank.helperText}</FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: item **value ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name={texts.body.field.value.name}\r\n                        value = {valueStr}\r\n                        onChange={thousandSeparator}\r\n                        fullWidth\r\n                        variant = \"outlined\"\r\n                        helperText = {texts.body.field.value.helperText}\r\n                        placeholder = {texts.body.field.value.placeholder}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de recibos de caja'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial de la transacción',\r\n                placeholder: 'Serial'\r\n            },\r\n            third: {\r\n                name: 'third',\r\n                helperText: 'Escoja un tercero para filtrar',\r\n                options: [\r\n                    {title: 'Pedro Mario Carranza', value: '33344554'},\r\n                    {title: 'Eléctricos don pipe', value: '987675656'},\r\n                    {title: 'Maria Perdomo', value: '35765633'}\r\n                ]\r\n            },\r\n            wayPay: {\r\n                name: 'wayPay',\r\n                helperText: 'Escoja la manera de pago',\r\n                options: [\r\n                    {title: 'Efectivo', value: 'efectivo'},\r\n                    {title: 'Consignación', value: 'consignacion'},\r\n                    {title: 'Cheque', value: 'cheque'}\r\n                ]\r\n            },\r\n            concept: {\r\n                name: 'concept',\r\n                helperText: 'Escoja un concepto',\r\n                options: [\r\n                    {title: 'Exequias', value: '12005'},\r\n                    {title: 'Partidas', value: '11002'},\r\n                    {title: 'Donaciones', value: '10250'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    wayPay: '',\r\n    concept: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.fields.serial.helperText}\r\n                        placeholder = {texts.body.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.wayPay.name}\r\n                        value = {form.wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.concept.name}\r\n                        value = {form.concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.concept.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of cash receipt ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de transacciones internas'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: 'Escoja un banco',\r\n                options: [\r\n                    {title: 'Bancolombia', value: '786786765'},\r\n                    {title: 'BBVA', value: '110546502'},\r\n                    {title: 'Galicia', value: '10250345'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    bank: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of internal transaction ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Bank ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.bank.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Item } from \"../../schemas/Item\";\r\n\r\nexport default function itemMapper(item: any | unknown): Item {\r\n  return {\r\n    code: item.code ?? '',\r\n    description: item.description ?? '',\r\n    price: item.price ?? undefined,\r\n    unitMeasure: {\r\n      code: item.unitMeasure?.code ?? '',\r\n      description: item.unitMeasure?.description ?? ''\r\n    } ?? undefined\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport itemMapper from '../../mappers/Item/item.mapper'\r\nimport { Item } from '../../schemas/Item'\r\n\r\nclass ItemService {\r\n  async saveItem(itemData: Item, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/item', itemData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getItems(token: string) : Promise<Item[]> {\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/item', {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n\r\n      const items = responseApi.data.map((item:any) => {\r\n        return itemMapper(item)\r\n      })\r\n\r\n      return items\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ItemService\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Item } from '../../../schemas/Item'\r\nimport ItemService from '../../../services/Item'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear productos'\r\n  },\r\n  body: {\r\n    field: {\r\n      code: {\r\n        name: 'code',\r\n        helperText: 'Escriba el código del producto',\r\n        placeholder: 'Código'\r\n      },\r\n      description: {\r\n        name: 'description',\r\n        helperText: 'Escriba la descripción del producto',\r\n        placeholder: 'Nombre de producto'\r\n      },\r\n      price: {\r\n        name: 'price',\r\n        helperText: 'Escriba el precio en pesos colombianos sin decimales',\r\n        placeholder: 'Precio'\r\n      },\r\n      unitMeasure: {\r\n        name: 'unitMeasure',\r\n        helperText: 'Escoja una unidad de medida',\r\n        options: [\r\n          { description: 'Unidad', code: '70' },\r\n          { description: 'Kilogramo', code: '40' },\r\n          { description: 'Galón', code: '686' },\r\n          { description: 'Metro cúbico', code: '594' },\r\n          { description: 'Metro cuadrado', code: '472' },\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Item\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    code: '',\r\n    description: '',\r\n    price: undefined,\r\n    unitMeasure: undefined\r\n  }\r\n}\r\n\r\nexport default function ItemForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const itemService = new ItemService()\r\n      const itemCreated = await itemService.saveItem(state.form, userContext.token ?? '')\r\n      setState(initState)\r\n      return toast.success(`El producto ${itemCreated.code} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: code ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.code.name}\r\n              value={state.form.code}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.code.helperText}\r\n              placeholder={texts.body.field.code.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: description ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.description.name}\r\n              value={state.form.description}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.description.helperText}\r\n              placeholder={texts.body.field.description.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              name={texts.body.field.price.name}\r\n              value={state.form.price}\r\n              type='number'\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: unit measure ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.unitMeasure.name}\r\n              value={state.form.unitMeasure?.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.unitMeasure.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.unitMeasure.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.unitMeasure.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { ElectronicBill } from '../../schemas/ElectronicBill'\r\n\r\nclass ElectronicBillService {\r\n  async saveBill(billData: ElectronicBill, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/bill/electronic', billData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ElectronicBillService\r\n","import { ElectronicBillFormSchema, ItemComplete, Tax } from \"./schemas/ElectronicBill\"\r\n\r\nconst Utils = {\r\n  buildItem: (form: ElectronicBillFormSchema, applyTaxes: boolean): ItemComplete => {\r\n    let tax = {\r\n      code: '',\r\n      description: '',\r\n      percent: 0,\r\n      taxAmount: 0,\r\n      taxableAmount: 0\r\n    }\r\n\r\n    if (applyTaxes) {\r\n      tax = {\r\n        ...form.selectedTax,\r\n        percent: form.currentPercentTax,\r\n        taxAmount: ((form.currentQuantity * form.currentPrice) * form.currentPercentTax / 100),\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    } else {\r\n      tax = {\r\n        code: '1',\r\n        description: 'Iva',\r\n        percent: 0,\r\n        taxAmount: 0,\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...form.currentItem,\r\n      itemType: form.currentItemType,\r\n      price: form.currentPrice,\r\n      quantity: form.currentQuantity,\r\n      total: (form.currentQuantity * form.currentPrice),\r\n      taxes: [\r\n        tax\r\n      ]\r\n    }\r\n  },\r\n\r\n  buildTaxesForElectronicBill: (items: ItemComplete[]) : Tax[] | [] => {\r\n    let res: Tax[]| any[] = []\r\n    items.forEach(item => {\r\n      res = res.concat(item.taxes)\r\n    })\r\n    console.log(res)\r\n    return res\r\n  }\r\n}\r\n\r\nexport default Utils;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n  table: {\r\n    headers: {\r\n      code: 'Código',\r\n      description: 'Descripción',\r\n      price: 'Precio',\r\n      quantity: 'Cantidad',\r\n      delete: 'Eliminar'\r\n    }\r\n  }\r\n}\r\nexport default function ItemTable({ rows, handleTable }: { rows: Array<any>, handleTable: Function }) {\r\n\r\n  const classes = useStyles();\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setReload(false)\r\n  }, [reload])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{texts.table.headers.code}</TableCell>\r\n            <TableCell>{texts.table.headers.description}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.price}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.quantity}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" >{row.code}</TableCell>\r\n                <TableCell component=\"th\">{row.description}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleTable('REMOVE', row)}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { ElectronicBill, ElectronicBillFormSchema, ItemComplete } from \"../../schemas/ElectronicBill\";\r\nimport Utils from \"../../utils\";\r\n\r\nexport default function electronicBillMapper(form: ElectronicBillFormSchema, items: ItemComplete[]): ElectronicBill {\r\n  return {\r\n    date: form.date,\r\n    orderReference: form.orderReference,\r\n    third: form.third ?? {\r\n      document: '',\r\n      dv: undefined,\r\n      documentType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      organizationType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      liabilityType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      regimeType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      name: undefined,\r\n      lastname: undefined,\r\n      businessName: undefined,\r\n      phone: '',\r\n      address: '',\r\n      email: ''\r\n    },\r\n    wayToPay: form.wayToPay,\r\n    paymentMethod: form.paymentMethod,\r\n    paymentDueDate: form.paymentDueDate,\r\n    note: form.note,\r\n    items: items,\r\n    taxes: Utils.buildTaxesForElectronicBill(items),\r\n    total: form.total,\r\n    totalTaxes: form.totalTaxes,\r\n    totalToPay: form.totalToPay\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd, Save } from '@material-ui/icons'\r\nimport TableComponent from '../Table/TableComponent'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\n// import { Third } from '../../../schemas/Third'\r\nimport { ElectronicBill, ElectronicBillFormSchema } from '../../../schemas/ElectronicBill'\r\nimport ElectronicBillService from '../../../services/ElectronicBill'\r\nimport Utils from '../../../utils'\r\nimport ItemTable from './ItemTable'\r\nimport ThirdService from '../../../services/Third'\r\nimport electronicBillMapper from '../../../mappers/ElectronicBill/electronicBill.mapper'\r\nimport ItemService from '../../../services/Item'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  },\r\n  addButton: {\r\n    width: '100%',\r\n    height: '70%',\r\n    color: '#ffff',\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Facturación electrónica'\r\n  },\r\n  body: {\r\n    field: {\r\n      date: {\r\n        name: 'date',\r\n        helperText: 'Fecha de facturación',\r\n        placeholder: 'Fecha'\r\n      },\r\n      orderReference: {\r\n        name: 'orderReference',\r\n        helperText: 'Escriba la referencia de orden',\r\n        placeholder: 'Código de orden'\r\n      },\r\n      third: {\r\n        name: 'third',\r\n        helperText: 'Escoja el tercero',\r\n        placeholder: 'Tercero'\r\n      },\r\n      wayToPay: {\r\n        name: 'wayToPay',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Contado', code: '1' },\r\n          { description: 'Crédito', code: '2' },\r\n        ]\r\n      },\r\n      paymentMethod: {\r\n        name: 'paymentMethod',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Cheque', code: '20' },\r\n          { description: 'Consignación bancaria', code: '42' },\r\n          { description: 'Efectivo', code: '10' },\r\n          { description: 'Instrumento no definido', code: '1' },\r\n          { description: 'Pago y depósito pre acordado (PPD)', code: '34' },\r\n          { description: 'Tarjeta Crédito', code: '48' },\r\n          { description: 'Tarjeta Débito', code: '49' },\r\n        ]\r\n      },\r\n      paymentDueDate: {\r\n        name: 'paymentDueDate',\r\n        helperText: 'Fecha de pago',\r\n        placeholder: 'AAAA/MM/DD'\r\n      },\r\n      note: {\r\n        name: 'note',\r\n        helperText: 'Nota para la factura',\r\n        placeholder: 'Nota para la factura'\r\n      },\r\n      item: {\r\n        name: 'currentItem',\r\n        helperText: 'Escoja el producto a facturar',\r\n        options: [\r\n          {\r\n            unitMeasure: { code: 12, description: 'Unidad'},\r\n            description: 'Producto de prueba',\r\n            code: '1',\r\n            price: 2500\r\n          }\r\n        ]\r\n      },\r\n      itemType: {\r\n        name: 'currentItemType',\r\n        helperText: 'Tipo de producto',\r\n        options: [\r\n          { description: 'UNSPSC', code: '1' },\r\n          { description: 'GTIN', code: '2' },\r\n          { description: 'Partida Arancelarias', code: '3' },\r\n          { description: 'Estándar de adopción del contribuyente', code: '4' }\r\n        ]\r\n      },\r\n      price: {\r\n        name: 'currentPrice',\r\n        helperText: 'Precio sin impuestos',\r\n        placeholder: 'Precio'\r\n      },\r\n      quantity: {\r\n        name: 'currentQuantity',\r\n        helperText: 'Cantiadad',\r\n        placeholder: 'Cantidad'\r\n      },\r\n      applyTaxes: {\r\n        name: 'applyTaxes',\r\n        helperText: 'Aplicar impuestos'\r\n      },\r\n      tax: {\r\n        name: 'selectedTax',\r\n        helperText: 'Escoja el impuesto',\r\n        options: [\r\n          { code: '1', description: 'IVA' }\r\n        ]\r\n      },\r\n      percent: {\r\n        name: 'currentPercentTax',\r\n        helperText: 'Porcentaje',\r\n        placeholder: '%'\r\n      },\r\n      total: {\r\n        name: 'total',\r\n        helperText: 'Total sin impuestos',\r\n        placeholder: 'Total sin impuestos'\r\n      },\r\n      totalTaxes: {\r\n        name: 'totalTaxes',\r\n        helperText: 'Total de impuestos',\r\n        placeholder: 'Total de impuestos'\r\n      },\r\n      totalToPay: {\r\n        name: 'totalToPay',\r\n        helperText: 'Total final',\r\n        placeholder: 'Total'\r\n      }\r\n    },\r\n    subtitles: {\r\n      payment: 'Información acerca del pago',\r\n      itemsTable: 'Tabla de productos a facturar',\r\n      total: 'Información acerca de los totales de la factura'\r\n    },\r\n    buttons: {\r\n      addProduct: {\r\n        title: 'Agregar'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: ElectronicBillFormSchema\r\n  applyTaxes: boolean\r\n  items: any[]\r\n  selectedItems: any[]\r\n  thirds: any[]\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    date: '',\r\n    orderReference: '',\r\n    third: undefined,\r\n    wayToPay: { code: '', description: '' },\r\n    paymentMethod: { code: '', description: '' },\r\n    paymentDueDate: '',\r\n    note: '',\r\n    currentItem: undefined,\r\n    currentItemType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    currentPrice: 0,\r\n    currentQuantity: 0,\r\n    total: 0,\r\n    totalTaxes: 0,\r\n    totalToPay: 0,\r\n    selectedTax: { code: '', description: ''},\r\n    currentPercentTax: 0\r\n  },\r\n  applyTaxes: false,\r\n  items: [],\r\n  selectedItems: [],\r\n  thirds: []\r\n}\r\n\r\nexport default function ElectronicBillForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const thirdService = new ThirdService()\r\n      const itemService = new ItemService()\r\n      const thirds = await thirdService.getThirds(userContext.token || '')\r\n      const items = await itemService.getItems(userContext.token || '')\r\n      setState({\r\n        ...state,\r\n        thirds: thirds,\r\n        items: items\r\n      })\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | {\r\n    name: string\r\n    value: unknown\r\n  }>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const res = electronicBillMapper(state.form, state.selectedItems)\r\n      const electronicBillService = new ElectronicBillService()\r\n      await electronicBillService.saveBill(res, userContext.token ?? '')\r\n      setState(initState)\r\n      return toast.success(`Factura creada con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  // HandleTable is the handler to add and remove items\r\n  // from the concept table, it also adds or subtracts \r\n  // the value of the total receipt.\r\n  const handleTable = (func: string, selectedItem?: any) => {\r\n    if (func === 'ADD') {\r\n      const item = Utils.buildItem(state.form, state.applyTaxes)\r\n      const total = (state.form.total + item.total)\r\n      const totalTaxes = (state.form.totalTaxes + item.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems\r\n      items.push(item)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n          currentItemType: {\r\n            code: '',\r\n            description: ''\r\n          },\r\n          currentPrice: 0,\r\n          currentQuantity: 0,\r\n          selectedTax: { code: '', description: ''},\r\n          currentPercentTax: 0\r\n        },\r\n        applyTaxes: false,\r\n        selectedItems: items\r\n      })\r\n    }\r\n\r\n    if (func === 'REMOVE') {\r\n      const total = (state.form.total - selectedItem.total)\r\n      const totalTaxes = (state.form.totalTaxes - selectedItem.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems.filter(item => item.code !== selectedItem.code)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n        },\r\n        selectedItems: items\r\n      })\r\n    }\r\n  }\r\n\r\n  const onApplyTaxes = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { checked } = event.target\r\n    console.log(checked)\r\n    setState({\r\n      ...state,\r\n      applyTaxes: checked\r\n    })\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: date ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.date.name}\r\n              value={state.form.date}\r\n              variant='outlined'\r\n              type='date'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.date.helperText}\r\n              placeholder={texts.body.field.date.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: order reference ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.orderReference.name}\r\n              value={state.form.orderReference}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.orderReference.helperText}\r\n              placeholder={texts.body.field.orderReference.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: third ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.third.name}\r\n              value={state.form.third?.document}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.thirds.map((item) =>\r\n                  <MenuItem\r\n                    key={item.document}\r\n                    value={item.document}\r\n                    onClick={() => handleChangeSelect(texts.body.field.third.name, item)}\r\n                  >\r\n                    { item.name !== undefined ? `${item.name} ${item.lastname}` : `${item.businessName}`}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.third.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment ------*/}\r\n\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.wayToPay.name}\r\n              value={state.form.wayToPay.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.wayToPay.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.wayToPay.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.wayToPay.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment method ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.paymentMethod.name}\r\n              value={state.form.paymentMethod.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.paymentMethod.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.paymentMethod.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.paymentMethod.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment due date ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.paymentDueDate.name}\r\n              value={state.form.paymentDueDate}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.paymentDueDate.helperText}\r\n              placeholder={texts.body.field.paymentDueDate.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: note ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.note.name}\r\n              value={state.form.note}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.note.helperText}\r\n              placeholder={texts.body.field.note.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Typography\r\n              variant='h6'\r\n            >\r\n              {texts.body.subtitles.itemsTable}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Divider className={classes.divider} />\r\n          </Grid>\r\n\r\n          <Grid item md={8} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.item.name}\r\n              value={state.form.currentItem?.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.items.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.item.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.item.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.itemType.name}\r\n              value={state.form.currentItemType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.itemType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.itemType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.itemType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={8} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.price.name}\r\n              value={state.form.currentPrice}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: quantity ------*/}\r\n          <Grid item md={4} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.quantity.name}\r\n              value={state.form.currentQuantity}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.quantity.helperText}\r\n              placeholder={texts.body.field.quantity.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            {/* ----- apply taxes check ------*/}\r\n            <FormControlLabel\r\n              control={<Checkbox name={texts.body.field.applyTaxes.name} value={state.applyTaxes} onChange={(e) => onApplyTaxes(e)} color=\"primary\" />}\r\n              label={texts.body.field.applyTaxes.helperText}\r\n            />\r\n          </Grid>\r\n\r\n          {\r\n            state.applyTaxes ?\r\n              (\r\n                <React.Fragment>\r\n                  <Grid item md={6} sm={12} xs={12}>\r\n                    <Select\r\n                      name={texts.body.field.tax.name}\r\n                      value={state.form.selectedTax.code}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      {\r\n                        texts.body.field.tax.options.map((item) =>\r\n                          <MenuItem\r\n                            key={item.description}\r\n                            value={item.code}\r\n                            onClick={() => handleChangeSelect(texts.body.field.tax.name, item)}\r\n                          >\r\n                            {item.description}\r\n                          </MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    <FormHelperText>{texts.body.field.tax.helperText}</FormHelperText>\r\n                  </Grid>\r\n\r\n                  {/* ----- Form: percent ------*/}\r\n                  <Grid item md={3} sm={6} xs={10}>\r\n                    <TextField\r\n                      required={true}\r\n                      name={texts.body.field.percent.name}\r\n                      value={state.form.currentPercentTax}\r\n                      variant='outlined'\r\n                      type='number'\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                      helperText={texts.body.field.percent.helperText}\r\n                      placeholder={texts.body.field.percent.placeholder}\r\n                    />\r\n                  </Grid>\r\n                </React.Fragment>\r\n              ) : ''\r\n          }\r\n\r\n          <Grid item md={3} sm={6} xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"button\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => handleTable(\"ADD\")}\r\n              className={classes.addButton}\r\n              startIcon={<Save />}\r\n            >\r\n              {texts.body.buttons.addProduct.title}\r\n            </Button>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item **concepts table rendering ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <ItemTable rows={state.selectedItems} handleTable={handleTable} />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.total.name}\r\n              value={state.form.total}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.total.helperText}\r\n              placeholder={texts.body.field.total.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total taxes ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalTaxes.name}\r\n              value={state.form.totalTaxes}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalTaxes.helperText}\r\n              placeholder={texts.body.field.totalTaxes.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total to pay ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalToPay.name}\r\n              value={state.form.totalToPay}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalToPay.helperText}\r\n              placeholder={texts.body.field.totalToPay.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    makeStyles,\r\n    Theme,\r\n    Tooltip,\r\n    Typography \r\n} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n// ------------------- Styles ----------------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    card: {\r\n        width: '100%',\r\n        background: '#ffff',\r\n        height: '30vh'\r\n    },\r\n    cardBody: {\r\n        marginTop: '8vh',\r\n    },\r\n    cardPrefix: {\r\n        fontSize: '3vh'\r\n    },\r\n    cardPorcent: {\r\n        fontSize: '2vh'\r\n    }\r\n}));\r\n\r\n// ---------- Type for the info from props ----------\r\ntype data = {\r\n    title: string,\r\n    value: string,\r\n    prefix: string,\r\n    percent: {\r\n        value: number,\r\n        tooltip: string,\r\n        prefix: string\r\n    }\r\n}\r\n\r\nexport default function BalanceCard({ data }: {data: data}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                {/* -------------- Header ----------- */}\r\n                <Typography variant=\"subtitle2\">\r\n                    {data.title}\r\n                </Typography>\r\n                <Divider />\r\n                <Typography\r\n                variant={\r\n                    // if the value is too big this code reduces the font size\r\n                    data.value.length <= 9 ? \"h3\" : \"h4\"\r\n                }\r\n                color=\"primary\"\r\n                className={classes.cardBody}\r\n                >\r\n                    {data.value}\r\n                    <span className={classes.cardPrefix}>\r\n                        {data.prefix}\r\n                    </span>\r\n                </Typography>\r\n\r\n                {/*This section has the code for porcent respect previous month */}\r\n                <Tooltip title={data.percent.tooltip}>\r\n                    <Typography\r\n                        align=\"right\"\r\n                        variant=\"subtitle1\"\r\n                        color={\r\n                        // if the value is negative this code changes the font color\r\n                        data.percent.value >= 0\r\n                            ? \"primary\"\r\n                            : \"secondary\"\r\n                        }\r\n                    >\r\n                        {\r\n                        // if the value is negative this code changes the icon\r\n                        data.percent.value >= 0 ? (\r\n                            <ArrowUpwardIcon className={classes.cardPorcent} />\r\n                        ) : (\r\n                            <ArrowDownwardIcon className={classes.cardPorcent} />\r\n                        )\r\n                        }{\" \"}\r\n                        {data.percent.value}{\" \"}\r\n                        <span className={classes.cardPorcent}>\r\n                        {data.percent.prefix}\r\n                        </span>\r\n                    </Typography>\r\n                </Tooltip>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer\r\n} from \"recharts\";\r\n\r\n// this data is just as example // data for the graphic\r\nconst data = [\r\n    {\r\n        name: \"Enero\",\r\n        uv: 4000,\r\n    },\r\n    {\r\n        name: \"Febrero\",\r\n        uv: 3000,\r\n    },\r\n    {\r\n        name: \"Marzo\",\r\n        uv: 2000,\r\n    },\r\n    {\r\n        name: \"Abril\",\r\n        uv: 2780,\r\n    },\r\n    {\r\n        name: \"Mayo\",\r\n        uv: 5698,\r\n    },\r\n    {\r\n        name: \"Junio\",\r\n        uv: 6657,\r\n    }\r\n];\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        width: '90vh',\r\n        height: '27vh',\r\n    }\r\n}));\r\n\r\nexport default function LineGraphic() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5\r\n                    }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                  \r\n                        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider, \r\n    IconButton,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    form: {\r\n        marginTop: '5vh'\r\n    },\r\n    submitButton: {\r\n        textAlign: 'right'\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte caja diario'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'date',\r\n                helperText: 'Fecha'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    date: new Date(),\r\n}\r\n\r\nexport default function DailyReportForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Typography\r\n                variant=\"subtitle2\"\r\n                color=\"inherit\"\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </div>\r\n            \r\n            <Divider />\r\n\r\n            <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>\r\n                <TextField\r\n                required={true}\r\n                name = {texts.body.fields.from.name}\r\n                value = {form.date}\r\n                fullWidth\r\n                type = 'date'\r\n                onChange = {handleChange}\r\n                helperText = {texts.body.fields.from.helperText}\r\n                />\r\n\r\n                <div className={classes.submitButton}>\r\n                    <IconButton\r\n                    type=\"submit\"\r\n                    className={classes.submitButton}\r\n                    >\r\n                        <NoteAdd fontSize={\"small\"} color=\"primary\"/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Theme,\r\n    Typography \r\n} from '@material-ui/core';\r\nimport BalanceCard from './Card/BalanceCard';\r\nimport LineGraphic from './Graphics/LineGraphic/LineGraphic';\r\nimport DailyReportForm from './DailyReport/DailyReportForm';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    container: {\r\n        marginTop: '10vh',\r\n        padding: '0'\r\n    },\r\n    gridCard: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    cardGraphic: {\r\n        width: '100%',\r\n        background: '#ffff',\r\n        height: '30vh'\r\n    },\r\n    \r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Bienvenido',\r\n        user: 'Santiago Marin'\r\n    },\r\n    body: {\r\n        cards: {\r\n            cashBalance: {\r\n                title: 'Saldo de Caja',\r\n                value: '20.000',\r\n                prefix: '$',\r\n                percent: {\r\n                    value: 20,\r\n                    tooltip: 'Relación en procentaje respecto a mes anterior',\r\n                    prefix: '%'\r\n                }\r\n            },\r\n            bankBalance: {\r\n                title: 'Saldo de Banco',\r\n                value: '2.000.000',\r\n                prefix: '$',\r\n                percent: {\r\n                    value: -12,\r\n                    tooltip: 'Relación en procentaje respecto a mes anterior',\r\n                    prefix: '%'\r\n                }\r\n            },\r\n            percentBalance: {\r\n                title: 'Respecto mes anterior',\r\n                value: '15',\r\n                prefix: '%',\r\n                percent: {\r\n                    value: -2,\r\n                    tooltip: 'Relación en procentaje respecto a año anterior',\r\n                    prefix: '%'\r\n                }\r\n            },\r\n            respectPreviousMonth: {\r\n                title: 'Respecto mes anterior',\r\n                value: -20.2,\r\n                prefix: '%'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function IndexApp() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {/* -------------------- Header --------------- */}\r\n            <React.Fragment>\r\n                <Typography\r\n                variant=\"h4\"\r\n                >\r\n                    {texts.header.title}, <span>{texts.header.user}</span>\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            {/* -- Cards to show the values and percentages of the company --*/}\r\n            <React.Fragment>\r\n                <Container className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        {/* --------------------- *Cash balance card ------------------ */}\r\n                        <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n                            <BalanceCard data={texts.body.cards.cashBalance} />\r\n                        </Grid>\r\n\r\n                        {/* --------------------- *Bank balance card ------------------ */}\r\n                        <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n                            <BalanceCard data={texts.body.cards.bankBalance} />\r\n                        </Grid>\r\n\r\n                        {/* -------------------- *Percent balance card ----------------- */}\r\n                        <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n                            <BalanceCard data={texts.body.cards.percentBalance} />\r\n                        </Grid>\r\n                        \r\n                        {/* -------------------- *Graphic balance card ----------------- */}\r\n                        <Grid item md={8} sm={12} xs={12} className={classes.gridCard}>\r\n                            <Card className={classes.cardGraphic}>\r\n                                <CardContent>\r\n                                    <LineGraphic />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                        {/* -------------------- *Daily report form card ----------------- */}\r\n                        <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n                            <Card className={classes.cardGraphic}>\r\n                                <CardContent>\r\n                                    <DailyReportForm />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/User'\r\nimport { UserContextType } from '../../schemas/User'\r\nimport { urls } from '../../urls'\r\n\r\nexport default function ProtectRoute({ children, ...rest }: { children: ReactElement }) {\r\n\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        userContext.id ? children : <Redirect to={urls.page.login} />\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport MainMenu from '../MainMenu/MainMenu';\r\nimport AppBarComponent from '../AppBar/AppBarComponent';\r\nimport CashReceiptForm from '../CashReceipt/CashReceiptForm';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport ThirdForm from '../Third/ThirdForm';\r\nimport ThirdMigration from '../Third/ThirdMigration';\r\nimport InternalTransactionForm from '../InternalTransaction/InternalTransactionForm';\r\nimport CashReceiptReport from '../CashReceipt/CashReceiptReport';\r\nimport InternalTransactionReport from '../InternalTransaction/InternalTransactionReport';\r\nimport ItemForm from '../Item/ItemForm';\r\nimport ElectronicBillForm from '../ElectronicBill/ElectronicBillForm';\r\nimport IndexApp from '../Index/IndexApp';\r\nimport ProtectRoute from '../../ComponentsForProtectRoutes/ProtectRoute';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        minHeight: '100vh',\r\n        background: '#fafafa',\r\n    },\r\n    body: {\r\n        display: 'flex'\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function ContainerApp() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <div className={classes.body}>\r\n\r\n                <div>\r\n                    <MainMenu/>\r\n                </div>\r\n\r\n                <div className={classes.main}>\r\n\r\n                    <AppBarComponent />\r\n\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route path={urls.app.main.home}>\r\n                            <ProtectRoute>\r\n                                <IndexApp />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.form}>\r\n                            <ProtectRoute>\r\n                                <ThirdForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.thirdMigrationForm}>\r\n                            <ProtectRoute>\r\n                                <ThirdMigration />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.item.form}>\r\n                            <ProtectRoute>\r\n                                <ItemForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.form}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.electronicBill.form}>\r\n                            <ProtectRoute>\r\n                                <ElectronicBillForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.report}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.form}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.report}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { User } from \"../../schemas/User\";\r\n\r\nexport default function userMapper(user: any | unknown): User {\r\n  return {\r\n    id: user.id ?? '',\r\n    email: user.email ?? '',\r\n    password: user.password ?? '',\r\n    name: user.name ?? '',\r\n    lastname: user.lastname ?? '',\r\n    entityId: user.entityId ?? '',\r\n    state: user.state ?? '',\r\n    permissions: user.permissions ?? [''],\r\n    token: user.token ?? ''\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport jwt from 'jwt-decode'\r\nimport userMapper from '../../mappers/User/user.mapper'\r\nimport { User } from '../../schemas/User'\r\n\r\ntype jwtDecode = {\r\n  data: any\r\n}\r\n\r\nclass UserService {\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/login', { email, password })\r\n      const response = responseApi.data\r\n      if (!response.token) throw new Error('No recuperó token')\r\n      const tokenData = jwt<jwtDecode>(response.token)\r\n      const userData = tokenData.data\r\n      userData.token = response.token\r\n      const user = userMapper(userData)\r\n\r\n      return user\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getUsers(token: string) {\r\n\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/user', {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async saveUser(userData: User, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/user', userData, {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserService\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport UserService from '../../../services/User/index'\r\nimport { urls } from '../../../urls'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  state: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    title: 'Inicia sesión',\r\n    logo: {\r\n      path: '/images/logotipo-crecer-dmc.svg',\r\n      alt: 'logotipo de crecer dmc'\r\n    }\r\n  },\r\n  state: {\r\n    field: {\r\n      email: {\r\n        name: 'email',\r\n        label: 'Correo'\r\n      },\r\n      password: {\r\n        name: 'password',\r\n        label: 'Contraseña'\r\n      },\r\n      rememberCheck: {\r\n        value: 'remember',\r\n        label: 'Recordarme'\r\n      },\r\n      signinButton: {\r\n        title: 'Entrar'\r\n      }\r\n    },\r\n    footer: {\r\n      forgotPasswordLink: 'Olvidaste tu contraseña?',\r\n      createAccountLink: 'Aún no tienes un usuario?',\r\n      copyright: 'CRECER DMC'\r\n    }\r\n  }\r\n}\r\n\r\n// ------------- Init state -----------\r\ninterface LoginForm {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst initState: LoginForm = {\r\n  email: '',\r\n  password: ''\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        {texts.state.footer.copyright}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default function SignIn() {\r\n\r\n  const { userContext, setUserContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const [state, setState] = useState<LoginForm>(initState)\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (userContext?.id) {\r\n      history.push(urls.app.main.home)\r\n    }\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  async function onLogin() {\r\n    try {\r\n      const userService = new UserService()\r\n      const user = await userService.login(state.email, state.password)\r\n      if (user) {\r\n        setUserContext(user)\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n    history.push(urls.app.main.home)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        {/* ------- *Header --------- */}\r\n        <Avatar className={classes.avatar}>\r\n          <img\r\n            src={texts.header.logo.path}\r\n            alt={texts.header.logo.alt}\r\n          />\r\n        </Avatar>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {texts.header.title}\r\n        </Typography>\r\n\r\n        {/* ------- *Body ----------- */}\r\n        <form className={classes.state} noValidate>\r\n\r\n          {/* ----- Form: item **email ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={state.email}\r\n            id={texts.state.field.email.name}\r\n            label={texts.state.field.email.label}\r\n            name={texts.state.field.email.name}\r\n            autoFocus\r\n          />\r\n\r\n          {/* ----- Form: item **password ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={state.password}\r\n            onChange={handleChange}\r\n            name={texts.state.field.password.name}\r\n            label={texts.state.field.password.label}\r\n            type=\"password\"\r\n            id={texts.state.field.password.name}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          {/* ----- Form: item **remember check ------*/}\r\n          <FormControlLabel\r\n            control={<Checkbox value={texts.state.field.rememberCheck.value} color=\"primary\" />}\r\n            label={texts.state.field.rememberCheck.label}\r\n          />\r\n\r\n          <Button\r\n            onClick={onLogin}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {texts.state.field.signinButton.title}\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.forgotPasswordLink}\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.createAccountLink}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Login from '../Login/Login';\r\n\r\nexport default function ContainerApp() {\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline/>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route exact path={urls.page.home} >\r\n                            {/* here will be the home component */}\r\n                            <h1>Home</h1>\r\n                        </Route>\r\n                        <Route path={urls.page.login}>\r\n                            <Login />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GlobalProvider from './contexts'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport theme from './theme'\r\nimport ContainerApp from './components/ComponentsForApp/ContainerApp/ContainerApp';\r\nimport { urls } from './urls';\r\nimport ContainerPage from './components/ComponentsForPage/ContainerPage/ContainerPage';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <GlobalProvider>\r\n        {\r\n          // This proyect uses the url.sts file to manage the urls\r\n        }\r\n\r\n        <Router>\r\n          <Switch>\r\n            {\r\n              // the page container has all the components\r\n              // that are part of Crecer´s single page\r\n            }\r\n            <Route path={urls.page.home}>\r\n              <ContainerPage />\r\n            </Route>\r\n\r\n            {\r\n              // the app container has all the components\r\n              // that are part of Crecer App\r\n            }\r\n            <Route path={urls.app.index}>\r\n              <ContainerApp />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        <ToastContainer/>\r\n      </GlobalProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}