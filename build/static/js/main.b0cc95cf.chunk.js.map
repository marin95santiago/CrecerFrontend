{"version":3,"sources":["mappers/User/user.mapper.ts","mappers/Entity/entity.mapper.ts","utils.ts","contexts/User/index.tsx","contexts/Entity/index.tsx","contexts/index.tsx","theme.ts","urls.ts","components/ComponentsForApp/MainMenu/MainMenu.tsx","components/ComponentsForApp/AppBar/AppBarComponent.tsx","components/ComponentsForApp/Table/TableComponent.tsx","components/ComponentsForApp/CashReceipt/CashReceiptForm.tsx","mappers/Third/third.mapper.ts","services/Third/index.ts","mappers/Common/comon.mapper.ts","services/Plemsi/index.ts","components/ComponentsForApp/Third/ThirdForm.tsx","components/ComponentsForApp/DataTable/DataTable.tsx","components/ComponentsForApp/Third/ThirdList.tsx","components/ComponentsForApp/Third/ThirdMigration.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionForm.tsx","components/ComponentsForApp/CashReceipt/CashReceiptReport.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionReport.tsx","mappers/Item/item.mapper.ts","services/Item/index.ts","components/ComponentsForApp/Item/ItemForm.tsx","mappers/ElectronicBill/electronicBill.mapper.ts","services/ElectronicBill/index.ts","components/ComponentsForApp/ElectronicBill/ItemTable.tsx","components/ComponentsForApp/ElectronicBill/ElectronicBillForm.tsx","components/ComponentsForApp/Index/Card/BalanceCard.tsx","components/ComponentsForApp/Index/Graphics/LineGraphic/LineGraphic.tsx","components/ComponentsForApp/Index/DailyReport/DailyReportForm.tsx","components/ComponentsForApp/Index/IndexApp.tsx","components/ComponentsForProtectRoutes/ProtectRoute.tsx","components/ComponentsForApp/ElectronicBill/ElectronicBillList.tsx","components/ComponentsForApp/ContainerApp/ContainerApp.tsx","services/User/index.ts","components/ComponentsForPage/Login/Login.tsx","components/ComponentsForPage/ContainerPage/ContainerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userMapper","user","_user$id","_user$email","_user$password","_user$name","_user$lastname","_user$entityId","_user$state","_user$permissions","_user$token","id","email","password","name","lastname","entityId","state","permissions","token","entityMapper","entity","_entity$id","_entity$name","_entity$entityTypeCod","_entity$document","_entity$email","_entity$phone","_entity$apiKeyPlemsi","_entity$state","_entity$resolution","_entity$resolutionTex","_entity$lastElectroni","entityTypeCode","document","signatories","signatoriesMapper","undefined","address","addressMapper","phone","apiKeyPlemsi","resolution","resolutionText","lastElectronicBillNumber","_address$description","_address$city$code","_address$city$descrip","description","city","code","map","signatory","_signatory$name","_signatory$lastname","_signatory$document","_signatory$documentTy","_signatory$documentTy2","documentType","Utils","getUserByCookieAuth","Cookies","get","jwt","data","getEntityByCookieAuth","removeCookieAuth","remove","buildItem","form","applyTaxes","tax","percent","taxAmount","taxableAmount","_objectSpread","selectedTax","currentPercentTax","currentQuantity","currentPrice","currentItem","itemType","currentItemType","price","quantity","total","taxes","buildTaxesForElectronicBill","items","res","forEach","item","concat","getDocumentFromUrl","search","match","parseQueryString","url","queryString","split","_step","params","result","_iterator","_createForOfIteratorHelper","s","n","done","_param$split","value","_param$split2","_slicedToArray","key","push","_defineProperty","decodeURIComponent","err","e","f","Context","createContext","initialContextUserState","UserContextProvider","_ref","children","auth","_useState","useState","_useState2","userContext","setUserContext","_jsx","Provider","initialState","EntityContextProvider","entityContext","setEntityContext","GlobalProvider","props","theme","createMuiTheme","palette","primary","main","lightBlue","secondary","deepOrange","urls","home","login","index","third","thirdMigrationForm","list","cashReceipt","report","electronicBill","internalTransaction","useStyles","makeStyles","createStyles","root","minHeight","width","backgroundColor","position","rootResponsive","maxWidth","fixed","fixedResponsive","hidden","display","textPrimary","color","fontSize","icon","menuTitle","fontWeight","textAlign","secondaryMenuTitle","logo","nestedList","background","nested","paddingLeft","spacing","initState","selected","menu","itemHeader","title","path","alt","InsertChart","permission","view","Contacts","indexedMenu","open","ContactMail","create","RecentActors","migrate","Keyboard","movement_receipt","ImportExport","movement_internal","QueueRounded","Description","electronic_bill","FindInPage","Assignment","MainMenu","classes","history","useHistory","_React$useState","React","_React$useState2","setState","useContext","UserContext","sizeScreen","setSizeScreen","matches","useMediaQuery","handleListMenu","event","savedItem","className","_jsxs","List","component","aria-label","ListItem","ListItemIcon","onClick","src","Typography","variant","Divider","some","Fragment","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","indexedItem","grow","flexGrow","toolBar","borderRadius","shape","fade","common","white","marginRight","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","sectionDesktop","sectionMobile","AppBarComponent","anchorEl","setAnchorEl","_React$useState3","_React$useState4","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","AppBar","elevation","Toolbar","SearchIcon","InputBase","placeholder","input","inputProps","edge","MoreIcon","table","minWidth","texts","headers","concept","detail","delete","TableComponent","rows","handleTable","reload","setReload","useEffect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","newValue","Number","replace","handleDelete","DeleteIcon","margin","marginBottom","divider","alignRight","addButton","initStateForm","type","date","Date","serial","classThird","valueText","valueNumber","wayPay","conceptTable","header","fields","helperText","options","_id","typeThird","typeDocument","enterpriceName","bank","helperTextIng","helperTextEgr","numberAccount","typeAccount","conceptDetail","conceptValue","buttonAddConcept","body","subtitle","CashReceiptForm","setForm","_useState3","_useState4","setWayPay","_useState5","_useState6","setBank","_useState7","_useState8","modalBank","setModalBank","_useState9","_useState10","setConceptTable","_useState11","_useState12","setConcept","_useState13","_useState14","setConceptDetail","_useState15","_useState16","setConceptValue","_useState17","_useState18","setTotal","handleChange","_e$target","target","prev","handleChangeSelect","handleModalBank","cond1","cond2","func","_toConsumableArray","console","log","newArray","splice","onSubmit","preventDefault","arrayWayPay","handleSubmit","Grid","container","md","sm","xs","Select","fullWidth","onChange","FormHelperText","TextField","Help","_e$target2","newInput","join","reverse","output","aux","paginator","Math","ceil","length","i","j","Button","size","startIcon","Save","NoteAdd","Cancel","thirdMapper","_third$entityId","_third$document","_third$dv","_third$documentType","_third$organizationTy","_third$liabilityType","_third$regimeType","_third$name","_third$lastname","_third$businessName","_third$phone","_third$address","_third$city","_third$email","dv","organizationType","liabilityType","regimeType","businessName","ThirdService","_classCallCheck","_createClass","_saveThird","_asyncToGenerator","_regeneratorRuntime","mark","_callee","thirdData","responseApi","wrap","_context","next","axios","post","authorization","sent","abrupt","t0","stop","_x","_x2","apply","arguments","_updateThird","_callee2","_context2","put","_x3","_x4","_getThirds","_callee3","thirds","_context3","limit","lastEvaluatedKey","JSON","stringify","_x5","_x6","_getThirdByDocument","_callee4","_context4","_x7","_x8","listObject","object","hasOwnProperty","PlemsiService","_getCities","apikey","process","_getBill","number","preview","thirdClassTitle","loadingContainer","bottom","right","opacity","paddingTop","field","one","two","error","errorOnMail","errorOnDocument","cities","loading","isEdit","ThirdForm","_state$form$name","_state$form$lastname","_state$form$dv","_state$form$businessN","_state$form$city$code","_state$form$city","useLocation","EntityContext","_loadData","_entityContext$apiKey","plemsiService","_userContext$token","thirdService","getCities","getThirdByDocument","loadData","test","_ref3","thirdCreated","_userContext$token2","_userContext$token3","serverError","toast","updateThird","saveThird","success","isAxiosError","response","message","disabled","required","Box","CircularProgress","DataTable","style","DataGrid","columns","getRowId","keyId","pageSize","onCellEditCommit","gridEdit","onGridEdit","loadMoreButton","buttonLoadMore","label","headerName","editable","valueGetter","getValue","renderCell","ActionButtons","loadMoreButtonDisabled","_props$params$row$doc","onEdit","Edit","ThirdList","getThirds","onLoadMore","_ref2","thirdToEdit","selectedThird","thirdUpdated","find","CloudDownload","contentAside","lastThird","secondName","lastName","companyName","newThird","aside","content","ThirdMigration","newThirdOptions","setNewThirdOptions","filter","optionOne","optionTwo","optionThree","secondBank","InternalTransactionForm","valueStr","setValueStr","newBankOptions","setNewBankOptions","from","to","CashReceiptReport","itemMapper","_item$code","_item$description","_item$price","_code$description","_item$unitMeasure$cod","_item$unitMeasure","_item$unitMeasure$des","_item$unitMeasure2","_code$description2","_item$itemType$code","_item$itemType","_item$itemType$descri","_item$itemType2","unitMeasure","ItemService","_saveItem","itemData","_getItems","ItemForm","_state$form$price","_state$form$unitMeasu","_state$form$unitMeasu2","_state$form$itemType$","_state$form$itemType","itemService","itemCreated","saveItem","electronicBillMapper","formToSchema","_form$third","orderReference","wayToPay","paymentMethod","paymentDueDate","note","totalTaxes","totalToPay","schemaToForm","bill","ElectronicBillService","_saveBill","billData","_getElectronicBills","bills","ElectronicBillMapper","electronicBills","_getBillByNumber","ItemTable","disabledForm","subtitles","payment","itemsTable","buttons","addProduct","selectedItems","ElectronicBillForm","_state$form$third$doc","_state$form$third","_state$form$currentIt","_state$form$currentIt2","copy","billPlemsi","electronicBillService","_bill$form$number","thirdsRes","itemsRes","_thirdService","_itemService","_thirds","_items","param","getBillByNumber","getBill","getItems","toString","_objectSpread3","saveBill","entityInformation","selectedItem","FormControlLabel","control","Checkbox","checked","onApplyTaxes","Link","pathname","card","cardBody","marginTop","cardPrefix","cardPorcent","BalanceCard","Card","CardContent","prefix","Tooltip","tooltip","ArrowUpwardIcon","ArrowDownwardIcon","uv","LineGraphic","ResponsiveContainer","BarChart","top","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Bar","fill","submitButton","DailyReportForm","gridCard","cardGraphic","cards","cashBalance","bankBalance","percentBalance","respectPreviousMonth","IndexApp","Container","ProtectRoute","rest","_objectWithoutProperties","Route","render","Redirect","_props$params$row$num","onView","Visibility","_props$params$row$num2","onCopy","PostAdd","window","warn","ElectronicBillList","getElectronicBills","newBills","ContainerApp","CssBaseline","Switch","InternalTransactionReport","UserService","_login","tokenData","userData","entityData","Error","set","_getUsers","_saveUser","paper","flexDirection","avatar","submit","rememberCheck","signinButton","footer","forgotPasswordLink","createAccountLink","copyright","Copyright","href","getFullYear","SignIn","_onLogin","userService","Avatar","noValidate","autoFocus","autoComplete","mt","exact","Login","App","MuiThemeProvider","Router","ContainerPage","ToastContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0cc95cf.chunk.js","sourcesContent":["import { User } from \"../../schemas/User\";\r\n\r\nexport default function userMapper(user: any | unknown): User {\r\n  return {\r\n    id: user.id ?? '',\r\n    email: user.email ?? '',\r\n    password: user.password ?? '',\r\n    name: user.name ?? '',\r\n    lastname: user.lastname ?? '',\r\n    entityId: user.entityId ?? '',\r\n    state: user.state ?? '',\r\n    permissions: user.permissions ?? [''],\r\n    token: user.token ?? ''\r\n  }\r\n}\r\n","import { Address, Entity, Signatory } from \"../../schemas/Entity\";\r\n\r\nexport default function entityMapper(entity: any | unknown): Entity {\r\n  return {\r\n    id: entity.id ?? '',\r\n    name: entity.name ?? '',\r\n    entityTypeCode: entity.entityTypeCode ?? '',\r\n    document: entity.document ?? '',\r\n    signatories: entity.signatories ? signatoriesMapper(entity.signatories) : undefined,\r\n    address: entity.address ? addressMapper(entity.address) : undefined,\r\n    email: entity.email ?? '',\r\n    phone: entity.phone ?? '',\r\n    apiKeyPlemsi: entity.apiKeyPlemsi ?? '',\r\n    state: entity.state ?? '',\r\n    resolution: entity.resolution ?? '',\r\n    resolutionText: entity.resolutionText ?? '',\r\n    lastElectronicBillNumber: entity.lastElectronicBillNumber ?? 0\r\n  }\r\n}\r\n\r\nfunction addressMapper(address: any): Address {\r\n  return {\r\n    description: address.description ?? '',\r\n    city: {\r\n      code: address.city.code ?? '',\r\n      description: address.city.description ?? ''\r\n    }\r\n  }\r\n}\r\n\r\nfunction signatoriesMapper(signatories: any[]): Signatory[] {\r\n  const response = signatories.map(signatory => {\r\n    return {\r\n      name: signatory.name ?? '',\r\n      lastname: signatory.lastname ?? '',\r\n      document: signatory.document ?? '',\r\n      documentType: {\r\n        code: signatory.documentType.code ?? '',\r\n        description: signatory.documentType.description ?? ''\r\n      }\r\n    }\r\n  })\r\n\r\n  return response\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport jwt from 'jwt-decode'\r\nimport { ElectronicBillFormSchema, ItemComplete, Tax } from \"./schemas/ElectronicBill\"\r\nimport userMapper from './mappers/User/user.mapper'\r\nimport { User } from './schemas/User'\r\nimport entityMapper from './mappers/Entity/entity.mapper'\r\nimport { Entity } from './schemas/Entity'\r\n\r\nconst Utils = {\r\n  getUserByCookieAuth: () : User | undefined => {\r\n    type jwtDecode = {\r\n      data: {\r\n        user: any\r\n      }\r\n    }\r\n    const token = Cookies.get('auth')\r\n\r\n    if (token === undefined) return undefined\r\n\r\n    const tokenData = jwt<jwtDecode>(token)\r\n    const user = userMapper(tokenData.data.user)\r\n    user.token = token\r\n    return user\r\n  },\r\n\r\n  getEntityByCookieAuth: () : Entity | undefined => {\r\n    type jwtDecode = {\r\n      data: {\r\n        entity: any\r\n      }\r\n    }\r\n    const token = Cookies.get('auth')\r\n\r\n    if (token === undefined) return undefined\r\n\r\n    const tokenData = jwt<jwtDecode>(token)\r\n    const entity = entityMapper(tokenData.data.entity)\r\n    return entity\r\n  },\r\n\r\n  removeCookieAuth: () => {\r\n    Cookies.remove('auth')\r\n  },\r\n\r\n  buildItem: (form: ElectronicBillFormSchema, applyTaxes: boolean): ItemComplete => {\r\n    let tax = {\r\n      code: '',\r\n      description: '',\r\n      percent: 0,\r\n      taxAmount: 0,\r\n      taxableAmount: 0\r\n    }\r\n\r\n    if (applyTaxes) {\r\n      tax = {\r\n        ...form.selectedTax,\r\n        percent: form.currentPercentTax,\r\n        taxAmount: ((form.currentQuantity * form.currentPrice) * form.currentPercentTax / 100),\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    } else {\r\n      tax = {\r\n        code: '1',\r\n        description: 'Iva',\r\n        percent: 0,\r\n        taxAmount: 0,\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...form.currentItem,\r\n      itemType: form.currentItemType,\r\n      price: form.currentPrice,\r\n      quantity: form.currentQuantity,\r\n      total: (form.currentQuantity * form.currentPrice),\r\n      taxes: [\r\n        tax\r\n      ]\r\n    }\r\n  },\r\n\r\n  buildTaxesForElectronicBill: (items: ItemComplete[]) : Tax[] | [] => {\r\n    let res: Tax[]| any[] = []\r\n    items.forEach(item => {\r\n      res = res.concat(item.taxes)\r\n    })\r\n    return res\r\n  },\r\n\r\n  getDocumentFromUrl: (search: string) : string | undefined => {\r\n    if (search !== undefined) {\r\n      const regex = /=\\s*(\\d+)/\r\n      const match = search.match(regex)\r\n\r\n      if (match) {\r\n        const document = match[1]\r\n        return document\r\n      }\r\n    } else {\r\n      return undefined\r\n    }\r\n  },\r\n\r\n  parseQueryString: (url: string) : { [key: string]: string }[] => {\r\n    const queryString = url.split('?')[1]\r\n    if (!queryString) {\r\n      return []\r\n    }\r\n    const params = queryString.split('&')\r\n    const result = []\r\n    for (const param of params) {\r\n      const [key, value] = param.split('=')\r\n      result.push({ [key]: decodeURIComponent(value) })\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nexport default Utils","import { createContext, ReactNode, useState } from 'react'\r\nimport { User } from '../../schemas/User/index'\r\nimport Utils from '../../utils'\r\n\r\nconst Context = createContext({})\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n}\r\n\r\nexport const initialContextUserState: User = {\r\n  id: '',\r\n  email: '',\r\n  name: '',\r\n  lastname: '',\r\n  entityId: '',\r\n  state: '',\r\n  permissions: ['']\r\n}\r\n\r\nexport function UserContextProvider({ children }: Props) {\r\n  const auth = Utils.getUserByCookieAuth()\r\n\r\n  const [userContext, setUserContext] = useState<User>(auth ?? initialContextUserState)\r\n\r\n  return (\r\n    <Context.Provider value={{ userContext, setUserContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context","import { createContext, ReactNode, useState } from 'react'\r\nimport { Entity } from '../../schemas/Entity/index'\r\nimport Utils from '../../utils'\r\n\r\nconst Context = createContext({})\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n}\r\n\r\nconst initialState: Entity = {\r\n  id: '',\r\n  name: '',\r\n  entityTypeCode: '',\r\n  document: '',\r\n  signatories: undefined,\r\n  address: undefined,\r\n  email: undefined,\r\n  phone: undefined,\r\n  apiKeyPlemsi: undefined,\r\n  state: '',\r\n  resolution: undefined,\r\n  resolutionText: undefined,\r\n  lastElectronicBillNumber: undefined\r\n}\r\n\r\nexport function EntityContextProvider({ children }: Props) {\r\n  const auth = Utils.getEntityByCookieAuth()\r\n  const [entityContext, setEntityContext] = useState<Entity>(auth ?? initialState)\r\n  return (\r\n    <Context.Provider value={{ entityContext, setEntityContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context\r\n","import * as React from 'react'\r\nimport { UserContextProvider } from './User/index'\r\nimport { EntityContextProvider } from './Entity/index'\r\n\r\nexport default function GlobalProvider(props: any) {\r\n  return (\r\n    <EntityContextProvider>\r\n    <UserContextProvider>\r\n      {props.children}\r\n    </UserContextProvider>\r\n    </EntityContextProvider>\r\n  )\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {\r\n    deepOrange,\r\n    lightBlue,\r\n} from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: lightBlue[400]\r\n        },\r\n        secondary: {\r\n            main: deepOrange['A400']\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","export const urls = {\r\n    page: {\r\n      home: '/page',\r\n      login: '/page/login'\r\n    },\r\n    app: {\r\n      index: '/app',\r\n      main: {\r\n        home: '/app/home',\r\n        third: {\r\n          form: '/app/third/form',\r\n          thirdMigrationForm: '/app/third/migration/form',\r\n          list: '/app/third/list'\r\n        },\r\n        cashReceipt: {\r\n          form: '/app/cash-receipt/form',\r\n          report: '/app/cash-receipt/report'\r\n        },\r\n        electronicBill: {\r\n          form: '/app/electronic-bill/form',\r\n          list: '/app/electronic-bill/list'\r\n        },\r\n        internalTransaction: {\r\n          form: '/app/internal-transaction/form',\r\n          report: '/app/internal-transaction/report'\r\n        },\r\n        item: {\r\n          form: '/app/item/form'\r\n        }\r\n      }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { urls } from '../../../urls'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {\r\n  InsertChart,\r\n  Assignment,\r\n  Keyboard,\r\n  ImportExport,\r\n  Contacts,\r\n  FindInPage,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  ContactMail,\r\n  QueueRounded,\r\n  RecentActors,\r\n  Description\r\n} from '@material-ui/icons'\r\nimport { Collapse, Typography } from '@material-ui/core'\r\nimport permissions from '../../../permissions.json'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    rootResponsive: {\r\n      minHeight: '100%',\r\n      maxWidth: '60px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    fixed: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n    },\r\n    fixedResponsive: {\r\n      minHeight: '100vh',\r\n      width: '60px',\r\n    },\r\n    hidden: {\r\n      display: 'none'\r\n    },\r\n    textPrimary: {\r\n      color: '#ffff',\r\n      fontSize: '1rem'\r\n    },\r\n    icon: {\r\n      color: '#ffff',\r\n      width: '1rem'\r\n    },\r\n    menuTitle: {\r\n      color: '#ffff',\r\n      fontWeight: 'bolder',\r\n      fontSize: '1.6rem',\r\n      textAlign: 'center'\r\n    },\r\n    secondaryMenuTitle: {\r\n      color: '#29b6f6',\r\n      fontSize: '1.3rem'\r\n    },\r\n    logo: {\r\n      width: '1.8rem'\r\n    },\r\n    nestedList: {\r\n      background: '#455a64'\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }),\r\n)\r\n\r\n// - in this part all the component menu are housed\r\nconst initState = {\r\n  selected: '',\r\n  menu: {\r\n    itemHeader: {\r\n      title: {\r\n        main: 'Crecer',\r\n        secondary: 'DMC'\r\n      },\r\n      logo: {\r\n        path: '/images/logotipo-crecer-dmc.svg',\r\n        alt: 'logotipo de crecer dmc'\r\n      }\r\n    },\r\n    items: [\r\n      {\r\n        id: '001',\r\n        title: 'Inicio',\r\n        icon: <InsertChart />,\r\n        permission: permissions.home.view,\r\n        url: urls.app.main.home\r\n      },\r\n      {\r\n        id: '002',\r\n        title: 'Administración de terceros',\r\n        icon: <Contacts />,\r\n        permission: permissions.third.view,\r\n        indexedMenu: {\r\n          open: false,\r\n          items: [\r\n            {\r\n              id: '001-01',\r\n              title: 'Creación de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.create,\r\n              url: urls.app.main.third.form\r\n            },\r\n            {\r\n              id: '001-02',\r\n              title: 'Listar terceros',\r\n              icon: <RecentActors/>,\r\n              permission: permissions.third.view,\r\n              url: urls.app.main.third.list\r\n            },\r\n            {\r\n              id: '001-03',\r\n              title: 'Migración de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.migrate,\r\n              url: urls.app.main.third.thirdMigrationForm\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        id: '003',\r\n        title: 'Recibos de ingreso / egreso',\r\n        icon: <Keyboard />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.form\r\n      },\r\n      {\r\n        id: '004',\r\n        title: 'Transacciones internas',\r\n        icon: <ImportExport />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.form\r\n      },\r\n      {\r\n        id: '005',\r\n        title: 'Productos',\r\n        icon: <QueueRounded/>,\r\n        permission: permissions.item.view,\r\n        url: urls.app.main.item.form\r\n      },\r\n      {\r\n        id: '006',\r\n        title: 'Factura electrónica',\r\n        icon: <Description/>,\r\n        permission: permissions.electronic_bill.view,\r\n        indexedMenu: {\r\n          open: false,\r\n          items: [\r\n            {\r\n              id: '006-01',\r\n              title: 'Crear factura electrónica',\r\n              icon: <Description/>,\r\n              permission: permissions.electronic_bill.view,\r\n              url: urls.app.main.electronicBill.form\r\n            },\r\n            {\r\n              id: '006-02',\r\n              title: 'Listar factura electrónica',\r\n              icon: <Description/>,\r\n              permission: permissions.electronic_bill.view,\r\n              url: urls.app.main.electronicBill.list\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        id: '007',\r\n        title: 'Reporte de recibos',\r\n        icon: <FindInPage />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.report\r\n      },\r\n      {\r\n        id: '008',\r\n        title: 'Reporte de transacciones',\r\n        icon: <Assignment />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.report\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport default function MainMenu() {\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const [state, setState] = React.useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const [sizeScreen, setSizeScreen] = useState(900)\r\n\r\n  const matches = useMediaQuery(`(min-width:${sizeScreen}px)`)\r\n\r\n  const handleListMenu = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    item: any,\r\n  ) => {\r\n    if (item.indexedMenu) {\r\n      setState({\r\n        ...state,\r\n        selected: item.id,\r\n        menu: {\r\n          ...state.menu,\r\n          items: state.menu.items.map(savedItem => {\r\n            if (savedItem.id === item.id) {\r\n              if (savedItem.indexedMenu) {\r\n                savedItem.indexedMenu.open = !savedItem.indexedMenu.open\r\n              }\r\n            }\r\n            return savedItem\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        selected: item.id\r\n      })\r\n      history.push(item.url)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={matches ? classes.fixed : classes.fixedResponsive}>\r\n      <div className={matches ? classes.root : classes.rootResponsive}>\r\n        <List\r\n          component=\"nav\"\r\n          aria-label=\"main mailbox folders\"\r\n        >\r\n          <ListItem>\r\n            <ListItemIcon\r\n              onClick={() => {\r\n                if (sizeScreen === 900) {\r\n                  setSizeScreen(100)\r\n                } else if (sizeScreen === 100) {\r\n                  setSizeScreen(900)\r\n                }\r\n              }}\r\n            >\r\n              <img\r\n                className={classes.logo}\r\n                src={state.menu.itemHeader.logo.path}\r\n                alt={state.menu.itemHeader.logo.alt}\r\n              />\r\n            </ListItemIcon>\r\n            <Typography\r\n              variant='h6'\r\n              className={matches ? classes.menuTitle : classes.hidden}\r\n            >\r\n              {state.menu.itemHeader.title.main} <span className={classes.secondaryMenuTitle}>{state.menu.itemHeader.title.secondary}</span>\r\n            </Typography>\r\n          </ListItem>\r\n\r\n          <Divider />\r\n          {\r\n            state.menu.items.map(item => (\r\n              userContext.permissions.some(permission => permission === item.permission) ? \r\n              (\r\n                <React.Fragment key={item.id}>\r\n                  <ListItem\r\n                    button\r\n                    selected={state.selected === item.id}\r\n                    onClick={(event) => handleListMenu(event, item)}\r\n                  >\r\n                    <ListItemIcon\r\n                      className={classes.icon}\r\n                    >\r\n                      {item.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={item.title}\r\n                      className={matches ? classes.textPrimary : classes.hidden}\r\n                    />\r\n                    {\r\n                      item.indexedMenu && matches ?\r\n                        item.indexedMenu.open ? <ExpandLess color='primary' /> : <ExpandMore color='secondary' />\r\n                        :\r\n                        ''\r\n                    }\r\n                  </ListItem>\r\n                  {\r\n                    item.indexedMenu ?\r\n                      (\r\n                        <Collapse\r\n                          in={item.indexedMenu.open}\r\n                          timeout=\"auto\"\r\n                          unmountOnExit\r\n                        >\r\n                          <List\r\n                            component=\"div\"\r\n                            disablePadding\r\n                            className={classes.nestedList}\r\n                          >\r\n                            {\r\n                              item.indexedMenu.items.map(indexedItem => (\r\n                                userContext.permissions.some(permission => permission === indexedItem.permission) ?\r\n                                (\r\n                                  <ListItem\r\n                                    key={indexedItem.id}\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={state.selected === indexedItem.id}\r\n                                    onClick={(event) => handleListMenu(event, indexedItem)}\r\n                                  >\r\n                                    <ListItemIcon\r\n                                      className={classes.icon}\r\n                                    >\r\n                                      {indexedItem.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                      className={matches ? classes.textPrimary : classes.hidden}\r\n                                      primary={indexedItem.title}\r\n                                    />\r\n                                  </ListItem>\r\n                                ) : ''\r\n                              ))\r\n                            }\r\n                          </List>\r\n                        </Collapse>\r\n                      ) : ''\r\n                  }\r\n                </React.Fragment>\r\n              ) : ''\r\n            ))\r\n          }\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport UserContext, { initialContextUserState } from '../../../contexts/User'\r\nimport Utils from '../../../utils'\r\nimport { urls } from '../../../urls'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    toolBar: {\r\n        background: '#ffff'  \r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n)\r\n\r\nexport default function AppBarComponent() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const { setUserContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null)\r\n\r\n  const isMenuOpen = Boolean(anchorEl)\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null)\r\n  }\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null)\r\n    handleMobileMenuClose()\r\n    setUserContext(initialContextUserState)\r\n    Utils.removeCookieAuth()\r\n    history.push(urls.page.login)\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu'\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Perfil</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Cerrar sesión</MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile'\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Mensajes</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notificaciones</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Perfil</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Buscar…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show new mails\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n    table: {\r\n        headers: {\r\n            concept: 'Concepto',\r\n            detail: 'Detalle',\r\n            value: 'Valor',\r\n            delete: 'Eliminar'\r\n        }\r\n    }\r\n}\r\nexport default function TableComponent({rows, handleTable} : {rows: Array<any>, handleTable: Function}) {\r\n  \r\n    const classes = useStyles();\r\n    const [reload, setReload] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReload(false)\r\n    }, [reload])\r\n\r\n    // HandleDelete is the handler to delete items from\r\n    // the table.\r\n    const handleDelete = (index: number, value: string) => {\r\n        // this code become the newValue (total of receipt) to number\r\n        const r = /,/gi;\r\n        const newValue = Number(value.replace(r, ''));\r\n        handleTable(\"DEL\", index, newValue)\r\n        setReload(true)\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{texts.table.headers.concept}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.detail}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.value}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {\r\n                    rows.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                            <TableCell component=\"th\" >{row.concept}</TableCell>\r\n                            <TableCell align=\"right\">{row.detail}</TableCell>\r\n                            <TableCell align=\"right\">{row.value}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton \r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleDelete(index, row.value)}\r\n                                >\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TableComponent from '../Table/TableComponent'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Button, \r\n    Divider, \r\n    FormHelperText, \r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { CashReceipt, Concept } from './cashReceipt.slice';\r\nimport { Save, Help, NoteAdd, Cancel } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n    addButton: {\r\n        width: '100%',\r\n        height: '70%',\r\n        color: '#ffff',\r\n    },\r\n}));\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm: CashReceipt = {\r\n    type: 'INGRESO',\r\n    date: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    classThird: '',\r\n    valueText: '',\r\n    valueNumber: 0,\r\n    wayPay: [],\r\n    conceptTable: []\r\n}\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Recibos de ingreso y egreso'\r\n    },\r\n    fields: {\r\n        type: {\r\n            name: 'type',\r\n            helperText: 'Escoja el tipo de recibo',\r\n            options: ['INGRESO', 'EGRESO']\r\n        },\r\n        date: {\r\n            name: 'date',\r\n            helperText: 'Indique la fecha'\r\n        },\r\n        serial: {\r\n            name: 'serial',\r\n            helperText: 'Escriba el consecutivo',\r\n            placeholder: 'Serial'\r\n        },\r\n        third: {\r\n            name: 'third',\r\n            helperText: 'Escoja uno de los terceros',\r\n            options: [\r\n                {\r\n                    _id: '1',\r\n                    typeThird: 'JURIDICA',\r\n                    typeDocument: 'NIT',\r\n                    document: '123456-7',\r\n                    enterpriceName: 'Almacenes Éxito',\r\n                }\r\n            ]\r\n        },\r\n        classThird: {\r\n            name: 'classThird',\r\n            helperText: 'Escoja una clase del tercero',\r\n            options: [\r\n                {\r\n                    classThird: 'Proveedor'\r\n                }\r\n            ]\r\n        },\r\n        valueText: {\r\n            name: 'valueText',\r\n            helperText: 'Escriba el valor total del recibo en letras',\r\n            placeholder: 'Valor en letras'\r\n        },\r\n        wayPay: {\r\n            name: 'wayPay',\r\n            helperText: 'Selecciona la forma de pago',\r\n            options: [\r\n                {title: 'EFECTIVO', value: 'EFECTIVO'},\r\n                {title: 'CHEQUE', value: 'CHEQUE'},\r\n                {title: 'CONSIGNACIÓN', value: 'CONSIGNACION'},\r\n                {title: 'TRANSFERENCIA', value: 'TRANSFERENCIA'}\r\n            ]\r\n        },\r\n        bank: {\r\n            name: 'bank',\r\n            helperTextIng: 'Selecciona el banco a depositar',\r\n            helperTextEgr: 'Selecciona el banco a debitar',\r\n            options: [\r\n                {\r\n                    _id: \"5fac806e7434966c842292fe\",\r\n                    bank: \"BANCOLOMBIA\",\r\n                    numberAccount: \"28563044871\",\r\n                    typeAccount: \"DEBITO\"\r\n                }\r\n            ]\r\n        },\r\n        concept: {\r\n            name: 'concept',\r\n            helperText: 'Selecciona un concepto',\r\n            options: [\r\n                {\r\n                    concept: 'Concepto de prueba'\r\n                }\r\n            ]\r\n        },\r\n        conceptDetail: {\r\n            name: 'conceptDetail',\r\n            helperText: 'Detalla el concepto a profundidad',\r\n            placeholder: 'Detalle'\r\n        },\r\n        conceptValue: {\r\n            name: 'conceptValue',\r\n            helperText: 'Ingresa el valor del concepto',\r\n            placeholder: '$ Valor'\r\n        },\r\n        buttonAddConcept: {\r\n            title: 'Agregar'\r\n        }\r\n    },\r\n    body: {\r\n        subtitle: 'Tabla de conceptos'\r\n    }\r\n}\r\n\r\nexport default function CashReceiptForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [form, setForm] = useState<CashReceipt>(initStateForm);\r\n    const [wayPay, setWayPay] = useState('');\r\n    const [bank, setBank] = useState('NO DEFINIDO');\r\n    const [modalBank, setModalBank] = useState(false);\r\n\r\n    // States of the concept table\r\n    // This table will go into the main form\r\n    // Main form field: 'wayPay'\r\n    const [conceptTable, setConceptTable] = useState<Concept[]>([]);\r\n    const [concept, setConcept] = useState('');\r\n    const [conceptDetail, setConceptDetail] = useState('');\r\n    const [conceptValue, setConceptValue] = useState('');\r\n    const [total, setTotal] = useState(0);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input.\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        switch (name) {\r\n\r\n            case 'conceptDetail':\r\n                setConceptDetail(value)\r\n                break;\r\n\r\n            default:\r\n                setForm(prev => {\r\n                    (prev as any)[name] = value\r\n                    const newValue = {...prev}\r\n                    return newValue\r\n                })\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        switch (name) {\r\n            case 'wayPay':\r\n                setWayPay(event.target.value as any)\r\n                handleModalBank(event.target.value as any, form.type);\r\n                break;\r\n\r\n            case 'bank':\r\n                setBank(event.target.value as any)\r\n                break;\r\n            \r\n            case 'type':\r\n                setForm({\r\n                    ...form,\r\n                    type: event.target.value as any,\r\n                });\r\n                handleModalBank(wayPay, event.target.value as any);\r\n                break;\r\n            \r\n            case 'concept':\r\n                setConcept(event.target.value as any);\r\n                break;\r\n\r\n            default:\r\n                setForm({\r\n                    ...form,\r\n                    [name]: event.target.value,\r\n                });\r\n        }\r\n    };\r\n\r\n    // HandleModalBank is the handler to show and hide\r\n    // the bank input select: cond1 is wayPay value and\r\n    // cond2 is type value.\r\n    const handleModalBank = (cond1: string, cond2: string) => {\r\n\r\n        switch (cond1) {\r\n            case 'EFECTIVO':\r\n                setModalBank(false);\r\n                setBank('NO DEFINIDO');\r\n                break;\r\n\r\n            case 'CHEQUE':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(true);\r\n                }\r\n                break;\r\n\r\n            case 'CONSIGNACION':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(true);\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n                }\r\n                break;\r\n\r\n            case 'TRANSFERENCIA':\r\n                setModalBank(true);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleTable is the handler to add and remove items\r\n    // from the concept table, it also adds or subtracts \r\n    // the value of the total receipt.\r\n    const handleTable = (func: string, id?: number, value?: number) => {\r\n\r\n        switch (func) {\r\n            case 'PUSH':\r\n                setConceptTable([...conceptTable, {\r\n                    concept,\r\n                    detail: conceptDetail,\r\n                    value: conceptValue\r\n                }]);\r\n\r\n                const r = /,/gi;\r\n                const newValue = Number(conceptValue.replace(r, ''));\r\n\r\n                setTotal(total + newValue);\r\n                setConcept('');\r\n                setConceptDetail('');\r\n                setConceptValue('');\r\n                break;\r\n\r\n            case 'DEL':\r\n                console.log(id)\r\n                if(id !== undefined){\r\n                    let newArray = conceptTable;\r\n                    newArray.splice(id, 1);\r\n                    setConceptTable(newArray);\r\n                }\r\n                if(value !== undefined){\r\n                    setTotal(total - value) \r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    \r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber.\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setConceptValue(value);\r\n        if(name === 'conceptValue'){\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setConceptValue(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        let arrayWayPay = [\r\n            {wayPay: wayPay, bank: bank}\r\n        ]\r\n\r\n        setForm({\r\n            ...form,\r\n            valueNumber: total,\r\n            wayPay: arrayWayPay,\r\n            conceptTable: conceptTable\r\n        })\r\n        console.log(form)\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initStateForm);\r\n        setWayPay('');\r\n        setBank('NO DEFINIDO');\r\n        setModalBank(false);\r\n        setConceptTable([]);\r\n        setConcept('');\r\n        setConceptDetail('');\r\n        setConceptValue('');\r\n        setTotal(0);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {/* ------- *Header --------- */}\r\n            <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n            \r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ------- *Body ----------- */}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e} \r\n                                    >\r\n                                        {e}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.fields.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.serial.helperText}\r\n                        placeholder = {texts.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={12} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e._id} \r\n                                    >\r\n                                        {e.enterpriceName}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **class third ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.classThird.name}\r\n                        value = {form.classThird}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.classThird.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.classThird} \r\n                                    >\r\n                                        {e.classThird}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.classThird.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **value in text ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.valueText.name}\r\n                        value = {form.valueText}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.valueText.helperText}\r\n                        placeholder = {texts.fields.valueText.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={modalBank ? 4 : 8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.wayPay.name}\r\n                        value = {wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {\r\n                        // this section is visible if modal bank is true\r\n                        // the logic for this is on HandleModalBank function ^\r\n                        modalBank === true ?\r\n                        <Grid item md={4} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.fields.bank.name}\r\n                            value = {bank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    texts.fields.bank.options.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.numberAccount} \r\n                                        >\r\n                                            {e.bank} - {e.numberAccount}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>\r\n                                {\r\n                                    form.type === 'INGRESO' \r\n                                    ?\r\n                                    texts.fields.bank.helperTextIng \r\n                                    :\r\n                                    texts.fields.bank.helperTextEgr\r\n                                }\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: button **help ------*/}\r\n                    <Grid item md={4} sm={6} xs={12} className={classes.alignRight}>\r\n                        <IconButton \r\n                        aria-label='Ayuda'\r\n                        type=\"button\"\r\n                        >\r\n                            <Help fontSize=\"large\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Typography\r\n                        variant='h6'\r\n                        >\r\n                            {texts.body.subtitle}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Divider className={classes.divider}/>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.concept.name}\r\n                        value = {concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.concept} \r\n                                    >\r\n                                        {e.concept}\r\n                                    </MenuItem>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {texts.fields.concept.helperText}\r\n                        </FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***value per concept ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                            name={texts.fields.conceptValue.name}\r\n                            value = {conceptValue}\r\n                            onChange={thousandSeparator}\r\n                            fullWidth\r\n                            variant = \"outlined\"\r\n                            helperText = {texts.fields.conceptValue.helperText}\r\n                            placeholder = {texts.fields.conceptValue.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept detail ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.conceptDetail.name}\r\n                        value = {conceptDetail}\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.conceptDetail.helperText}\r\n                        placeholder = {texts.fields.conceptDetail.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            onClick={() => handleTable(\"PUSH\")}\r\n                            className={classes.addButton}\r\n                            startIcon={<Save />}\r\n                        >\r\n                            {texts.fields.buttonAddConcept.title}\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **concepts table rendering ------*/}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TableComponent rows={conceptTable} handleTable={handleTable}/>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **total ------*/}\r\n                    <Grid item md={4} sm={4} xs ={6}>\r\n                        <Typography variant=\"h6\">\r\n                            <span>Total: </span>$ {total}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        onClick={cancel}\r\n                        type=\"button\"\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Third } from \"../../schemas/Third\";\r\n\r\nexport default function thirdMapper(third: any | unknown): Third {\r\n  return {\r\n    entityId: third.entityId ?? '',\r\n    document: third.document ?? '',\r\n    dv: third.dv ?? '',\r\n    documentType: third.documentType ?? { code: '', description: '' },\r\n    organizationType: third.organizationType ?? { code: '', description: '' },\r\n    liabilityType: third.liabilityType ?? { code: '', description: '' },\r\n    regimeType: third.regimeType ?? { code: '', description: '' },\r\n    name: third.name ?? undefined,\r\n    lastname: third.lastname ?? undefined,\r\n    businessName: third.businessName ?? undefined,\r\n    phone: third.phone ?? '',\r\n    address: third.address ?? '',\r\n    city: third.city ?? undefined,\r\n    email: third.email ?? ''\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport thirdMapper from '../../mappers/Third/third.mapper'\r\nimport { Third } from '../../schemas/Third'\r\n\r\nclass ThirdService {\r\n  async saveThird(thirdData: Third, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/third', thirdData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async updateThird(thirdData: Third, token: string) {\r\n    try {\r\n      const responseApi = await axios.put('/api/v2/third', thirdData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getThirds(token: string, params?: { limit: number, lastEvaluatedKey?: string }) : Promise<{ lastEvaluatedKey: string, thirds: Third[] }> {\r\n    try {\r\n      let url = params !== undefined ? `/api/v2/third?limit=${params.limit}` : '/api/v2/third'\r\n      \r\n      if (params !== undefined && params.lastEvaluatedKey !== undefined) url = `${url}&lastEvaluatedKey=${params.lastEvaluatedKey}`\r\n  \r\n      const responseApi = await axios.get(url, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        } \r\n      })\r\n\r\n      const thirds = responseApi.data.thirds.map((third:any) => {\r\n        return thirdMapper(third) \r\n      })\r\n\r\n      return {\r\n        lastEvaluatedKey: JSON.stringify(responseApi.data.lastEvaluatedKey),\r\n        thirds: thirds\r\n      }\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getThirdByDocument(token: string, document: string) : Promise<Third> {\r\n    try {\r\n      let url = `/api/v2/third/${document}`\r\n  \r\n      const responseApi = await axios.get(url, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        } \r\n      })\r\n\r\n      const third = thirdMapper(responseApi.data) \r\n\r\n      return third\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ThirdService\r\n","interface Response {\r\n  code: string;\r\n  description: string;\r\n}\r\n\r\nexport function listObject(object: any): Response[] {\r\n  const res: Response[] = [];\r\n\r\n  for (const code in object) {\r\n    if (object.hasOwnProperty(code)) {\r\n      const description = object[code];\r\n      res.push({ code, description });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n","import axios from 'axios'\r\nimport { listObject } from '../../mappers/Common/comon.mapper'\r\n\r\nclass PlemsiService {\r\n  async getCities(apikey: string) {\r\n    try {\r\n      const responseApi = await axios.get(`${process.env.REACT_APP_PLEMSI_API}/common/list/municipality`, {\r\n        headers: {\r\n          authorization: `Bearer ${apikey}`\r\n        }\r\n      })\r\n      const data = listObject(responseApi.data.data)\r\n      return data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getBill(apikey: string, number: number) {\r\n    try {\r\n      const responseApi = await axios.get(`${process.env.REACT_APP_PLEMSI_API}/billing/invoice/one?by=number&value=${number}&prefix=${process.env.REACT_APP_PLEMSI_PREFIX}`, {\r\n        headers: {\r\n          authorization: `Bearer ${apikey}`\r\n        }\r\n      })\r\n      return responseApi.data.data.preview\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default PlemsiService\r\n","import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Third } from '../../../schemas/Third'\r\nimport ThirdService from '../../../services/Third'\r\nimport PlemsiService from '../../../services/Plemsi'\r\nimport Utils from '../../../utils'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  },\r\n  loadingContainer: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: '0',\r\n    right: '0',\r\n    background: '#BFBFBFBF',\r\n    opacity: 0.6,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '50vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear terceros'\r\n  },\r\n  body: {\r\n    field: {\r\n      organizationType: {\r\n        name: 'organizationType',\r\n        helperText: 'Escoja un tipo de persona',\r\n        options: [\r\n          { description: 'Jurídica', code: '1' },\r\n          { description: 'Natural', code: '2' }\r\n        ]\r\n      },\r\n      documentType: {\r\n        name: 'documentType',\r\n        helperText: 'Escoja el tipo de documento',\r\n        options: {\r\n          one: [\r\n            { description: 'NIT', code: '6' }\r\n          ],\r\n          two: [\r\n            { description: 'Registro civil', code: '1' },\r\n            { description: 'Tarjeta de identidad', code: '2' },\r\n            { description: 'Cédula de ciudadanía', code: '3' },\r\n            { description: 'Cédula de extranjería', code: '5' },\r\n            { description: 'Pasaporte', code: '7' },\r\n            { description: 'Documento de identificación extranjero', code: '8' }\r\n          ]\r\n        }\r\n      },\r\n      liabilityType: {\r\n        name: 'liabilityType',\r\n        helperText: 'Escoja el tipo de responsabilidad',\r\n        options: [\r\n          { description: 'Gran contribuyente', code: '7' },\r\n          { description: 'Autorretenedor', code: '9' },\r\n          { description: 'Agente de retención en el impuesto sobre las ventas', code: '14' },\r\n          { description: 'Régimen Simple de Tributación – SIMPLE', code: '112' },\r\n          { description: 'No responsable', code: '117' }\r\n        ]\r\n      },\r\n      regimeType: {\r\n        name: 'regimeType',\r\n        helperText: 'Escoja el tipo de régimen',\r\n        options: [\r\n          { description: 'Responsable de IVA', code: '1' },\r\n          { description: 'No responsable de IVA', code: '2' }\r\n        ]\r\n      },\r\n      document: {\r\n        name: 'document',\r\n        helperText: {\r\n          main: 'Escriba el número de documento',\r\n          error: 'El documento ingresado no tiene el formato correcto'\r\n        },\r\n        placeholder: 'Documento'\r\n      },\r\n      dv: {\r\n        name: 'dv',\r\n        helperText: 'DV',\r\n        placeholder: 'DV'\r\n      },\r\n      name: {\r\n        one: {\r\n          name: {\r\n            name: 'name',\r\n            helperText: 'Escriba el primer nombre de la persona',\r\n            placeholder: 'Nombre'\r\n          },\r\n          lastname: {\r\n            name: 'lastname',\r\n            helperText: 'Escriba el apellido de la persona',\r\n            placeholder: 'Apellido(s)'\r\n          }\r\n        },\r\n        two: {\r\n          businessName: {\r\n            name: 'businessName',\r\n            helperText: 'Escriba el nombre de la empresa',\r\n            placeholder: 'Razón social'\r\n          }\r\n        }\r\n      },\r\n      email: {\r\n        name: 'email',\r\n        helperText: {\r\n          main: 'Escriba el email',\r\n          error: 'El correo ingresado no tiene el formato correcto'\r\n        },\r\n        placeholder: 'Email'\r\n      },\r\n      phone: {\r\n        name: 'phone',\r\n        helperText: 'Escriba el número telefónico',\r\n        placeholder: 'Número telefónico'\r\n      },\r\n      address: {\r\n        name: 'address',\r\n        helperText: 'Escriba la dirección',\r\n        placeholder: 'Dirección'\r\n      },\r\n      city: {\r\n        name: 'city',\r\n        helperText: 'Ciudad o municipio'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Third\r\n  errorOnMail: boolean\r\n  errorOnDocument: boolean\r\n  cities: any[]\r\n  loading: boolean\r\n  isEdit: boolean\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    document: '',\r\n    dv: undefined,\r\n    documentType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    organizationType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    liabilityType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    regimeType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    name: undefined,\r\n    lastname: undefined,\r\n    businessName: undefined,\r\n    phone: '',\r\n    address: '',\r\n    city: undefined,\r\n    email: ''\r\n  },\r\n  errorOnMail: false,\r\n  errorOnDocument: false,\r\n  cities: [],\r\n  loading: true,\r\n  isEdit: false\r\n}\r\n\r\nexport default function ThirdForm() {\r\n\r\n  const classes = useStyles()\r\n  const { search } = useLocation()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { entityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const document = Utils.getDocumentFromUrl(search)\r\n\r\n      const plemsiService = new PlemsiService()\r\n      const cities = await plemsiService.getCities(entityContext.apiKeyPlemsi ?? '')\r\n\r\n      if (document) {\r\n        const thirdService = new ThirdService()\r\n        const third = await thirdService.getThirdByDocument(userContext.token ?? '', document)\r\n        if (third) {\r\n          setState({\r\n            ...state,\r\n            form: third,\r\n            cities,\r\n            loading: false,\r\n            isEdit: true\r\n          })\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          cities,\r\n          loading: false\r\n        })\r\n      }\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n\r\n    // Validaciones\r\n    let errorOnDocument = state.errorOnDocument\r\n    let errorOnMail = state.errorOnMail\r\n\r\n    if (name === 'document') {\r\n      const regex = /^[0-9]+$/\r\n      errorOnDocument = !regex.test(value)\r\n    }\r\n\r\n    if (name === 'email') {\r\n      const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      errorOnMail = !regex.test(value)\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value,\r\n      },\r\n      errorOnMail: errorOnMail,\r\n      errorOnDocument: errorOnDocument\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n  \r\n    // validaciones\r\n    if (state.errorOnDocument) {\r\n      return toast.error('Documento con formato incorrecto')\r\n    }\r\n\r\n    if (state.errorOnMail) {\r\n      return toast.error('Mail con formato incorrecto')\r\n    }\r\n\r\n    try {\r\n      const thirdService = new ThirdService()\r\n      let thirdCreated: any = {}\r\n\r\n      if (state.isEdit) {\r\n        thirdCreated = await thirdService.updateThird(state.form, userContext.token ?? '')\r\n      } else {\r\n        thirdCreated = await thirdService.saveThird(state.form, userContext.token ?? '')\r\n      }\r\n      setState({\r\n        ...initState,\r\n        cities: state.cities,\r\n        loading: false\r\n      })\r\n      return toast.success(`El tercero ${thirdCreated.document} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header ------*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: item thrid type ------*/}\r\n          <Grid item md={state.form.organizationType.code === '2' ? 4 : 3} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.organizationType.name}\r\n              value={state.form.organizationType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.isEdit}\r\n            >\r\n              {\r\n                texts.body.field.organizationType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.organizationType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.organizationType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.documentType.name}\r\n              value={state.form.documentType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                // this will depend of organizationType field\r\n                state.form.organizationType.code === texts.body.field.organizationType.options[0].code ?\r\n                  texts.body.field.documentType.options.one.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n                  :\r\n                  texts.body.field.documentType.options.two.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.documentType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document number ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.document.name}\r\n              value={state.form.document}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={state.errorOnDocument ? texts.body.field.document.helperText.error : texts.body.field.document.helperText.main}\r\n              placeholder={texts.body.field.document.placeholder}\r\n              disabled={state.isEdit}\r\n              error={state.errorOnDocument}\r\n            />\r\n          </Grid>\r\n          {\r\n            /*\r\n            In this section the name, secondName, lastName and businessName\r\n            fields are conditioned to the organizationType field.\r\n            If typeThird field is NATURAL then the name, secondName and lastName\r\n            fields will be availabe while businessName field will be unavailable,\r\n            else if typeThird field is JURIDICA then the businessName field will\r\n            be available while the name, secondName and lastName fields will be\r\n            unavailable\r\n            */\r\n\r\n            state.form.organizationType.code === '2'\r\n              ?\r\n              <React.Fragment>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.name.name}\r\n                    value={state.form.name ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.name.helperText}\r\n                    placeholder={texts.body.field.name.one.name.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.lastname.name}\r\n                    value={state.form.lastname ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.lastname.helperText}\r\n                    placeholder={texts.body.field.name.one.lastname.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n              :\r\n              <React.Fragment>\r\n                {/* ----- Form: item document dv ------*/}\r\n                <Grid item md={1} sm={3} xs={2}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.dv.name}\r\n                    value={state.form.dv ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.dv.helperText}\r\n                    placeholder={texts.body.field.dv.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={12} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.two.businessName.name}\r\n                    value={state.form.businessName ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.two.businessName.helperText}\r\n                    placeholder={texts.body.field.name.two.businessName.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n          }\r\n\r\n          {/* ----- Form: item liability type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.liabilityType.name}\r\n              value={state.form.liabilityType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.liabilityType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.liabilityType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.liabilityType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item regime type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.regimeType.name}\r\n              value={state.form.regimeType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.regimeType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.regimeType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.regimeType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item email ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.email.name}\r\n              value={state.form.email}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={state.errorOnMail ? texts.body.field.email.helperText.error : texts.body.field.email.helperText.main}\r\n              placeholder={texts.body.field.email.placeholder}\r\n              error={state.errorOnMail}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item phone ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.phone.name}\r\n              value={state.form.phone}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.phone.helperText}\r\n              placeholder={texts.body.field.phone.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item address ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.address.name}\r\n              value={state.form.address}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.address.helperText}\r\n              placeholder={texts.body.field.address.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: City ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.city.name}\r\n              value={state.form.city?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.cities.map((item) =>\r\n                  <MenuItem\r\n                    key={item.code}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.city.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.city.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n      {\r\n        state.loading ?\r\n        (\r\n          <div className={classes.loadingContainer}>\r\n            <Box>\r\n              <CircularProgress/>\r\n            </Box>\r\n          </div>\r\n        ) : ''\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { DataGrid, GridColDef, GridCellEditCommitParams, GridValueGetterParams } from '@material-ui/data-grid'\r\n\r\ninterface Props {\r\n  keyId: string\r\n  rows: any[]\r\n  columns: GridColDef[]\r\n  gridEdit?: (params: GridCellEditCommitParams) => void\r\n}\r\n\r\nexport default function DataTable(props: Props) {\r\n\r\n  function onGridEdit (params:GridCellEditCommitParams) {\r\n    if (props.gridEdit) {\r\n      props.gridEdit(params)\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={props.rows}\r\n        columns={props.columns}\r\n        getRowId={(row: any) => row[props.keyId]}\r\n        pageSize={5}\r\n        onCellEditCommit={(params: GridCellEditCommitParams) => onGridEdit(params)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { GridCellEditCommitParams, GridColDef, GridValueGetterParams } from '@material-ui/data-grid'\r\nimport { CloudDownload, Edit } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Third } from '../../../schemas/Third'\r\nimport ThirdService from '../../../services/Third'\r\nimport DataTable from '../DataTable/DataTable'\r\nimport { urls } from '../../../urls'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  loadMoreButton: {\r\n    width: '25%',\r\n    height: '70%'\r\n  },\r\n  loadingContainer: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: '0',\r\n    right: '0',\r\n    background: '#BFBFBFBF',\r\n    opacity: 0.6,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '50vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Lista de terceros'\r\n  },\r\n  body: {\r\n    buttonLoadMore: {\r\n      label: 'Cargar más ...'\r\n    }\r\n  }\r\n}\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'document',\r\n    headerName: 'Documento',\r\n    width: 250,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Nombre',\r\n    editable: false,\r\n    width: 350,\r\n    valueGetter: (params: GridValueGetterParams) =>\r\n      `${params.getValue(params.id, 'name') || params.getValue(params.id, 'businessName')} ${params.getValue(params.id, 'lastname') || ''\r\n      }`,\r\n  },\r\n  {\r\n    field: 'email',\r\n    headerName: 'Email',\r\n    width: 350,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: 'phone',\r\n    headerName: 'Teléfono',\r\n    width: 250,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: 'actions',\r\n    headerName: 'Acciones',\r\n    width: 150,\r\n    type: 'actions',\r\n    renderCell: (params: any) => (\r\n      <ActionButtons params={params} />\r\n    )\r\n  }\r\n]\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  loadMoreButtonDisabled: boolean\r\n  lastEvaluatedKey?: string\r\n  thirds: Third[]\r\n  loading: boolean\r\n}\r\n\r\nconst initState: State = {\r\n  loadMoreButtonDisabled: false,\r\n  thirds: [],\r\n  loading: true\r\n}\r\n\r\nfunction ActionButtons(props: any) {\r\n\r\n  const history = useHistory()\r\n\r\n  const onEdit = () => {\r\n    history.push(`${urls.app.main.third.form}?document=${props.params.row.document ?? ''}`)\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      type=\"submit\"\r\n      onClick={() => onEdit()}\r\n    >\r\n      <Edit fontSize={\"small\"} color=\"primary\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default function ThirdList() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const thirdService = new ThirdService()\r\n      const response = await thirdService.getThirds(userContext.token || '', { limit: 5 })\r\n      setState({\r\n        ...state,\r\n        thirds: response.thirds,\r\n        lastEvaluatedKey: response.lastEvaluatedKey,\r\n        loadMoreButtonDisabled: response.lastEvaluatedKey !== undefined ? false : true,\r\n        loading: false\r\n      })\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  const onLoadMore = async () => {\r\n    try {\r\n      const thirdService = new ThirdService()\r\n      const response = await thirdService.getThirds(userContext.token || '', { limit: 5, lastEvaluatedKey: state.lastEvaluatedKey })\r\n      setState({\r\n        ...state,\r\n        thirds: state.thirds.concat(response.thirds),\r\n        lastEvaluatedKey: response.lastEvaluatedKey,\r\n        loadMoreButtonDisabled: response.lastEvaluatedKey !== undefined ? false : true\r\n      })\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const gridEdit = async (params: GridCellEditCommitParams) => {\r\n\r\n    let thirdToEdit: any = {}\r\n\r\n    const selectedThird = state.thirds.find(third => third.document === params.id)\r\n    if (selectedThird !== undefined) {\r\n      thirdToEdit = {\r\n        ...selectedThird,\r\n        [params.field]: params.value\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const thirdService = new ThirdService()\r\n      const thirdUpdated = await thirdService.updateThird(thirdToEdit, userContext.token ?? '')\r\n\r\n      return toast.success(`El tercero ${thirdUpdated.document} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header ------*/}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n      <Grid container spacing={3}>\r\n\r\n        {/* ----- Form: item thrid type ------*/}\r\n        <Grid item md={12} sm={12} xs={12}>\r\n          <DataTable rows={state.thirds} columns={columns} keyId='document' gridEdit={gridEdit} />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.loadMoreButton}\r\n            startIcon={<CloudDownload />}\r\n            disabled={state.loadMoreButtonDisabled}\r\n            onClick={() => onLoadMore()}\r\n          >\r\n            {texts.body.buttonLoadMore.label}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {\r\n        state.loading ?\r\n        (\r\n          <div className={classes.loadingContainer}>\r\n            <Box>\r\n              <CircularProgress/>\r\n            </Box>\r\n          </div>\r\n        ) : ''\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Divider, FormHelperText, Grid, IconButton, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    contentAside: {\r\n        textAlign: 'right',\r\n        padding: '5vh 5vh 0 10vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Migrar terceros'\r\n    },\r\n    body: {\r\n        field: {\r\n            lastThird: {\r\n                name: 'lastThird',\r\n                helperText: 'Escoja el tercero a migrar',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            },\r\n            newThird: {\r\n                name: 'newThird',\r\n                helperText: 'Escoja el nuevo tercero',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        aside: {\r\n            title: 'Necesitas ayuda?',\r\n            content: 'La migración de terceros es la manera de transferir los recibos y demás registros de un tercero a otro tercero. Esto te será útil en caso de querer unificar un tercero que tengas duplicado.'\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm = {\r\n    lastThird: '',\r\n    newThird: ''\r\n}\r\n\r\nexport default function ThirdMigration() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initStateForm);\r\n    const [ newThirdOptions, setNewThirdOptions ] = useState(texts.body.field.lastThird.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the lastThird\r\n        // from the third array, with this if the user wants to\r\n        // transfer from one third to another the new options will\r\n        // be the other thirds.\r\n        if(name === 'lastThird'){\r\n            let res = texts.body.field.lastThird.options.filter(e => e.id !== event.target.value);\r\n            setNewThirdOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* ----- Header ------*/}\r\n            <React.Fragment>\r\n                <Typography\r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <Grid container spacing={5}>\r\n                <Grid item md={7} sm={12} xs={12}>\r\n\r\n                    <form onSubmit={(e) => handleSubmit(e)}>\r\n                        <Grid container spacing={3}>\r\n                            {/* ----- Form: item last thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.lastThird.name}\r\n                                value = {form.lastThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        texts.body.field.lastThird.options.map((e, index) => \r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.lastThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n\r\n                            {/* ----- Form: item new thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.newThird.name}\r\n                                value = {form.newThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        newThirdOptions.map((e, index) =>\r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.newThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n                            \r\n                            <Grid item md={12} sm={6} xs ={12} className={classes.alignRight}>\r\n                                <IconButton\r\n                                type=\"submit\"\r\n                                >\r\n                                    <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </Grid>\r\n\r\n                {/* ------------ Aside -----------------*/}\r\n                <Grid md={5} sm={12} xs={12} className={classes.contentAside}>\r\n                    <Typography color='primary' variant='h6'>{texts.body.aside.title}</Typography>\r\n                    <Typography variant='body2'>{texts.body.aside.content}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\nimport { InternalTransaction } from './internalTransaction.slice';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Transacciones internas'\r\n    },\r\n    body: {\r\n        field: {\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de transacción',\r\n                options: [\r\n                    {title: 'Consignación de efectivo a un banco', value: 'CONSIGNACION'},\r\n                    {title: 'Retiro de efectivo de un banco', value: 'RETIRO'},\r\n                    {title: 'Transferencia de un banco a otro banco', value: 'TRANSFERENCIA'}\r\n                ]\r\n            },\r\n            date: {\r\n                name: 'date',\r\n                helperText: 'Ingrese la fecha del movimiento',\r\n                placeholder: 'Fecha *'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial o código de transacción',\r\n                placeholder: 'Serial *'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: {\r\n                    optionOne: 'Escoja el banco a consignar',\r\n                    optionTwo: 'Escoja el banco a retirar',\r\n                    optionThree: 'Escoja el banco que transfiere'\r\n                },\r\n                options: [\r\n                    {title: 'Bancolombia', value: '674867836'},\r\n                    {title: 'BBVA', value: '7786786687'}\r\n                ]\r\n            },\r\n            secondBank: {\r\n                name: 'secondBank',\r\n                helperText: 'Escoja el banco a transferir'\r\n            },\r\n            value: {\r\n                name: 'value',\r\n                helperText: 'Ingrese el valor de la transacción',\r\n                placeholder: 'Value *'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState: InternalTransaction = {\r\n    type: '',\r\n    date: new Date(),\r\n    serial: '',\r\n    bank: '',\r\n    secondBank: undefined,\r\n    value: 0\r\n}\r\n\r\nexport default function InternalTransactionForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState<InternalTransaction>(initState);\r\n    const [ valueStr, setValueStr ] = useState('');\r\n    const [ newBankOptions, setNewBankOptions ] = useState(texts.body.field.bank.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the bank\r\n        // from the bank array, with this if the user wants \r\n        // to transfer from one bank to another the new options\r\n        // will be the other banks.\r\n        if(name === texts.body.field.bank.name){\r\n            let res = texts.body.field.bank.options.filter(e => e.value !== event.target.value);\r\n            setNewBankOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n\r\n        if(name === texts.body.field.value.name){\r\n            setValueStr(value);\r\n\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setValueStr(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        // this code become the valueStr to number\r\n        const r = /,/gi;\r\n        const newValue = valueStr.replace(r, '');\r\n        setForm({\r\n            ...form,\r\n            value: Number(newValue)\r\n        });\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n        setValueStr('');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                \r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.field.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.field.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.field.serial.helperText}\r\n                        placeholder = {texts.body.field.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **bank ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title} - {e.value}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {\r\n                                form.type === texts.body.field.type.options[0].value \r\n                                ? \r\n                                texts.body.field.bank.helperText.optionOne\r\n                                : \r\n                                form.type === texts.body.field.type.options[1].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionTwo\r\n                                :\r\n                                form.type === texts.body.field.type.options[2].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionThree\r\n                                :\r\n                                texts.body.field.bank.helperText.optionOne\r\n                            }\r\n                                \r\n                        </FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **secondBank ------*/}\r\n                    {\r\n                        // this item will depend on the value in form.type \r\n                        form.type === texts.body.field.type.options[2].value\r\n                        ?\r\n                        <Grid item md={6} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.body.field.secondBank.name}\r\n                            value = {form.secondBank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    newBankOptions.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.value} \r\n                                        >\r\n                                            {e.title} - {e.value}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>{texts.body.field.secondBank.helperText}</FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: item **value ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name={texts.body.field.value.name}\r\n                        value = {valueStr}\r\n                        onChange={thousandSeparator}\r\n                        fullWidth\r\n                        variant = \"outlined\"\r\n                        helperText = {texts.body.field.value.helperText}\r\n                        placeholder = {texts.body.field.value.placeholder}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de recibos de caja'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial de la transacción',\r\n                placeholder: 'Serial'\r\n            },\r\n            third: {\r\n                name: 'third',\r\n                helperText: 'Escoja un tercero para filtrar',\r\n                options: [\r\n                    {title: 'Pedro Mario Carranza', value: '33344554'},\r\n                    {title: 'Eléctricos don pipe', value: '987675656'},\r\n                    {title: 'Maria Perdomo', value: '35765633'}\r\n                ]\r\n            },\r\n            wayPay: {\r\n                name: 'wayPay',\r\n                helperText: 'Escoja la manera de pago',\r\n                options: [\r\n                    {title: 'Efectivo', value: 'efectivo'},\r\n                    {title: 'Consignación', value: 'consignacion'},\r\n                    {title: 'Cheque', value: 'cheque'}\r\n                ]\r\n            },\r\n            concept: {\r\n                name: 'concept',\r\n                helperText: 'Escoja un concepto',\r\n                options: [\r\n                    {title: 'Exequias', value: '12005'},\r\n                    {title: 'Partidas', value: '11002'},\r\n                    {title: 'Donaciones', value: '10250'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    wayPay: '',\r\n    concept: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.fields.serial.helperText}\r\n                        placeholder = {texts.body.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.wayPay.name}\r\n                        value = {form.wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.concept.name}\r\n                        value = {form.concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.concept.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of cash receipt ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de transacciones internas'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: 'Escoja un banco',\r\n                options: [\r\n                    {title: 'Bancolombia', value: '786786765'},\r\n                    {title: 'BBVA', value: '110546502'},\r\n                    {title: 'Galicia', value: '10250345'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    bank: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of internal transaction ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Bank ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.bank.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Item } from \"../../schemas/Item\";\r\n\r\nexport default function itemMapper(item: any | unknown): Item {\r\n  return {\r\n    code: item.code ?? '',\r\n    description: item.description ?? '',\r\n    price: item.price ?? undefined,\r\n    unitMeasure: {\r\n      code: item.unitMeasure?.code ?? '',\r\n      description: item.unitMeasure?.description ?? ''\r\n    } ?? undefined,\r\n    itemType: {\r\n      code: item.itemType?.code ?? 0,\r\n      description: item.itemType?.description ?? ''\r\n    } ?? undefined\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport itemMapper from '../../mappers/Item/item.mapper'\r\nimport { Item } from '../../schemas/Item'\r\n\r\nclass ItemService {\r\n  async saveItem(itemData: Item, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/item', itemData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getItems(token: string) : Promise<Item[]> {\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/item', {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n\r\n      const items = responseApi.data.map((item:any) => {\r\n        return itemMapper(item)\r\n      })\r\n\r\n      return items\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ItemService\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Item } from '../../../schemas/Item'\r\nimport ItemService from '../../../services/Item'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear productos'\r\n  },\r\n  body: {\r\n    field: {\r\n      code: {\r\n        name: 'code',\r\n        helperText: 'Escriba el código del producto',\r\n        placeholder: 'Código'\r\n      },\r\n      description: {\r\n        name: 'description',\r\n        helperText: 'Escriba la descripción del producto',\r\n        placeholder: 'Nombre de producto'\r\n      },\r\n      price: {\r\n        name: 'price',\r\n        helperText: 'Escriba el precio en pesos colombianos sin decimales',\r\n        placeholder: 'Precio'\r\n      },\r\n      unitMeasure: {\r\n        name: 'unitMeasure',\r\n        helperText: 'Escoja una unidad de medida',\r\n        options: [\r\n          { description: 'Unidad', code: '70' },\r\n          { description: 'Kilogramo', code: '40' },\r\n          { description: 'Galón', code: '686' },\r\n          { description: 'Metro cúbico', code: '594' },\r\n          { description: 'Metro cuadrado', code: '472' },\r\n        ]\r\n      },\r\n      itemType: {\r\n        name: 'itemType',\r\n        helperText: 'Tipo de producto',\r\n        options: [\r\n          { description: 'UNSPSC', code: '1' },\r\n          { description: 'GTIN', code: '2' },\r\n          { description: 'Partida Arancelarias', code: '3' },\r\n          { description: 'Estándar de adopción del contribuyente', code: '4' }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Item\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    code: '',\r\n    description: '',\r\n    price: undefined,\r\n    unitMeasure: undefined,\r\n    itemType: undefined\r\n  }\r\n}\r\n\r\nexport default function ItemForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const itemService = new ItemService()\r\n      const itemCreated = await itemService.saveItem(state.form, userContext.token ?? '')\r\n      setState(initState)\r\n      return toast.success(`El producto ${itemCreated.code} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: code ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.code.name}\r\n              value={state.form.code}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.code.helperText}\r\n              placeholder={texts.body.field.code.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: description ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.description.name}\r\n              value={state.form.description}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.description.helperText}\r\n              placeholder={texts.body.field.description.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              name={texts.body.field.price.name}\r\n              value={state.form.price ?? ''}\r\n              type='number'\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: unit measure ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.unitMeasure.name}\r\n              value={state.form.unitMeasure?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.unitMeasure.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.unitMeasure.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.unitMeasure.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.itemType.name}\r\n              value={state.form.itemType?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.itemType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.itemType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.itemType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import { ElectronicBill, ElectronicBillFormSchema, ItemComplete } from \"../../schemas/ElectronicBill\";\r\nimport Utils from \"../../utils\";\r\n\r\nconst electronicBillMapper = {\r\n  formToSchema: (form: ElectronicBillFormSchema, items: ItemComplete[]): ElectronicBill => {\r\n    return {\r\n      date: form.date,\r\n      orderReference: form.orderReference,\r\n      third: form.third ?? {\r\n        document: '',\r\n        dv: undefined,\r\n        documentType: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        organizationType: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        liabilityType: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        regimeType: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        name: undefined,\r\n        lastname: undefined,\r\n        businessName: undefined,\r\n        phone: '',\r\n        address: '',\r\n        email: ''\r\n      },\r\n      wayToPay: form.wayToPay,\r\n      paymentMethod: form.paymentMethod,\r\n      paymentDueDate: form.paymentDueDate,\r\n      note: form.note,\r\n      items: items,\r\n      taxes: Utils.buildTaxesForElectronicBill(items),\r\n      total: form.total,\r\n      totalTaxes: form.totalTaxes,\r\n      totalToPay: form.totalToPay\r\n    }\r\n  },\r\n\r\n  schemaToForm: (bill: any): { form: ElectronicBillFormSchema, items: ItemComplete[], taxes: any[] } => {\r\n    return {\r\n      form: {\r\n        number: Number(bill.number),\r\n        date: bill.date,\r\n        preview: bill.preview,\r\n        orderReference: bill.orderReference,\r\n        third: bill.third,\r\n        wayToPay: { code: bill.wayToPay.code, description: bill.wayToPay.description },\r\n        paymentMethod: { code: bill.paymentMethod.code, description: bill.paymentMethod.description },\r\n        paymentDueDate: bill.paymentDueDate,\r\n        note: bill.note,\r\n        total: bill.total,\r\n        totalTaxes: bill.totalTaxes,\r\n        totalToPay: bill.totalToPay,\r\n        currentItemType: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        currentPrice: 0,\r\n        currentQuantity: 0,\r\n        selectedTax: {\r\n          code: '',\r\n          description: ''\r\n        },\r\n        currentPercentTax: 0\r\n      },\r\n      items: bill.items,\r\n      taxes: Utils.buildTaxesForElectronicBill(bill.items)\r\n    }\r\n  }\r\n}\r\n\r\nexport default electronicBillMapper\r\n","import axios from 'axios'\r\nimport { ElectronicBill, ElectronicBillFormSchema, ItemComplete } from '../../schemas/ElectronicBill'\r\nimport ElectronicBillMapper from '../../mappers/ElectronicBill/electronicBill.mapper'\r\n\r\nclass ElectronicBillService {\r\n  async saveBill(billData: ElectronicBill, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/bill/electronic', billData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getElectronicBills(token: string, params?: { limit: number, lastEvaluatedKey?: string }) : Promise<{ lastEvaluatedKey: string, electronicBills: ElectronicBillFormSchema[] }> {\r\n    try {\r\n      let url = params !== undefined ? `/api/v2/bill/electronic?limit=${params.limit}` : '/api/v2/bill/electronic'\r\n      \r\n      if (params !== undefined && params.lastEvaluatedKey !== undefined) url = `${url}&lastEvaluatedKey=${params.lastEvaluatedKey}`\r\n  \r\n      const responseApi = await axios.get(url, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        } \r\n      })\r\n\r\n      const bills = responseApi.data.bills.map((bill:any) => {\r\n        const parseBill = ElectronicBillMapper.schemaToForm(bill)\r\n        return parseBill.form\r\n      })\r\n\r\n      return {\r\n        lastEvaluatedKey: JSON.stringify(responseApi.data.lastEvaluatedKey),\r\n        electronicBills: bills\r\n      }\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getBillByNumber(token: string, number: number) : Promise<{ form: ElectronicBillFormSchema, items: ItemComplete[], taxes: any[] }> {\r\n    try {\r\n      let url = `/api/v2/bill/electronic/${number}`\r\n  \r\n      const responseApi = await axios.get(url, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        } \r\n      })\r\n\r\n      const bill = ElectronicBillMapper.schemaToForm(responseApi.data) \r\n\r\n      return bill\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ElectronicBillService\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n  table: {\r\n    headers: {\r\n      code: 'Código',\r\n      description: 'Descripción',\r\n      price: 'Precio',\r\n      quantity: 'Cantidad',\r\n      delete: 'Eliminar'\r\n    }\r\n  }\r\n}\r\nexport default function ItemTable({ rows, handleTable, disabledForm }: { rows: Array<any>, handleTable: Function, disabledForm: boolean }) {\r\n\r\n  const classes = useStyles();\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setReload(false)\r\n  }, [reload])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{texts.table.headers.code}</TableCell>\r\n            <TableCell>{texts.table.headers.description}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.price}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.quantity}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" >{row.code}</TableCell>\r\n                <TableCell component=\"th\">{row.description}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleTable('REMOVE', row)}\r\n                    disabled={disabledForm}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Box,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd, Save } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { ElectronicBillFormSchema } from '../../../schemas/ElectronicBill'\r\nimport ElectronicBillService from '../../../services/ElectronicBill'\r\nimport Utils from '../../../utils'\r\nimport ItemTable from './ItemTable'\r\nimport ThirdService from '../../../services/Third'\r\nimport ElectronicBillMapper from '../../../mappers/ElectronicBill/electronicBill.mapper'\r\nimport ItemService from '../../../services/Item'\r\nimport PlemsiService from '../../../services/Plemsi'\r\n\r\n// -------------- Styles ---------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  loadingContainer: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: '0',\r\n    right: '0',\r\n    background: '#BFBFBFBF',\r\n    opacity: 0.6,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '50vh'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  },\r\n  addButton: {\r\n    width: '100%',\r\n    height: '70%',\r\n    color: '#ffff',\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Facturación electrónica'\r\n  },\r\n  body: {\r\n    field: {\r\n      date: {\r\n        name: 'date',\r\n        helperText: 'Fecha de facturación',\r\n        placeholder: 'Fecha'\r\n      },\r\n      orderReference: {\r\n        name: 'orderReference',\r\n        helperText: 'Escriba la referencia de orden',\r\n        placeholder: 'Código de orden'\r\n      },\r\n      third: {\r\n        name: 'third',\r\n        helperText: 'Escoja el tercero',\r\n        placeholder: 'Tercero'\r\n      },\r\n      wayToPay: {\r\n        name: 'wayToPay',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Contado', code: '1' },\r\n          { description: 'Crédito', code: '2' },\r\n        ]\r\n      },\r\n      paymentMethod: {\r\n        name: 'paymentMethod',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Cheque', code: '20' },\r\n          { description: 'Consignación bancaria', code: '42' },\r\n          { description: 'Efectivo', code: '10' },\r\n          { description: 'Instrumento no definido', code: '1' },\r\n          { description: 'Pago y depósito pre acordado (PPD)', code: '34' },\r\n          { description: 'Tarjeta Crédito', code: '48' },\r\n          { description: 'Tarjeta Débito', code: '49' },\r\n        ]\r\n      },\r\n      paymentDueDate: {\r\n        name: 'paymentDueDate',\r\n        helperText: 'Fecha de pago',\r\n        placeholder: 'AAAA/MM/DD'\r\n      },\r\n      note: {\r\n        name: 'note',\r\n        helperText: 'Nota para la factura',\r\n        placeholder: 'Nota para la factura'\r\n      },\r\n      item: {\r\n        name: 'currentItem',\r\n        helperText: 'Escoja el producto a facturar',\r\n        options: [\r\n          {\r\n            unitMeasure: { code: 12, description: 'Unidad' },\r\n            description: 'Producto de prueba',\r\n            code: '1',\r\n            price: 2500\r\n          }\r\n        ]\r\n      },\r\n      itemType: {\r\n        name: 'currentItemType',\r\n        helperText: 'Tipo de producto',\r\n        options: [\r\n          { description: 'UNSPSC', code: '1' },\r\n          { description: 'GTIN', code: '2' },\r\n          { description: 'Partida Arancelarias', code: '3' },\r\n          { description: 'Estándar de adopción del contribuyente', code: '4' }\r\n        ]\r\n      },\r\n      price: {\r\n        name: 'currentPrice',\r\n        helperText: 'Precio sin impuestos',\r\n        placeholder: 'Precio'\r\n      },\r\n      quantity: {\r\n        name: 'currentQuantity',\r\n        helperText: 'Cantiadad',\r\n        placeholder: 'Cantidad'\r\n      },\r\n      applyTaxes: {\r\n        name: 'applyTaxes',\r\n        helperText: 'Aplicar impuestos'\r\n      },\r\n      tax: {\r\n        name: 'selectedTax',\r\n        helperText: 'Escoja el impuesto',\r\n        options: [\r\n          { code: '1', description: 'IVA' },\r\n          { code: '4', description: 'Impuesto al consumo' }\r\n        ]\r\n      },\r\n      percent: {\r\n        name: 'currentPercentTax',\r\n        helperText: 'Porcentaje',\r\n        placeholder: '%',\r\n        options: [\r\n          { code: 0, description: '0%' },\r\n          { code: 5, description: '5%' },\r\n          { code: 8, description: '8%' },\r\n          { code: 19, description: '19%' },\r\n        ]\r\n      },\r\n      total: {\r\n        name: 'total',\r\n        helperText: 'Total sin impuestos',\r\n        placeholder: 'Total sin impuestos'\r\n      },\r\n      totalTaxes: {\r\n        name: 'totalTaxes',\r\n        helperText: 'Total de impuestos',\r\n        placeholder: 'Total de impuestos'\r\n      },\r\n      totalToPay: {\r\n        name: 'totalToPay',\r\n        helperText: 'Total final',\r\n        placeholder: 'Total'\r\n      }\r\n    },\r\n    subtitles: {\r\n      payment: 'Información acerca del pago',\r\n      itemsTable: 'Tabla de productos a facturar',\r\n      total: 'Información acerca de los totales de la factura'\r\n    },\r\n    buttons: {\r\n      addProduct: {\r\n        title: 'Agregar'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: ElectronicBillFormSchema\r\n  applyTaxes: boolean\r\n  items: any[]\r\n  selectedItems: any[]\r\n  thirds: any[]\r\n  preview?: string\r\n  loading: boolean\r\n  disabledForm: boolean\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    date: '',\r\n    orderReference: '',\r\n    third: undefined,\r\n    wayToPay: { code: '', description: '' },\r\n    paymentMethod: { code: '', description: '' },\r\n    paymentDueDate: '',\r\n    note: '',\r\n    currentItem: undefined,\r\n    currentItemType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    currentPrice: 0,\r\n    currentQuantity: 0,\r\n    total: 0,\r\n    totalTaxes: 0,\r\n    totalToPay: 0,\r\n    selectedTax: { code: '', description: '' },\r\n    currentPercentTax: 0\r\n  },\r\n  applyTaxes: false,\r\n  items: [],\r\n  selectedItems: [],\r\n  thirds: [],\r\n  preview: undefined,\r\n  loading: false,\r\n  disabledForm: false\r\n}\r\n\r\nexport default function ElectronicBillForm() {\r\n\r\n  const classes = useStyles()\r\n  const { search } = useLocation()\r\n\r\n  const [state, setState] = useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { entityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  React.useEffect(() => {\r\n\r\n    async function loadData() {\r\n      try {\r\n        //Search bill on URL\r\n        const params = Utils.parseQueryString(search)\r\n        if (params.length > 0) {\r\n          let number = 0\r\n          let copy = false\r\n          let billPlemsi = undefined\r\n          let thirds = []\r\n          let items = []\r\n\r\n          params.forEach(param => {\r\n            if (param.number) {\r\n              number = Number(param.number)\r\n            }\r\n\r\n            if (param.copy) {\r\n              copy = true\r\n            }\r\n          })\r\n\r\n          setState({\r\n            ...state,\r\n            loading: true\r\n          })\r\n\r\n          const electronicBillService = new ElectronicBillService()\r\n          const bill = await electronicBillService.getBillByNumber(userContext.token ?? '', number)\r\n\r\n          if (!copy) {\r\n            const plemsiService = new PlemsiService()\r\n            billPlemsi = await plemsiService.getBill(entityContext.apiKeyPlemsi ?? '', bill.form.number ?? 0)\r\n            thirds = [...state.thirds, bill.form.third]\r\n            items = [...state.items, bill.items]\r\n          } else {\r\n            const thirdService = new ThirdService()\r\n            const itemService = new ItemService()\r\n            const thirdsRes = await thirdService.getThirds(userContext.token || '')\r\n            const itemsRes = await itemService.getItems(userContext.token || '')\r\n            thirds = thirdsRes.thirds\r\n            items = itemsRes\r\n          }\r\n\r\n          setState({\r\n            ...state,\r\n            form: bill.form,\r\n            thirds,\r\n            items,\r\n            selectedItems: bill.items,\r\n            loading: false,\r\n            disabledForm: !copy,\r\n            preview: billPlemsi\r\n          })\r\n\r\n        } else {\r\n          // Load service\r\n          const thirdService = new ThirdService()\r\n          const itemService = new ItemService()\r\n          const thirds = await thirdService.getThirds(userContext.token || '')\r\n          const items = await itemService.getItems(userContext.token || '')\r\n          setState({\r\n            ...state,\r\n            thirds: thirds.thirds,\r\n            items: items\r\n          })\r\n        }\r\n      } catch (error) {\r\n\r\n        setState({\r\n          ...state,\r\n          loading: false\r\n        })\r\n\r\n        if (axios.isAxiosError(error)) {\r\n          const serverError = error as AxiosError<ServerError>\r\n          if (serverError && serverError.response) {\r\n            return toast.error(serverError.response.data.message || error.toString())\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    loadData()\r\n  }, [])\r\n\r\n  const handleChangeSelectValue = (name: string, value: string | number) => {\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChangeSelect is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string, price?: number, itemType?: any }) => {\r\n    if (item.price && item.itemType) {\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [name]: item,\r\n          currentPrice: item.price,\r\n          currentItemType: {\r\n            code: item.itemType.code,\r\n            description: item.itemType.description\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [name]: item\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | {\r\n    name: string\r\n    value: unknown\r\n  }>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setState({\r\n      ...state,\r\n      loading: true\r\n    })\r\n\r\n    try {\r\n      console.log(state.selectedItems)\r\n      const res = ElectronicBillMapper.formToSchema(state.form, state.selectedItems)\r\n      const electronicBillService = new ElectronicBillService()\r\n      const plemsiService = new PlemsiService()\r\n      const bill = await electronicBillService.saveBill(res, userContext.token ?? '')\r\n      const billPlemsi = await plemsiService.getBill(bill.entityInformation.apikey, bill.entityInformation.number)\r\n      setState({\r\n        ...initState,\r\n        applyTaxes: false,\r\n        items: state.items,\r\n        selectedItems: [],\r\n        thirds: state.thirds,\r\n        preview: billPlemsi,\r\n        loading: false\r\n      })\r\n      return toast.success(`Factura creada con éxito`)\r\n    } catch (error) {\r\n\r\n      setState({\r\n        ...state,\r\n        loading: false\r\n      })\r\n      \r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message || error.toString())\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // HandleTable is the handler to add and remove items\r\n  // from the concept table, it also adds or subtracts \r\n  // the value of the total receipt.\r\n  const handleTable = (func: string, selectedItem?: any) => {\r\n    if (func === 'ADD') {\r\n      const item = Utils.buildItem(state.form, state.applyTaxes)\r\n      const total = (state.form.total + item.total)\r\n      const totalTaxes = (state.form.totalTaxes + item.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems\r\n      items.push(item)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n          currentItemType: {\r\n            code: '',\r\n            description: ''\r\n          },\r\n          currentPrice: 0,\r\n          currentQuantity: 0,\r\n          selectedTax: { code: '', description: '' },\r\n          currentPercentTax: 0\r\n        },\r\n        applyTaxes: false,\r\n        selectedItems: items\r\n      })\r\n    }\r\n\r\n    if (func === 'REMOVE') {\r\n      const total = (state.form.total - selectedItem.total)\r\n      const totalTaxes = (state.form.totalTaxes - selectedItem.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems.filter(item => item.code !== selectedItem.code)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n        },\r\n        selectedItems: items\r\n      })\r\n    }\r\n  }\r\n\r\n  const onApplyTaxes = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { checked } = event.target\r\n    setState({\r\n      ...state,\r\n      applyTaxes: checked\r\n    })\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  const onPreviewBill = () => {\r\n    // if the form is in view mode, it is not necessary to clear the preview\r\n    if (!state.disabledForm) {\r\n      setState({\r\n        ...state,\r\n        preview: undefined\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: date ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.date.name}\r\n              value={state.form.date}\r\n              variant='outlined'\r\n              type='date'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.date.helperText}\r\n              placeholder={texts.body.field.date.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: order reference ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.orderReference.name}\r\n              value={state.form.orderReference}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.orderReference.helperText}\r\n              placeholder={texts.body.field.orderReference.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: third ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.third.name}\r\n              value={state.form.third?.document ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.disabledForm}\r\n            >\r\n              {\r\n                state.thirds.map((third) =>\r\n                  <MenuItem\r\n                    key={third.document}\r\n                    value={third.document}\r\n                    onClick={() => handleChangeSelect(texts.body.field.third.name, third)}\r\n                  >\r\n                    {third.name !== undefined ? `${third.name} ${third.lastname}` : `${third.businessName}`}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.third.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment ------*/}\r\n\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.wayToPay.name}\r\n              value={state.form.wayToPay.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.disabledForm}\r\n            >\r\n              {\r\n                texts.body.field.wayToPay.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.wayToPay.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.wayToPay.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment method ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.paymentMethod.name}\r\n              value={state.form.paymentMethod.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.disabledForm}\r\n            >\r\n              {\r\n                texts.body.field.paymentMethod.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.paymentMethod.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.paymentMethod.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment due date ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.paymentDueDate.name}\r\n              value={state.form.paymentDueDate}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.paymentDueDate.helperText}\r\n              placeholder={texts.body.field.paymentDueDate.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: note ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.note.name}\r\n              value={state.form.note}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.note.helperText}\r\n              placeholder={texts.body.field.note.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Typography\r\n              variant='h6'\r\n            >\r\n              {texts.body.subtitles.itemsTable}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Divider className={classes.divider} />\r\n          </Grid>\r\n\r\n          <Grid item md={8} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.item.name}\r\n              value={state.form.currentItem?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.disabledForm}\r\n            >\r\n              {\r\n                state.items.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.item.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.item.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.itemType.name}\r\n              value={state.form.currentItemType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              disabled={state.disabledForm}\r\n            >\r\n              {\r\n                texts.body.field.itemType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.itemType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.itemType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={8} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.price.name}\r\n              value={state.form.currentPrice}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: quantity ------*/}\r\n          <Grid item md={4} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.quantity.name}\r\n              value={state.form.currentQuantity}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.quantity.helperText}\r\n              placeholder={texts.body.field.quantity.placeholder}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            {/* ----- apply taxes check ------*/}\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.applyTaxes} name={texts.body.field.applyTaxes.name} value={state.applyTaxes} onChange={(e) => onApplyTaxes(e)} color=\"primary\" />}\r\n              label={texts.body.field.applyTaxes.helperText}\r\n              disabled={state.disabledForm}\r\n            />\r\n          </Grid>\r\n\r\n          {\r\n            state.applyTaxes ?\r\n              (\r\n                <React.Fragment>\r\n                  <Grid item md={6} sm={12} xs={12}>\r\n                    <Select\r\n                      name={texts.body.field.tax.name}\r\n                      value={state.form.selectedTax.code}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      {\r\n                        texts.body.field.tax.options.map((item) =>\r\n                          <MenuItem\r\n                            key={item.description}\r\n                            value={item.code}\r\n                            onClick={() => handleChangeSelect(texts.body.field.tax.name, item)}\r\n                          >\r\n                            {item.description}\r\n                          </MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    <FormHelperText>{texts.body.field.tax.helperText}</FormHelperText>\r\n                  </Grid>\r\n\r\n                  {/* ----- Form: percent ------*/}\r\n                  <Grid item md={3} sm={6} xs={10}>\r\n                    <Select\r\n                      name={texts.body.field.percent.name}\r\n                      value={state.form.currentPercentTax}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      {\r\n                        texts.body.field.percent.options.map((item) =>\r\n                          <MenuItem\r\n                            key={item.description}\r\n                            value={item.code}\r\n                            onClick={() => handleChangeSelectValue(texts.body.field.percent.name, item.code)}\r\n                          >\r\n                            {item.description}\r\n                          </MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    <FormHelperText>{texts.body.field.percent.helperText}</FormHelperText>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              ) : ''\r\n          }\r\n\r\n          <Grid item md={3} sm={6} xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"button\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => handleTable(\"ADD\")}\r\n              className={classes.addButton}\r\n              startIcon={<Save />}\r\n              disabled={state.disabledForm}\r\n            >\r\n              {texts.body.buttons.addProduct.title}\r\n            </Button>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item **concepts table rendering ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <ItemTable rows={state.selectedItems} handleTable={handleTable} disabledForm={state.disabledForm} />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.total.name}\r\n              value={state.form.total}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.total.helperText}\r\n              placeholder={texts.body.field.total.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total taxes ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalTaxes.name}\r\n              value={state.form.totalTaxes}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalTaxes.helperText}\r\n              placeholder={texts.body.field.totalTaxes.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total to pay ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalToPay.name}\r\n              value={state.form.totalToPay}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalToPay.helperText}\r\n              placeholder={texts.body.field.totalToPay.placeholder}\r\n            />\r\n          </Grid>\r\n          {\r\n            !state.disabledForm ?\r\n            (\r\n              <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n                <IconButton\r\n                  type=\"submit\"\r\n                >\r\n                  <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                  type=\"button\"\r\n                  onClick={cancel}\r\n                >\r\n                  <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n                </IconButton>\r\n              </Grid>\r\n            ) : ''\r\n          }\r\n          {\r\n            state.preview !== undefined ?\r\n              (\r\n                <Grid item md={12} sm={12} xs={12} className={classes.alignRight}>\r\n                  <Link to={{ pathname: state.preview }} target='_blank' onClick={onPreviewBill}>\r\n                    Descargue su factura\r\n                  </Link>\r\n                </Grid>\r\n              ) : ''\r\n          }\r\n        </Grid>\r\n      </form>\r\n      {\r\n        state.loading ?\r\n          (\r\n            <div className={classes.loadingContainer}>\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            </div>\r\n          ) : ''\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    makeStyles,\r\n    Theme,\r\n    Tooltip,\r\n    Typography \r\n} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n// ------------------- Styles ----------------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    card: {\r\n        width: '100%',\r\n        background: '#ffff',\r\n        height: '30vh'\r\n    },\r\n    cardBody: {\r\n        marginTop: '8vh',\r\n    },\r\n    cardPrefix: {\r\n        fontSize: '3vh'\r\n    },\r\n    cardPorcent: {\r\n        fontSize: '2vh'\r\n    }\r\n}));\r\n\r\n// ---------- Type for the info from props ----------\r\ntype data = {\r\n    title: string,\r\n    value: string,\r\n    prefix: string,\r\n    percent: {\r\n        value: number,\r\n        tooltip: string,\r\n        prefix: string\r\n    }\r\n}\r\n\r\nexport default function BalanceCard({ data }: {data: data}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                {/* -------------- Header ----------- */}\r\n                <Typography variant=\"subtitle2\">\r\n                    {data.title}\r\n                </Typography>\r\n                <Divider />\r\n                <Typography\r\n                variant={\r\n                    // if the value is too big this code reduces the font size\r\n                    data.value.length <= 9 ? \"h3\" : \"h4\"\r\n                }\r\n                color=\"primary\"\r\n                className={classes.cardBody}\r\n                >\r\n                    {data.value}\r\n                    <span className={classes.cardPrefix}>\r\n                        {data.prefix}\r\n                    </span>\r\n                </Typography>\r\n\r\n                {/*This section has the code for porcent respect previous month */}\r\n                <Tooltip title={data.percent.tooltip}>\r\n                    <Typography\r\n                        align=\"right\"\r\n                        variant=\"subtitle1\"\r\n                        color={\r\n                        // if the value is negative this code changes the font color\r\n                        data.percent.value >= 0\r\n                            ? \"primary\"\r\n                            : \"secondary\"\r\n                        }\r\n                    >\r\n                        {\r\n                        // if the value is negative this code changes the icon\r\n                        data.percent.value >= 0 ? (\r\n                            <ArrowUpwardIcon className={classes.cardPorcent} />\r\n                        ) : (\r\n                            <ArrowDownwardIcon className={classes.cardPorcent} />\r\n                        )\r\n                        }{\" \"}\r\n                        {data.percent.value}{\" \"}\r\n                        <span className={classes.cardPorcent}>\r\n                        {data.percent.prefix}\r\n                        </span>\r\n                    </Typography>\r\n                </Tooltip>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer\r\n} from \"recharts\";\r\n\r\n// this data is just as example // data for the graphic\r\nconst data = [\r\n    {\r\n        name: \"Enero\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Febrero\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Marzo\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Abril\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Mayo\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Junio\",\r\n        uv: 0,\r\n    }\r\n];\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        width: '90vh',\r\n        height: '27vh',\r\n    }\r\n}));\r\n\r\nexport default function LineGraphic() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5\r\n                    }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                  \r\n                        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider, \r\n    IconButton,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    form: {\r\n        marginTop: '5vh'\r\n    },\r\n    submitButton: {\r\n        textAlign: 'right'\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte caja diario'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'date',\r\n                helperText: 'Fecha'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    date: new Date(),\r\n}\r\n\r\nexport default function DailyReportForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Typography\r\n                variant=\"subtitle2\"\r\n                color=\"inherit\"\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </div>\r\n            \r\n            <Divider />\r\n\r\n            <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>\r\n                <TextField\r\n                required={true}\r\n                name = {texts.body.fields.from.name}\r\n                value = {form.date}\r\n                fullWidth\r\n                type = 'date'\r\n                onChange = {handleChange}\r\n                helperText = {texts.body.fields.from.helperText}\r\n                />\r\n\r\n                <div className={classes.submitButton}>\r\n                    <IconButton\r\n                    type=\"submit\"\r\n                    className={classes.submitButton}\r\n                    >\r\n                        <NoteAdd fontSize={\"small\"} color=\"primary\"/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\nimport BalanceCard from './Card/BalanceCard'\r\nimport LineGraphic from './Graphics/LineGraphic/LineGraphic'\r\nimport DailyReportForm from './DailyReport/DailyReportForm'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  container: {\r\n    marginTop: '10vh',\r\n    padding: '0'\r\n  },\r\n  gridCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  cardGraphic: {\r\n    width: '100%',\r\n    background: '#ffff',\r\n    height: '30vh'\r\n  },\r\n\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    title: 'Bienvenido',\r\n    user: 'Santiago Marin'\r\n  },\r\n  body: {\r\n    cards: {\r\n      cashBalance: {\r\n        title: 'Saldo de Caja',\r\n        value: '0.00',\r\n        prefix: '$',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a mes anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      bankBalance: {\r\n        title: 'Saldo de Banco',\r\n        value: '0.00',\r\n        prefix: '$',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a mes anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      percentBalance: {\r\n        title: 'Respecto mes anterior',\r\n        value: '0',\r\n        prefix: '%',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a año anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      respectPreviousMonth: {\r\n        title: 'Respecto mes anterior',\r\n        value: 0,\r\n        prefix: '%'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function IndexApp() {\r\n\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { entityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* -------------------- Header --------------- */}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant=\"h4\"\r\n        >\r\n          {texts.header.title}, <span>{userContext.name} {userContext.lastname}</span>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n        >\r\n          {entityContext.name}\r\n        </Typography>\r\n        <div>\r\n          <Typography\r\n            variant=\"caption\"\r\n          >\r\n            {entityContext.document}\r\n          </Typography>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n      {/* -- Cards to show the values and percentages of the company --*/}\r\n      <React.Fragment>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n\r\n            {/* --------------------- *Cash balance card ------------------ */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.cashBalance} />\r\n            </Grid>\r\n\r\n            {/* --------------------- *Bank balance card ------------------ */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.bankBalance} />\r\n            </Grid>\r\n\r\n            {/* -------------------- *Percent balance card ----------------- */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.percentBalance} />\r\n            </Grid>\r\n\r\n            {/* -------------------- *Graphic balance card ----------------- */}\r\n            <Grid item md={8} sm={12} xs={12} className={classes.gridCard}>\r\n              <Card className={classes.cardGraphic}>\r\n                <CardContent>\r\n                  <LineGraphic />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            {/* -------------------- *Daily report form card ----------------- */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <Card className={classes.cardGraphic}>\r\n                <CardContent>\r\n                  <DailyReportForm />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/User'\r\nimport { UserContextType } from '../../schemas/User'\r\nimport { urls } from '../../urls'\r\n\r\nexport default function ProtectRoute({ children, ...rest }: { children: ReactElement }) {\r\n\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        userContext.id ? children : <Redirect to={urls.page.login} />\r\n      }\r\n    />\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { GridColDef } from '@material-ui/data-grid'\r\nimport { CloudDownload, Visibility, PostAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport DataTable from '../DataTable/DataTable'\r\nimport { urls } from '../../../urls'\r\nimport ElectronicBillService from '../../../services/ElectronicBill'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  loadMoreButton: {\r\n    width: '25%',\r\n    height: '70%'\r\n  },\r\n  loadingContainer: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: '0',\r\n    right: '0',\r\n    background: '#BFBFBFBF',\r\n    opacity: 0.6,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '50vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Lista de facturas emitidas'\r\n  },\r\n  body: {\r\n    buttonLoadMore: {\r\n      label: 'Cargar más ...'\r\n    }\r\n  }\r\n}\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'number',\r\n    headerName: 'Factura',\r\n    width: 150,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'date',\r\n    headerName: 'Fecha',\r\n    width: 200,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'third',\r\n    headerName: 'Nombre',\r\n    editable: false,\r\n    width: 350,\r\n  },\r\n  {\r\n    field: 'note',\r\n    headerName: 'Descripción',\r\n    editable: false,\r\n    width: 400,\r\n  },\r\n  {\r\n    field: 'actions',\r\n    headerName: 'Acciones',\r\n    width: 150,\r\n    type: 'actions',\r\n    renderCell: (params: any) => (\r\n      <ActionButtons params={params} />\r\n    )\r\n  }\r\n]\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  loadMoreButtonDisabled: boolean\r\n  lastEvaluatedKey?: string\r\n  electronicBills: any[]\r\n  loading: boolean\r\n}\r\n\r\nconst initState: State = {\r\n  loadMoreButtonDisabled: false,\r\n  electronicBills: [],\r\n  loading: true\r\n}\r\n\r\nfunction ActionButtons(props: any) {\r\n\r\n  const history = useHistory()\r\n\r\n  const onView = () => {\r\n    history.push(`${urls.app.main.electronicBill.form}?number=${props.params.row.number ?? ''}`)\r\n  }\r\n\r\n  const onCopy = () => {\r\n    history.push(`${urls.app.main.electronicBill.form}?number=${props.params.row.number ?? ''}&copy=true`)\r\n  }\r\n\r\n  const onDownload = () => {\r\n    if (props.params.row.preview !== undefined) {\r\n      return window.open(props.params.row.preview, '_blank')\r\n    } else {\r\n      return toast.warn('Factura disponible ingresando a la visualización')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        type=\"submit\"\r\n        onClick={() => onView()}\r\n      >\r\n        <Visibility fontSize={\"small\"} color=\"primary\" />\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        type=\"submit\"\r\n        onClick={() => onCopy()}\r\n      >\r\n        <PostAdd fontSize={\"small\"} color=\"action\" />\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        type=\"submit\"\r\n        onClick={() => onDownload()}\r\n      >\r\n        <CloudDownload fontSize={\"small\"} color=\"action\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default function ElectronicBillList() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const electronicBillService= new ElectronicBillService()\r\n      const response = await electronicBillService.getElectronicBills(userContext.token || '', { limit: 5 })\r\n      setState({\r\n        ...state,\r\n        electronicBills: response.electronicBills.map((bill: any) =>{\r\n          return {\r\n            ...bill,\r\n            third: bill.third.businessName !== undefined ? `${bill.third.businessName}` : `${bill.third.name} ${bill.third.lastname}`\r\n          }\r\n        }),\r\n        lastEvaluatedKey: response.lastEvaluatedKey,\r\n        loadMoreButtonDisabled: response.lastEvaluatedKey !== undefined ? false : true,\r\n        loading: false\r\n      })\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  const onLoadMore = async () => {\r\n    try {\r\n      const electronicBillService= new ElectronicBillService()\r\n      const response = await electronicBillService.getElectronicBills(userContext.token || '', { limit: 5, lastEvaluatedKey: state.lastEvaluatedKey })\r\n      const newBills = response.electronicBills.map((bill: any) =>{\r\n        return {\r\n          ...bill,\r\n          third: bill.third.businessName !== undefined ? `${bill.third.businessName}` : `${bill.third.name} ${bill.third.lastname}`\r\n        }\r\n      })\r\n      setState({\r\n        ...state,\r\n        electronicBills: state.electronicBills.concat(newBills),\r\n        lastEvaluatedKey: response.lastEvaluatedKey,\r\n        loadMoreButtonDisabled: response.lastEvaluatedKey !== undefined ? false : true\r\n      })\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header ------*/}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n      <Grid container spacing={3}>\r\n\r\n        {/* ----- Form: item thrid type ------*/}\r\n        <Grid item md={12} sm={12} xs={12}>\r\n          <DataTable rows={state.electronicBills} columns={columns} keyId='number' />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.loadMoreButton}\r\n            startIcon={<CloudDownload />}\r\n            disabled={state.loadMoreButtonDisabled}\r\n            onClick={() => onLoadMore()}\r\n          >\r\n            {texts.body.buttonLoadMore.label}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {\r\n        state.loading ?\r\n        (\r\n          <div className={classes.loadingContainer}>\r\n            <Box>\r\n              <CircularProgress/>\r\n            </Box>\r\n          </div>\r\n        ) : ''\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport MainMenu from '../MainMenu/MainMenu';\r\nimport AppBarComponent from '../AppBar/AppBarComponent';\r\nimport CashReceiptForm from '../CashReceipt/CashReceiptForm';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport ThirdForm from '../Third/ThirdForm';\r\nimport ThirdList from '../Third/ThirdList';\r\nimport ThirdMigration from '../Third/ThirdMigration';\r\nimport InternalTransactionForm from '../InternalTransaction/InternalTransactionForm';\r\nimport CashReceiptReport from '../CashReceipt/CashReceiptReport';\r\nimport InternalTransactionReport from '../InternalTransaction/InternalTransactionReport';\r\nimport ItemForm from '../Item/ItemForm';\r\nimport ElectronicBillForm from '../ElectronicBill/ElectronicBillForm';\r\nimport IndexApp from '../Index/IndexApp';\r\nimport ProtectRoute from '../../ComponentsForProtectRoutes/ProtectRoute';\r\nimport ElectronicBillList from '../ElectronicBill/ElectronicBillList';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        minHeight: '100vh',\r\n        background: '#fafafa',\r\n    },\r\n    body: {\r\n        display: 'flex'\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function ContainerApp() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <div className={classes.body}>\r\n\r\n                <div>\r\n                    <MainMenu/>\r\n                </div>\r\n\r\n                <div className={classes.main}>\r\n\r\n                    <AppBarComponent />\r\n\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route path={urls.app.main.home}>\r\n                            <ProtectRoute>\r\n                                <IndexApp />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.form}>\r\n                            <ProtectRoute>\r\n                                <ThirdForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.list}>\r\n                            <ProtectRoute>\r\n                                <ThirdList />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.thirdMigrationForm}>\r\n                            <ProtectRoute>\r\n                                <ThirdMigration />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.item.form}>\r\n                            <ProtectRoute>\r\n                                <ItemForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.form}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.electronicBill.form}>\r\n                            <ProtectRoute>\r\n                                <ElectronicBillForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.electronicBill.list}>\r\n                            <ProtectRoute>\r\n                                <ElectronicBillList />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.report}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.form}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.report}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import axios from 'axios'\r\nimport jwt from 'jwt-decode'\r\nimport Cookies from 'js-cookie'\r\nimport entityMapper from '../../mappers/Entity/entity.mapper'\r\nimport userMapper from '../../mappers/User/user.mapper'\r\nimport { User } from '../../schemas/User'\r\n\r\ntype jwtDecode = {\r\n  data: any\r\n}\r\n\r\nclass UserService {\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/login', { email, password })\r\n      const response = responseApi.data\r\n      if (!response.token) throw new Error('No recuperó token')\r\n      const tokenData = jwt<jwtDecode>(response.token)\r\n      const userData = tokenData.data.user\r\n      const entityData = tokenData.data.entity\r\n      userData.token = response.token\r\n      const user = userMapper(userData)\r\n      const entity = entityMapper(entityData)\r\n      Cookies.set('auth', response.token)\r\n\r\n      return {\r\n        user,\r\n        entity\r\n      }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getUsers(token: string) {\r\n\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/user', {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async saveUser(userData: User, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/user', userData, {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserService\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\nimport UserService from '../../../services/User/index'\r\nimport { urls } from '../../../urls'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  state: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    title: 'Inicia sesión',\r\n    logo: {\r\n      path: '/images/logotipo-crecer-dmc.svg',\r\n      alt: 'logotipo de crecer dmc'\r\n    }\r\n  },\r\n  state: {\r\n    field: {\r\n      email: {\r\n        name: 'email',\r\n        label: 'Correo'\r\n      },\r\n      password: {\r\n        name: 'password',\r\n        label: 'Contraseña'\r\n      },\r\n      rememberCheck: {\r\n        value: 'remember',\r\n        label: 'Recordarme'\r\n      },\r\n      signinButton: {\r\n        title: 'Entrar'\r\n      }\r\n    },\r\n    footer: {\r\n      forgotPasswordLink: 'Olvidaste tu contraseña?',\r\n      createAccountLink: 'Aún no tienes un usuario?',\r\n      copyright: 'CRECER DMC'\r\n    }\r\n  }\r\n}\r\n\r\n// ------------- Init state -----------\r\ninterface LoginForm {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst initState: LoginForm = {\r\n  email: '',\r\n  password: ''\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        {texts.state.footer.copyright}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default function SignIn() {\r\n\r\n  const { userContext, setUserContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { setEntityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const [state, setState] = useState<LoginForm>(initState)\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (userContext?.id) {\r\n      history.push(urls.app.main.home)\r\n    }\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  async function onLogin(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault()\r\n    try {\r\n      const userService = new UserService()\r\n      const data = await userService.login(state.email, state.password)\r\n      if (data) {\r\n        setUserContext(data.user)\r\n        setEntityContext(data.entity)\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n    history.push(urls.app.main.home)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        {/* ------- *Header --------- */}\r\n        <Avatar className={classes.avatar}>\r\n          <img\r\n            src={texts.header.logo.path}\r\n            alt={texts.header.logo.alt}\r\n          />\r\n        </Avatar>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {texts.header.title}\r\n        </Typography>\r\n\r\n        {/* ------- *Body ----------- */}\r\n        <form className={classes.state} onSubmit={onLogin} noValidate>\r\n\r\n          {/* ----- Form: item **email ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={state.email}\r\n            id={texts.state.field.email.name}\r\n            label={texts.state.field.email.label}\r\n            name={texts.state.field.email.name}\r\n            autoFocus\r\n          />\r\n\r\n          {/* ----- Form: item **password ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={state.password}\r\n            onChange={handleChange}\r\n            name={texts.state.field.password.name}\r\n            label={texts.state.field.password.label}\r\n            type=\"password\"\r\n            id={texts.state.field.password.name}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          {/* ----- Form: item **remember check ------*/}\r\n          <FormControlLabel\r\n            control={<Checkbox value={texts.state.field.rememberCheck.value} color=\"primary\" />}\r\n            label={texts.state.field.rememberCheck.label}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {texts.state.field.signinButton.title}\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.forgotPasswordLink}\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.createAccountLink}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Login from '../Login/Login';\r\n\r\nexport default function ContainerApp() {\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline/>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route exact path={urls.page.home} >\r\n                            {/* here will be the home component */}\r\n                            <h1>Home</h1>\r\n                        </Route>\r\n                        <Route path={urls.page.login}>\r\n                            <Login />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GlobalProvider from './contexts'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport theme from './theme'\r\nimport ContainerApp from './components/ComponentsForApp/ContainerApp/ContainerApp';\r\nimport { urls } from './urls';\r\nimport ContainerPage from './components/ComponentsForPage/ContainerPage/ContainerPage';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <GlobalProvider>\r\n        {\r\n          // This proyect uses the url.sts file to manage the urls\r\n        }\r\n\r\n        <Router>\r\n          <Switch>\r\n            {\r\n              // the page container has all the components\r\n              // that are part of Crecer´s single page\r\n            }\r\n            <Route path={urls.page.home}>\r\n              <ContainerPage />\r\n            </Route>\r\n\r\n            {\r\n              // the app container has all the components\r\n              // that are part of Crecer App\r\n            }\r\n            <Route path={urls.app.index}>\r\n              <ContainerApp />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        <ToastContainer/>\r\n      </GlobalProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}