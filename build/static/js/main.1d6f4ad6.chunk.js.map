{"version":3,"sources":["contexts/User/index.tsx","contexts/Entity/index.tsx","contexts/index.tsx","theme.ts","urls.ts","components/ComponentsForApp/MainMenu/MainMenu.tsx","components/ComponentsForApp/AppBar/AppBarComponent.tsx","components/ComponentsForApp/Table/TableComponent.tsx","components/ComponentsForApp/CashReceipt/CashReceiptForm.tsx","mappers/Third/third.mapper.ts","services/Third/index.ts","mappers/Entity/entity.mapper.ts","services/Entity/index.ts","mappers/Common/comon.mapper.ts","services/Plemsi/index.ts","components/ComponentsForApp/Third/ThirdForm.tsx","components/ComponentsForApp/Third/ThirdMigration.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionForm.tsx","components/ComponentsForApp/CashReceipt/CashReceiptReport.tsx","components/ComponentsForApp/InternalTransaction/InternalTransactionReport.tsx","mappers/Item/item.mapper.ts","services/Item/index.ts","components/ComponentsForApp/Item/ItemForm.tsx","services/ElectronicBill/index.ts","utils.ts","components/ComponentsForApp/ElectronicBill/ItemTable.tsx","mappers/ElectronicBill/electronicBill.mapper.ts","components/ComponentsForApp/ElectronicBill/ElectronicBillForm.tsx","components/ComponentsForApp/Index/Card/BalanceCard.tsx","components/ComponentsForApp/Index/Graphics/LineGraphic/LineGraphic.tsx","components/ComponentsForApp/Index/DailyReport/DailyReportForm.tsx","components/ComponentsForApp/Index/IndexApp.tsx","components/ComponentsForProtectRoutes/ProtectRoute.tsx","components/ComponentsForApp/ContainerApp/ContainerApp.tsx","mappers/User/user.mapper.ts","services/User/index.ts","components/ComponentsForPage/Login/Login.tsx","components/ComponentsForPage/ContainerPage/ContainerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Context","createContext","initialState","id","email","name","lastname","entityId","state","permissions","UserContextProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","userContext","setUserContext","_jsx","Provider","value","entityTypeCode","document","signatories","undefined","address","phone","apiKeyPlemsi","resolution","resolutionText","lastElectronicBillNumber","EntityContextProvider","entityContext","setEntityContext","GlobalProvider","props","theme","createMuiTheme","palette","primary","main","lightBlue","secondary","deepOrange","urls","home","login","index","third","form","thirdMigrationForm","cashReceipt","report","electronicBill","internalTransaction","item","useStyles","makeStyles","createStyles","root","minHeight","width","backgroundColor","position","rootResponsive","maxWidth","fixed","fixedResponsive","hidden","display","textPrimary","color","fontSize","icon","menuTitle","fontWeight","textAlign","secondaryMenuTitle","logo","nestedList","background","nested","paddingLeft","spacing","initState","selected","menu","itemHeader","title","path","alt","items","InsertChart","permission","view","url","Contacts","indexedMenu","open","ContactMail","create","migrate","Keyboard","movement_receipt","ImportExport","movement_internal","QueueRounded","electronic_bill","FindInPage","Assignment","MainMenu","classes","history","useHistory","_React$useState","React","_React$useState2","setState","useContext","UserContext","sizeScreen","setSizeScreen","matches","useMediaQuery","concat","handleListMenu","event","_objectSpread","map","savedItem","push","className","_jsxs","List","component","aria-label","ListItem","ListItemIcon","onClick","src","Typography","variant","Divider","some","Fragment","button","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","indexedItem","grow","flexGrow","toolBar","search","_defineProperty","borderRadius","shape","fade","common","white","marginRight","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","sectionDesktop","sectionMobile","AppBarComponent","anchorEl","setAnchorEl","_React$useState3","_React$useState4","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","AppBar","elevation","Toolbar","SearchIcon","InputBase","placeholder","input","inputProps","edge","MoreIcon","table","minWidth","texts","headers","concept","detail","delete","TableComponent","rows","handleTable","reload","setReload","useEffect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","newValue","Number","replace","handleDelete","DeleteIcon","margin","marginBottom","divider","alignRight","addButton","initStateForm","type","date","Date","serial","classThird","valueText","valueNumber","wayPay","conceptTable","header","fields","helperText","options","_id","typeThird","typeDocument","enterpriceName","bank","helperTextIng","helperTextEgr","numberAccount","typeAccount","conceptDetail","conceptValue","buttonAddConcept","body","subtitle","CashReceiptForm","setForm","_useState3","_useState4","setWayPay","_useState5","_useState6","setBank","_useState7","_useState8","modalBank","setModalBank","_useState9","_useState10","setConceptTable","_useState11","_useState12","setConcept","_useState13","_useState14","setConceptDetail","_useState15","_useState16","setConceptValue","_useState17","_useState18","total","setTotal","handleChange","e","_e$target","target","prev","handleChangeSelect","handleModalBank","cond1","cond2","func","_toConsumableArray","console","log","newArray","splice","onSubmit","preventDefault","arrayWayPay","handleSubmit","Grid","container","md","sm","xs","Select","fullWidth","onChange","FormHelperText","TextField","Help","_e$target2","newInput","split","join","reverse","output","aux","paginator","Math","ceil","length","i","j","Button","size","startIcon","Save","NoteAdd","Cancel","thirdMapper","_third$entityId","_third$document","_third$dv","_third$documentType","_third$organizationTy","_third$liabilityType","_third$regimeType","_third$name","_third$lastname","_third$businessName","_third$phone","_third$address","_third$city","_third$email","dv","documentType","code","description","organizationType","liabilityType","regimeType","businessName","city","ThirdService","_classCallCheck","_createClass","key","_saveThird","_asyncToGenerator","_regeneratorRuntime","mark","_callee","thirdData","token","responseApi","wrap","_context","next","axios","post","authorization","sent","abrupt","data","t0","stop","_x","_x2","apply","arguments","_getThirds","_callee2","thirds","_context2","get","_x3","entityMapper","entity","_entity$id","_entity$name","_entity$entityTypeCod","_entity$document","_entity$email","_entity$phone","_entity$apiKeyPlemsi","_entity$state","_entity$resolution","_entity$resolutionTex","_entity$lastElectroni","signatoriesMapper","addressMapper","_address$description","_address$city$code","_address$city$descrip","signatory","_signatory$name","_signatory$lastname","_signatory$document","_signatory$documentTy","_signatory$documentTy2","EntityService","_getEntity","listObject","object","res","hasOwnProperty","PlemsiService","_getCities","apikey","process","_getBill","number","preview","thirdClassTitle","field","one","two","cities","ThirdForm","_state$form$name","_state$form$lastname","_state$form$dv","_state$form$businessN","_state$form$city$code","_state$form$city","_loadData","_userContext$token","_userContext$entityId","entityService","plemsiService","getEntity","getCities","loadData","_ref2","_userContext$token2","thirdService","thirdCreated","serverError","saveThird","toast","success","isAxiosError","response","error","message","required","contentAside","lastThird","secondName","lastName","companyName","newThird","aside","content","ThirdMigration","newThirdOptions","setNewThirdOptions","filter","optionOne","optionTwo","optionThree","secondBank","InternalTransactionForm","valueStr","setValueStr","newBankOptions","setNewBankOptions","from","to","CashReceiptReport","itemMapper","_item$code","_item$description","_item$price","_code$description","_item$unitMeasure$cod","_item$unitMeasure","_item$unitMeasure$des","_item$unitMeasure2","_code$description2","_item$itemType$code","_item$itemType","_item$itemType$descri","_item$itemType2","price","unitMeasure","itemType","ItemService","_saveItem","itemData","_getItems","ItemForm","_state$form$price","_state$form$unitMeasu","_state$form$unitMeasu2","_state$form$itemType$","_state$form$itemType","itemService","itemCreated","saveItem","ElectronicBillService","_saveBill","billData","Utils","buildItem","applyTaxes","tax","percent","taxAmount","taxableAmount","selectedTax","currentPercentTax","currentQuantity","currentPrice","currentItem","currentItemType","quantity","taxes","buildTaxesForElectronicBill","forEach","ItemTable","electronicBillMapper","_form$third","orderReference","wayToPay","paymentMethod","paymentDueDate","note","totalTaxes","totalToPay","loadingContainer","bottom","right","opacity","paddingTop","subtitles","payment","itemsTable","buttons","addProduct","selectedItems","loading","ElectronicBillForm","_state$form$third$doc","_state$form$third","_state$form$currentIt","_state$form$currentIt2","getThirds","getItems","_objectSpread3","electronicBillService","bill","billPlemsi","saveBill","getBill","entityInformation","selectedItem","FormControlLabel","control","Checkbox","checked","onApplyTaxes","label","disabled","Link","pathname","Box","CircularProgress","card","cardBody","marginTop","cardPrefix","cardPorcent","BalanceCard","Card","CardContent","prefix","Tooltip","tooltip","ArrowUpwardIcon","ArrowDownwardIcon","uv","LineGraphic","ResponsiveContainer","BarChart","top","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Bar","fill","submitButton","DailyReportForm","gridCard","cardGraphic","user","cards","cashBalance","bankBalance","percentBalance","respectPreviousMonth","IndexApp","EntityContext","Container","ProtectRoute","rest","_objectWithoutProperties","Route","render","Redirect","ContainerApp","CssBaseline","Switch","InternalTransactionReport","userMapper","_user$id","_user$email","_user$password","_user$name","_user$lastname","_user$entityId","_user$state","_user$permissions","_user$token","password","UserService","_login","tokenData","userData","entityData","Error","jwt","_getUsers","_saveUser","_callee3","_context3","_x4","_x5","paper","flexDirection","avatar","submit","rememberCheck","signinButton","footer","forgotPasswordLink","createAccountLink","copyright","Copyright","href","getFullYear","SignIn","_onLogin","userService","Avatar","noValidate","autoFocus","autoComplete","mt","exact","Login","App","MuiThemeProvider","Router","ContainerPage","ToastContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d6f4ad6.chunk.js","sourcesContent":["import { createContext, ReactNode, useState } from 'react'\r\nimport { User } from '../../schemas/User/index'\r\n\r\nconst Context = createContext({})\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n}\r\n\r\nconst initialState: User = {\r\n  id: '',\r\n  email: '',\r\n  name: '',\r\n  lastname: '',\r\n  entityId: '',\r\n  state: '',\r\n  permissions: ['']\r\n}\r\n\r\nexport function UserContextProvider({ children }: Props) {\r\n  const [userContext, setUserContext] = useState<User>(initialState)\r\n  return (\r\n    <Context.Provider value={{ userContext, setUserContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context","import { createContext, ReactNode, useState } from 'react'\r\nimport { Entity } from '../../schemas/Entity/index'\r\n\r\nconst Context = createContext({})\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n}\r\n\r\nconst initialState: Entity = {\r\n  id: '',\r\n  name: '',\r\n  entityTypeCode: '',\r\n  document: '',\r\n  signatories: undefined,\r\n  address: undefined,\r\n  email: undefined,\r\n  phone: undefined,\r\n  apiKeyPlemsi: undefined,\r\n  state: '',\r\n  resolution: undefined,\r\n  resolutionText: undefined,\r\n  lastElectronicBillNumber: undefined\r\n}\r\n\r\nexport function EntityContextProvider({ children }: Props) {\r\n  const [entityContext, setEntityContext] = useState<Entity>(initialState)\r\n  return (\r\n    <Context.Provider value={{ entityContext, setEntityContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context\r\n","import * as React from 'react'\r\nimport { UserContextProvider } from './User/index'\r\nimport { EntityContextProvider } from './Entity/index'\r\n\r\nexport default function GlobalProvider(props: any) {\r\n  return (\r\n    <EntityContextProvider>\r\n    <UserContextProvider>\r\n      {props.children}\r\n    </UserContextProvider>\r\n    </EntityContextProvider>\r\n  )\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {\r\n    deepOrange,\r\n    lightBlue,\r\n} from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: lightBlue[400]\r\n        },\r\n        secondary: {\r\n            main: deepOrange['A400']\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme","export const urls = {\r\n    page: {\r\n      home: '/page',\r\n      login: '/page/login'\r\n    },\r\n    app: {\r\n      index: '/app',\r\n      main: {\r\n        home: '/app/home',\r\n        third: {\r\n          form: '/app/third/form',\r\n          thirdMigrationForm: '/app/third/migration/form',\r\n        },\r\n        cashReceipt: {\r\n          form: '/app/cash-receipt/form',\r\n          report: '/app/cash-receipt/report'\r\n        },\r\n        electronicBill: {\r\n          form: '/app/electronic-bill/form'\r\n        },\r\n        internalTransaction: {\r\n          form: '/app/internal-transaction/form',\r\n          report: '/app/internal-transaction/report'\r\n        },\r\n        item: {\r\n          form: '/app/item/form'\r\n        }\r\n      }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { urls } from '../../../urls'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {\r\n  InsertChart,\r\n  Assignment,\r\n  Keyboard,\r\n  ImportExport,\r\n  Contacts,\r\n  FindInPage,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  ContactMail,\r\n  QueueRounded\r\n} from '@material-ui/icons'\r\nimport { Collapse, Typography } from '@material-ui/core'\r\nimport permissions from '../../../permissions.json'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    rootResponsive: {\r\n      minHeight: '100%',\r\n      maxWidth: '60px',\r\n      backgroundColor: '#263238',\r\n      position: 'fixed'\r\n    },\r\n    fixed: {\r\n      minHeight: '100vh',\r\n      width: '320px',\r\n    },\r\n    fixedResponsive: {\r\n      minHeight: '100vh',\r\n      width: '60px',\r\n    },\r\n    hidden: {\r\n      display: 'none'\r\n    },\r\n    textPrimary: {\r\n      color: '#ffff',\r\n      fontSize: '1rem'\r\n    },\r\n    icon: {\r\n      color: '#ffff',\r\n      width: '1rem'\r\n    },\r\n    menuTitle: {\r\n      color: '#ffff',\r\n      fontWeight: 'bolder',\r\n      fontSize: '1.6rem',\r\n      textAlign: 'center'\r\n    },\r\n    secondaryMenuTitle: {\r\n      color: '#29b6f6',\r\n      fontSize: '1.3rem'\r\n    },\r\n    logo: {\r\n      width: '1.8rem'\r\n    },\r\n    nestedList: {\r\n      background: '#455a64'\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }),\r\n)\r\n\r\n// - in this part all the component menu are housed\r\nconst initState = {\r\n  selected: '',\r\n  menu: {\r\n    itemHeader: {\r\n      title: {\r\n        main: 'Crecer',\r\n        secondary: 'DMC'\r\n      },\r\n      logo: {\r\n        path: '/images/logotipo-crecer-dmc.svg',\r\n        alt: 'logotipo de crecer dmc'\r\n      }\r\n    },\r\n    items: [\r\n      {\r\n        id: '001',\r\n        title: 'Inicio',\r\n        icon: <InsertChart />,\r\n        permission: permissions.home.view,\r\n        url: urls.app.main.home\r\n      },\r\n      {\r\n        id: '002',\r\n        title: 'Administración de terceros',\r\n        icon: <Contacts />,\r\n        permission: permissions.third.view,\r\n        indexedMenu: {\r\n          open: false,\r\n          items: [\r\n            {\r\n              id: '001-01',\r\n              title: 'Creación de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.create,\r\n              url: urls.app.main.third.form\r\n            },\r\n            {\r\n              id: '001-01',\r\n              title: 'Migración de terceros',\r\n              icon: <ContactMail />,\r\n              permission: permissions.third.migrate,\r\n              url: urls.app.main.third.thirdMigrationForm\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        id: '003',\r\n        title: 'Recibos de ingreso / egreso',\r\n        icon: <Keyboard />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.form\r\n      },\r\n      {\r\n        id: '004',\r\n        title: 'Transacciones internas',\r\n        icon: <ImportExport />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.form\r\n      },\r\n      {\r\n        id: '005',\r\n        title: 'Productos',\r\n        icon: <QueueRounded/>,\r\n        permission: permissions.item.view,\r\n        url: urls.app.main.item.form\r\n      },\r\n      {\r\n        id: '006',\r\n        title: 'Factura electrónica',\r\n        icon: <QueueRounded/>,\r\n        permission: permissions.electronic_bill.view,\r\n        url: urls.app.main.electronicBill.form\r\n      },\r\n      {\r\n        id: '007',\r\n        title: 'Reporte de recibos',\r\n        icon: <FindInPage />,\r\n        permission: permissions.movement_receipt.view,\r\n        url: urls.app.main.cashReceipt.report\r\n      },\r\n      {\r\n        id: '008',\r\n        title: 'Reporte de transacciones',\r\n        icon: <Assignment />,\r\n        permission: permissions.movement_internal.view,\r\n        url: urls.app.main.internalTransaction.report\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport default function MainMenu() {\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const [state, setState] = React.useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const [sizeScreen, setSizeScreen] = useState(900)\r\n\r\n  const matches = useMediaQuery(`(min-width:${sizeScreen}px)`)\r\n\r\n  const handleListMenu = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    item: any,\r\n  ) => {\r\n    if (item.indexedMenu) {\r\n      setState({\r\n        ...state,\r\n        selected: item.id,\r\n        menu: {\r\n          ...state.menu,\r\n          items: state.menu.items.map(savedItem => {\r\n            if (savedItem.id === item.id) {\r\n              if (savedItem.indexedMenu) {\r\n                savedItem.indexedMenu.open = !savedItem.indexedMenu.open\r\n              }\r\n            }\r\n            return savedItem\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        selected: item.id\r\n      })\r\n      history.push(item.url)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={matches ? classes.fixed : classes.fixedResponsive}>\r\n      <div className={matches ? classes.root : classes.rootResponsive}>\r\n        <List\r\n          component=\"nav\"\r\n          aria-label=\"main mailbox folders\"\r\n        >\r\n          <ListItem>\r\n            <ListItemIcon\r\n              onClick={() => {\r\n                if (sizeScreen === 900) {\r\n                  setSizeScreen(100)\r\n                } else if (sizeScreen === 100) {\r\n                  setSizeScreen(900)\r\n                }\r\n              }}\r\n            >\r\n              <img\r\n                className={classes.logo}\r\n                src={state.menu.itemHeader.logo.path}\r\n                alt={state.menu.itemHeader.logo.alt}\r\n              />\r\n            </ListItemIcon>\r\n            <Typography\r\n              variant='h6'\r\n              className={matches ? classes.menuTitle : classes.hidden}\r\n            >\r\n              {state.menu.itemHeader.title.main} <span className={classes.secondaryMenuTitle}>{state.menu.itemHeader.title.secondary}</span>\r\n            </Typography>\r\n          </ListItem>\r\n\r\n          <Divider />\r\n          {\r\n            state.menu.items.map(item => (\r\n              userContext.permissions.some(permission => permission === item.permission) ? \r\n              (\r\n                <React.Fragment key={item.id}>\r\n                  <ListItem\r\n                    button\r\n                    selected={state.selected === item.id}\r\n                    onClick={(event) => handleListMenu(event, item)}\r\n                  >\r\n                    <ListItemIcon\r\n                      className={classes.icon}\r\n                    >\r\n                      {item.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={item.title}\r\n                      className={matches ? classes.textPrimary : classes.hidden}\r\n                    />\r\n                    {\r\n                      item.indexedMenu && matches ?\r\n                        item.indexedMenu.open ? <ExpandLess color='primary' /> : <ExpandMore color='secondary' />\r\n                        :\r\n                        ''\r\n                    }\r\n                  </ListItem>\r\n                  {\r\n                    item.indexedMenu ?\r\n                      (\r\n                        <Collapse\r\n                          in={item.indexedMenu.open}\r\n                          timeout=\"auto\"\r\n                          unmountOnExit\r\n                        >\r\n                          <List\r\n                            component=\"div\"\r\n                            disablePadding\r\n                            className={classes.nestedList}\r\n                          >\r\n                            {\r\n                              item.indexedMenu.items.map(indexedItem => (\r\n                                userContext.permissions.some(permission => permission === indexedItem.permission) ?\r\n                                (\r\n                                  <ListItem\r\n                                    key={indexedItem.id}\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={state.selected === indexedItem.id}\r\n                                    onClick={(event) => handleListMenu(event, indexedItem)}\r\n                                  >\r\n                                    <ListItemIcon\r\n                                      className={classes.icon}\r\n                                    >\r\n                                      {indexedItem.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                      className={matches ? classes.textPrimary : classes.hidden}\r\n                                      primary={indexedItem.title}\r\n                                    />\r\n                                  </ListItem>\r\n                                ) : ''\r\n                              ))\r\n                            }\r\n                          </List>\r\n                        </Collapse>\r\n                      ) : ''\r\n                  }\r\n                </React.Fragment>\r\n              ) : ''\r\n            ))\r\n          }\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    toolBar: {\r\n        background: '#ffff'  \r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function AppBarComponent() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Perfil</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Cerrar sesión</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Mensajes</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notificaciones</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Perfil</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Buscar…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show new mails\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n    table: {\r\n        headers: {\r\n            concept: 'Concepto',\r\n            detail: 'Detalle',\r\n            value: 'Valor',\r\n            delete: 'Eliminar'\r\n        }\r\n    }\r\n}\r\nexport default function TableComponent({rows, handleTable} : {rows: Array<any>, handleTable: Function}) {\r\n  \r\n    const classes = useStyles();\r\n    const [reload, setReload] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReload(false)\r\n    }, [reload])\r\n\r\n    // HandleDelete is the handler to delete items from\r\n    // the table.\r\n    const handleDelete = (index: number, value: string) => {\r\n        // this code become the newValue (total of receipt) to number\r\n        const r = /,/gi;\r\n        const newValue = Number(value.replace(r, ''));\r\n        handleTable(\"DEL\", index, newValue)\r\n        setReload(true)\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{texts.table.headers.concept}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.detail}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.value}</TableCell>\r\n                        <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {\r\n                    rows.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                            <TableCell component=\"th\" >{row.concept}</TableCell>\r\n                            <TableCell align=\"right\">{row.detail}</TableCell>\r\n                            <TableCell align=\"right\">{row.value}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton \r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleDelete(index, row.value)}\r\n                                >\r\n                                    <DeleteIcon/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TableComponent from '../Table/TableComponent'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Button, \r\n    Divider, \r\n    FormHelperText, \r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { CashReceipt, Concept } from './cashReceipt.slice';\r\nimport { Save, Help, NoteAdd, Cancel } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n    addButton: {\r\n        width: '100%',\r\n        height: '70%',\r\n        color: '#ffff',\r\n    },\r\n}));\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm: CashReceipt = {\r\n    type: 'INGRESO',\r\n    date: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    classThird: '',\r\n    valueText: '',\r\n    valueNumber: 0,\r\n    wayPay: [],\r\n    conceptTable: []\r\n}\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Recibos de ingreso y egreso'\r\n    },\r\n    fields: {\r\n        type: {\r\n            name: 'type',\r\n            helperText: 'Escoja el tipo de recibo',\r\n            options: ['INGRESO', 'EGRESO']\r\n        },\r\n        date: {\r\n            name: 'date',\r\n            helperText: 'Indique la fecha'\r\n        },\r\n        serial: {\r\n            name: 'serial',\r\n            helperText: 'Escriba el consecutivo',\r\n            placeholder: 'Serial'\r\n        },\r\n        third: {\r\n            name: 'third',\r\n            helperText: 'Escoja uno de los terceros',\r\n            options: [\r\n                {\r\n                    _id: '1',\r\n                    typeThird: 'JURIDICA',\r\n                    typeDocument: 'NIT',\r\n                    document: '123456-7',\r\n                    enterpriceName: 'Almacenes Éxito',\r\n                }\r\n            ]\r\n        },\r\n        classThird: {\r\n            name: 'classThird',\r\n            helperText: 'Escoja una clase del tercero',\r\n            options: [\r\n                {\r\n                    classThird: 'Proveedor'\r\n                }\r\n            ]\r\n        },\r\n        valueText: {\r\n            name: 'valueText',\r\n            helperText: 'Escriba el valor total del recibo en letras',\r\n            placeholder: 'Valor en letras'\r\n        },\r\n        wayPay: {\r\n            name: 'wayPay',\r\n            helperText: 'Selecciona la forma de pago',\r\n            options: [\r\n                {title: 'EFECTIVO', value: 'EFECTIVO'},\r\n                {title: 'CHEQUE', value: 'CHEQUE'},\r\n                {title: 'CONSIGNACIÓN', value: 'CONSIGNACION'},\r\n                {title: 'TRANSFERENCIA', value: 'TRANSFERENCIA'}\r\n            ]\r\n        },\r\n        bank: {\r\n            name: 'bank',\r\n            helperTextIng: 'Selecciona el banco a depositar',\r\n            helperTextEgr: 'Selecciona el banco a debitar',\r\n            options: [\r\n                {\r\n                    _id: \"5fac806e7434966c842292fe\",\r\n                    bank: \"BANCOLOMBIA\",\r\n                    numberAccount: \"28563044871\",\r\n                    typeAccount: \"DEBITO\"\r\n                }\r\n            ]\r\n        },\r\n        concept: {\r\n            name: 'concept',\r\n            helperText: 'Selecciona un concepto',\r\n            options: [\r\n                {\r\n                    concept: 'Concepto de prueba'\r\n                }\r\n            ]\r\n        },\r\n        conceptDetail: {\r\n            name: 'conceptDetail',\r\n            helperText: 'Detalla el concepto a profundidad',\r\n            placeholder: 'Detalle'\r\n        },\r\n        conceptValue: {\r\n            name: 'conceptValue',\r\n            helperText: 'Ingresa el valor del concepto',\r\n            placeholder: '$ Valor'\r\n        },\r\n        buttonAddConcept: {\r\n            title: 'Agregar'\r\n        }\r\n    },\r\n    body: {\r\n        subtitle: 'Tabla de conceptos'\r\n    }\r\n}\r\n\r\nexport default function CashReceiptForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [form, setForm] = useState<CashReceipt>(initStateForm);\r\n    const [wayPay, setWayPay] = useState('');\r\n    const [bank, setBank] = useState('NO DEFINIDO');\r\n    const [modalBank, setModalBank] = useState(false);\r\n\r\n    // States of the concept table\r\n    // This table will go into the main form\r\n    // Main form field: 'wayPay'\r\n    const [conceptTable, setConceptTable] = useState<Concept[]>([]);\r\n    const [concept, setConcept] = useState('');\r\n    const [conceptDetail, setConceptDetail] = useState('');\r\n    const [conceptValue, setConceptValue] = useState('');\r\n    const [total, setTotal] = useState(0);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input.\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        switch (name) {\r\n\r\n            case 'conceptDetail':\r\n                setConceptDetail(value)\r\n                break;\r\n\r\n            default:\r\n                setForm(prev => {\r\n                    (prev as any)[name] = value\r\n                    const newValue = {...prev}\r\n                    return newValue\r\n                })\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        switch (name) {\r\n            case 'wayPay':\r\n                setWayPay(event.target.value as any)\r\n                handleModalBank(event.target.value as any, form.type);\r\n                break;\r\n\r\n            case 'bank':\r\n                setBank(event.target.value as any)\r\n                break;\r\n            \r\n            case 'type':\r\n                setForm({\r\n                    ...form,\r\n                    type: event.target.value as any,\r\n                });\r\n                handleModalBank(wayPay, event.target.value as any);\r\n                break;\r\n            \r\n            case 'concept':\r\n                setConcept(event.target.value as any);\r\n                break;\r\n\r\n            default:\r\n                setForm({\r\n                    ...form,\r\n                    [name]: event.target.value,\r\n                });\r\n        }\r\n    };\r\n\r\n    // HandleModalBank is the handler to show and hide\r\n    // the bank input select: cond1 is wayPay value and\r\n    // cond2 is type value.\r\n    const handleModalBank = (cond1: string, cond2: string) => {\r\n\r\n        switch (cond1) {\r\n            case 'EFECTIVO':\r\n                setModalBank(false);\r\n                setBank('NO DEFINIDO');\r\n                break;\r\n\r\n            case 'CHEQUE':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(true);\r\n                }\r\n                break;\r\n\r\n            case 'CONSIGNACION':\r\n                if(cond2 === 'INGRESO'){\r\n                    setModalBank(true);\r\n\r\n                } else if(cond2 === 'EGRESO') {\r\n                    setModalBank(false);\r\n                    setBank('NO DEFINIDO');\r\n                }\r\n                break;\r\n\r\n            case 'TRANSFERENCIA':\r\n                setModalBank(true);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // HandleTable is the handler to add and remove items\r\n    // from the concept table, it also adds or subtracts \r\n    // the value of the total receipt.\r\n    const handleTable = (func: string, id?: number, value?: number) => {\r\n\r\n        switch (func) {\r\n            case 'PUSH':\r\n                setConceptTable([...conceptTable, {\r\n                    concept,\r\n                    detail: conceptDetail,\r\n                    value: conceptValue\r\n                }]);\r\n\r\n                const r = /,/gi;\r\n                const newValue = Number(conceptValue.replace(r, ''));\r\n\r\n                setTotal(total + newValue);\r\n                setConcept('');\r\n                setConceptDetail('');\r\n                setConceptValue('');\r\n                break;\r\n\r\n            case 'DEL':\r\n                console.log(id)\r\n                if(id !== undefined){\r\n                    let newArray = conceptTable;\r\n                    newArray.splice(id, 1);\r\n                    setConceptTable(newArray);\r\n                }\r\n                if(value !== undefined){\r\n                    setTotal(total - value) \r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    \r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber.\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setConceptValue(value);\r\n        if(name === 'conceptValue'){\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setConceptValue(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        e.preventDefault();\r\n        let arrayWayPay = [\r\n            {wayPay: wayPay, bank: bank}\r\n        ]\r\n\r\n        setForm({\r\n            ...form,\r\n            valueNumber: total,\r\n            wayPay: arrayWayPay,\r\n            conceptTable: conceptTable\r\n        })\r\n        console.log(form)\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initStateForm);\r\n        setWayPay('');\r\n        setBank('NO DEFINIDO');\r\n        setModalBank(false);\r\n        setConceptTable([]);\r\n        setConcept('');\r\n        setConceptDetail('');\r\n        setConceptValue('');\r\n        setTotal(0);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {/* ------- *Header --------- */}\r\n            <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n            \r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ------- *Body ----------- */}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e} \r\n                                    >\r\n                                        {e}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.fields.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.serial.helperText}\r\n                        placeholder = {texts.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={12} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e._id} \r\n                                    >\r\n                                        {e.enterpriceName}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **class third ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.classThird.name}\r\n                        value = {form.classThird}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.classThird.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.classThird} \r\n                                    >\r\n                                        {e.classThird}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.classThird.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **value in text ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.valueText.name}\r\n                        value = {form.valueText}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.valueText.helperText}\r\n                        placeholder = {texts.fields.valueText.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={modalBank ? 4 : 8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.wayPay.name}\r\n                        value = {wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {\r\n                        // this section is visible if modal bank is true\r\n                        // the logic for this is on HandleModalBank function ^\r\n                        modalBank === true ?\r\n                        <Grid item md={4} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.fields.bank.name}\r\n                            value = {bank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    texts.fields.bank.options.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.numberAccount} \r\n                                        >\r\n                                            {e.bank} - {e.numberAccount}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>\r\n                                {\r\n                                    form.type === 'INGRESO' \r\n                                    ?\r\n                                    texts.fields.bank.helperTextIng \r\n                                    :\r\n                                    texts.fields.bank.helperTextEgr\r\n                                }\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: button **help ------*/}\r\n                    <Grid item md={4} sm={6} xs={12} className={classes.alignRight}>\r\n                        <IconButton \r\n                        aria-label='Ayuda'\r\n                        type=\"button\"\r\n                        >\r\n                            <Help fontSize=\"large\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Typography\r\n                        variant='h6'\r\n                        >\r\n                            {texts.body.subtitle}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Divider className={classes.divider}/>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.fields.concept.name}\r\n                        value = {concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.concept} \r\n                                    >\r\n                                        {e.concept}\r\n                                    </MenuItem>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {texts.fields.concept.helperText}\r\n                        </FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***value per concept ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                            name={texts.fields.conceptValue.name}\r\n                            value = {conceptValue}\r\n                            onChange={thousandSeparator}\r\n                            fullWidth\r\n                            variant = \"outlined\"\r\n                            helperText = {texts.fields.conceptValue.helperText}\r\n                            placeholder = {texts.fields.conceptValue.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **concepts table form: item ***concept detail ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <TextField\r\n                        name = {texts.fields.conceptDetail.name}\r\n                        value = {conceptDetail}\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.fields.conceptDetail.helperText}\r\n                        placeholder = {texts.fields.conceptDetail.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            onClick={() => handleTable(\"PUSH\")}\r\n                            className={classes.addButton}\r\n                            startIcon={<Save />}\r\n                        >\r\n                            {texts.fields.buttonAddConcept.title}\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **concepts table rendering ------*/}\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <TableComponent rows={conceptTable} handleTable={handleTable}/>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **total ------*/}\r\n                    <Grid item md={4} sm={4} xs ={6}>\r\n                        <Typography variant=\"h6\">\r\n                            <span>Total: </span>$ {total}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        onClick={cancel}\r\n                        type=\"button\"\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Third } from \"../../schemas/Third\";\r\n\r\nexport default function thirdMapper(third: any | unknown): Third {\r\n  return {\r\n    entityId: third.entityId ?? '',\r\n    document: third.document ?? '',\r\n    dv: third.dv ?? '',\r\n    documentType: third.documentType ?? { code: '', description: '' },\r\n    organizationType: third.organizationType ?? { code: '', description: '' },\r\n    liabilityType: third.liabilityType ?? { code: '', description: '' },\r\n    regimeType: third.regimeType ?? { code: '', description: '' },\r\n    name: third.name ?? undefined,\r\n    lastname: third.lastname ?? undefined,\r\n    businessName: third.businessName ?? undefined,\r\n    phone: third.phone ?? '',\r\n    address: third.address ?? '',\r\n    city: third.city ?? undefined,\r\n    email: third.email ?? ''\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport thirdMapper from '../../mappers/Third/third.mapper'\r\nimport { Third } from '../../schemas/Third'\r\n\r\nclass ThirdService {\r\n  async saveThird(thirdData: Third, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/third', thirdData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getThirds(token: string) : Promise<Third[]> {\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/third', {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n\r\n      const thirds = responseApi.data.map((third:any) => {\r\n        return thirdMapper(third) \r\n      })\r\n\r\n      return thirds\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ThirdService\r\n","import { Address, Entity, Signatory } from \"../../schemas/Entity\";\r\n\r\nexport default function entityMapper(entity: any | unknown): Entity {\r\n  return {\r\n    id: entity.id ?? '',\r\n    name: entity.name ?? '',\r\n    entityTypeCode: entity.entityTypeCode ?? '',\r\n    document: entity.document ?? '',\r\n    signatories: entity.signatories ? signatoriesMapper(entity.signatories) : undefined,\r\n    address: entity.address ? addressMapper(entity.address) : undefined,\r\n    email: entity.email ?? '',\r\n    phone: entity.phone ?? '',\r\n    apiKeyPlemsi: entity.apiKeyPlemsi ?? '',\r\n    state: entity.state ?? '',\r\n    resolution: entity.resolution ?? '',\r\n    resolutionText: entity.resolutionText ?? '',\r\n    lastElectronicBillNumber: entity.lastElectronicBillNumber ?? 0\r\n  }\r\n}\r\n\r\nfunction addressMapper(address: any): Address {\r\n  return {\r\n    description: address.description ?? '',\r\n    city: {\r\n      code: address.city.code ?? '',\r\n      description: address.city.description ?? ''\r\n    }\r\n  }\r\n}\r\n\r\nfunction signatoriesMapper(signatories: any[]): Signatory[] {\r\n  const response = signatories.map(signatory => {\r\n    return {\r\n      name: signatory.name ?? '',\r\n      lastname: signatory.lastname ?? '',\r\n      document: signatory.document ?? '',\r\n      documentType: {\r\n        code: signatory.documentType.code ?? '',\r\n        description: signatory.documentType.description ?? ''\r\n      }\r\n    }\r\n  })\r\n\r\n  return response\r\n}\r\n","import axios from 'axios'\r\nimport entityMapper from '../../mappers/Entity/entity.mapper'\r\nimport { Entity } from '../../schemas/Entity'\r\n\r\nclass EntityService {\r\n  async getEntity(token: string, entityId: string): Promise<Entity> {\r\n    try {\r\n      const responseApi = await axios.get(`/api/v2/entity/filter?entityId=${entityId}`, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return entityMapper(responseApi.data)\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default EntityService\r\n","interface Response {\r\n  code: string;\r\n  description: string;\r\n}\r\n\r\nexport function listObject(object: any): Response[] {\r\n  const res: Response[] = [];\r\n\r\n  for (const code in object) {\r\n    if (object.hasOwnProperty(code)) {\r\n      const description = object[code];\r\n      res.push({ code, description });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n","import axios from 'axios'\r\nimport { listObject } from '../../mappers/Common/comon.mapper'\r\n\r\nclass PlemsiService {\r\n  async getCities(apikey: string) {\r\n    try {\r\n      const responseApi = await axios.get(`${process.env.REACT_APP_PLEMSI_API}/common/list/municipality`, {\r\n        headers: {\r\n          authorization: `Bearer ${apikey}`\r\n        }\r\n      })\r\n      const data = listObject(responseApi.data.data)\r\n      return data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getBill(apikey: string, number: number) {\r\n    try {\r\n      const responseApi = await axios.get(`${process.env.REACT_APP_PLEMSI_API}/billing/invoice/one?by=number&value=${number}&prefix=${process.env.REACT_APP_PLEMSI_PREFIX}`, {\r\n        headers: {\r\n          authorization: `Bearer ${apikey}`\r\n        }\r\n      })\r\n      return responseApi.data.data.preview\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default PlemsiService\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Third } from '../../../schemas/Third'\r\nimport ThirdService from '../../../services/Third'\r\nimport EntityService from '../../../services/Entity'\r\nimport PlemsiService from '../../../services/Plemsi'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear terceros'\r\n  },\r\n  body: {\r\n    field: {\r\n      organizationType: {\r\n        name: 'organizationType',\r\n        helperText: 'Escoja un tipo de persona',\r\n        options: [\r\n          { description: 'Jurídica', code: '1' },\r\n          { description: 'Natural', code: '2' }\r\n        ]\r\n      },\r\n      documentType: {\r\n        name: 'documentType',\r\n        helperText: 'Escoja el tipo de documento',\r\n        options: {\r\n          one: [\r\n            { description: 'NIT', code: '6' }\r\n          ],\r\n          two: [\r\n            { description: 'Registro civil', code: '1' },\r\n            { description: 'Tarjeta de identidad', code: '2' },\r\n            { description: 'Cédula de ciudadanía', code: '3' },\r\n            { description: 'Cédula de extranjería', code: '5' },\r\n            { description: 'Pasaporte', code: '7' },\r\n            { description: 'Documento de identificación extranjero', code: '8' }\r\n          ]\r\n        }\r\n      },\r\n      liabilityType: {\r\n        name: 'liabilityType',\r\n        helperText: 'Escoja el tipo de responsabilidad',\r\n        options: [\r\n          { description: 'Gran contribuyente', code: '7' },\r\n          { description: 'Autorretenedor', code: '9' },\r\n          { description: 'Agente de retención en el impuesto sobre las ventas', code: '14' },\r\n          { description: 'Régimen Simple de Tributación – SIMPLE', code: '112' },\r\n          { description: 'No responsable', code: '117' }\r\n        ]\r\n      },\r\n      regimeType: {\r\n        name: 'regimeType',\r\n        helperText: 'Escoja el tipo de régimen',\r\n        options: [\r\n          { description: 'Responsable de IVA', code: '1' },\r\n          { description: 'No responsable de IVA', code: '2' }\r\n        ]\r\n      },\r\n      document: {\r\n        name: 'document',\r\n        helperText: 'Escriba el número de documento',\r\n        placeholder: 'Documento'\r\n      },\r\n      dv: {\r\n        name: 'dv',\r\n        helperText: 'DV',\r\n        placeholder: 'DV'\r\n      },\r\n      name: {\r\n        one: {\r\n          name: {\r\n            name: 'name',\r\n            helperText: 'Escriba el primer nombre de la persona',\r\n            placeholder: 'Nombre'\r\n          },\r\n          lastname: {\r\n            name: 'lastname',\r\n            helperText: 'Escriba el apellido de la persona',\r\n            placeholder: 'Apellido(s)'\r\n          }\r\n        },\r\n        two: {\r\n          businessName: {\r\n            name: 'businessName',\r\n            helperText: 'Escriba el nombre de la empresa',\r\n            placeholder: 'Razón social'\r\n          }\r\n        }\r\n      },\r\n      email: {\r\n        name: 'email',\r\n        helperText: 'Escriba el email',\r\n        placeholder: 'Email'\r\n      },\r\n      phone: {\r\n        name: 'phone',\r\n        helperText: 'Escriba el número telefónico',\r\n        placeholder: 'Número telefónico'\r\n      },\r\n      address: {\r\n        name: 'address',\r\n        helperText: 'Escriba la dirección',\r\n        placeholder: 'Dirección'\r\n      },\r\n      city: {\r\n        name: 'city',\r\n        helperText: 'Ciudad o municipio'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Third\r\n  cities: any[]\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    document: '',\r\n    dv: undefined,\r\n    documentType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    organizationType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    liabilityType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    regimeType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    name: undefined,\r\n    lastname: undefined,\r\n    businessName: undefined,\r\n    phone: '',\r\n    address: '',\r\n    city: undefined,\r\n    email: ''\r\n  },\r\n  cities: []\r\n}\r\n\r\nexport default function ThirdForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const entityService = new EntityService()\r\n      const plemsiService = new PlemsiService()\r\n      const entity = await entityService.getEntity(userContext.token ?? '', userContext.entityId ?? '')\r\n      const cities = await plemsiService.getCities(entity.apiKeyPlemsi ?? '')\r\n      setState({\r\n        ...state,\r\n        cities\r\n      })\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const thirdService = new ThirdService()\r\n      const thirdCreated = await thirdService.saveThird(state.form, userContext.token ?? '')\r\n      setState({\r\n        ...initState,\r\n        cities: state.cities\r\n      })\r\n      return toast.success(`El tercero ${thirdCreated.document} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header ------*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: item thrid type ------*/}\r\n          <Grid item md={state.form.organizationType.code === '2' ? 4 : 3} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.organizationType.name}\r\n              value={state.form.organizationType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.organizationType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.organizationType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.organizationType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.documentType.name}\r\n              value={state.form.documentType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                // this will depend of organizationType field\r\n                state.form.organizationType.code === texts.body.field.organizationType.options[0].code ?\r\n                  texts.body.field.documentType.options.one.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n                  :\r\n                  texts.body.field.documentType.options.two.map((item) =>\r\n                    <MenuItem\r\n                      key={item.description}\r\n                      value={item.code}\r\n                      onClick={() => handleChangeSelect(texts.body.field.documentType.name, item)}\r\n                    >\r\n                      {item.description}\r\n                    </MenuItem>\r\n                  )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.documentType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item document number ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.document.name}\r\n              value={state.form.document}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.document.helperText}\r\n              placeholder={texts.body.field.document.placeholder}\r\n            />\r\n          </Grid>\r\n          {\r\n            /*\r\n            In this section the name, secondName, lastName and businessName\r\n            fields are conditioned to the organizationType field.\r\n            If typeThird field is NATURAL then the name, secondName and lastName\r\n            fields will be availabe while businessName field will be unavailable,\r\n            else if typeThird field is JURIDICA then the businessName field will\r\n            be available while the name, secondName and lastName fields will be\r\n            unavailable\r\n            */\r\n\r\n            state.form.organizationType.code === '2'\r\n              ?\r\n              <React.Fragment>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.name.name}\r\n                    value={state.form.name ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.name.helperText}\r\n                    placeholder={texts.body.field.name.one.name.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.one.lastname.name}\r\n                    value={state.form.lastname ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.one.lastname.helperText}\r\n                    placeholder={texts.body.field.name.one.lastname.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n              :\r\n              <React.Fragment>\r\n                {/* ----- Form: item document dv ------*/}\r\n                <Grid item md={1} sm={3} xs={2}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.dv.name}\r\n                    value={state.form.dv ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.dv.helperText}\r\n                    placeholder={texts.body.field.dv.placeholder}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={12} sm={6} xs={12}>\r\n                  <TextField\r\n                    required={true}\r\n                    name={texts.body.field.name.two.businessName.name}\r\n                    value={state.form.businessName ?? ''}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    helperText={texts.body.field.name.two.businessName.helperText}\r\n                    placeholder={texts.body.field.name.two.businessName.placeholder}\r\n                  />\r\n                </Grid>\r\n              </React.Fragment>\r\n          }\r\n\r\n          {/* ----- Form: item liability type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.liabilityType.name}\r\n              value={state.form.liabilityType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.liabilityType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.liabilityType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.liabilityType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item regime type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.regimeType.name}\r\n              value={state.form.regimeType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.regimeType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.regimeType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.regimeType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item email ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.email.name}\r\n              value={state.form.email}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.email.helperText}\r\n              placeholder={texts.body.field.email.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item phone ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.phone.name}\r\n              value={state.form.phone}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.phone.helperText}\r\n              placeholder={texts.body.field.phone.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item address ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <TextField\r\n              name={texts.body.field.address.name}\r\n              value={state.form.address}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.address.helperText}\r\n              placeholder={texts.body.field.address.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: City ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.city.name}\r\n              value={state.form.city?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.cities.map((item) =>\r\n                  <MenuItem\r\n                    key={item.code}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.city.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.city.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Divider, FormHelperText, Grid, IconButton, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    contentAside: {\r\n        textAlign: 'right',\r\n        padding: '5vh 5vh 0 10vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    },\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Migrar terceros'\r\n    },\r\n    body: {\r\n        field: {\r\n            lastThird: {\r\n                name: 'lastThird',\r\n                helperText: 'Escoja el tercero a migrar',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            },\r\n            newThird: {\r\n                name: 'newThird',\r\n                helperText: 'Escoja el nuevo tercero',\r\n                options: [\r\n                    {\r\n                        id: '12',\r\n                        name: 'Pedro',\r\n                        secondName: 'Alfonso',\r\n                        lastName: 'Marin'\r\n                    },\r\n                    {\r\n                        id: '13',\r\n                        companyName: 'Electrosuaza ltda'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        aside: {\r\n            title: 'Necesitas ayuda?',\r\n            content: 'La migración de terceros es la manera de transferir los recibos y demás registros de un tercero a otro tercero. Esto te será útil en caso de querer unificar un tercero que tengas duplicado.'\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initStateForm = {\r\n    lastThird: '',\r\n    newThird: ''\r\n}\r\n\r\nexport default function ThirdMigration() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initStateForm);\r\n    const [ newThirdOptions, setNewThirdOptions ] = useState(texts.body.field.lastThird.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the lastThird\r\n        // from the third array, with this if the user wants to\r\n        // transfer from one third to another the new options will\r\n        // be the other thirds.\r\n        if(name === 'lastThird'){\r\n            let res = texts.body.field.lastThird.options.filter(e => e.id !== event.target.value);\r\n            setNewThirdOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* ----- Header ------*/}\r\n            <React.Fragment>\r\n                <Typography\r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <Grid container spacing={5}>\r\n                <Grid item md={7} sm={12} xs={12}>\r\n\r\n                    <form onSubmit={(e) => handleSubmit(e)}>\r\n                        <Grid container spacing={3}>\r\n                            {/* ----- Form: item last thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.lastThird.name}\r\n                                value = {form.lastThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        texts.body.field.lastThird.options.map((e, index) => \r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.lastThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n\r\n                            {/* ----- Form: item new thrid ------*/}\r\n                            <Grid item md={12} sm={12} xs={12}>\r\n                                <Select\r\n                                name={texts.body.field.newThird.name}\r\n                                value = {form.newThird}\r\n                                variant = \"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeSelect}\r\n                                >\r\n                                    {\r\n                                        newThirdOptions.map((e, index) =>\r\n                                            <MenuItem\r\n                                            key={index} \r\n                                            value={e.id}\r\n                                            >\r\n                                                {\r\n                                                    // if the third has a name, it will show it\r\n                                                    // else it will show the company name\r\n                                                    e.name \r\n                                                    ? \r\n                                                        `${e.name} ${e.secondName} ${e.lastName}`\r\n                                                    : \r\n                                                        e.companyName\r\n                                                }\r\n                                            </MenuItem>\r\n                                            )\r\n                                    }\r\n                                </Select>\r\n                                <FormHelperText>{texts.body.field.newThird.helperText}</FormHelperText>\r\n                            </Grid>\r\n                            \r\n                            <Grid item md={12} sm={6} xs ={12} className={classes.alignRight}>\r\n                                <IconButton\r\n                                type=\"submit\"\r\n                                >\r\n                                    <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </Grid>\r\n\r\n                {/* ------------ Aside -----------------*/}\r\n                <Grid md={5} sm={12} xs={12} className={classes.contentAside}>\r\n                    <Typography color='primary' variant='h6'>{texts.body.aside.title}</Typography>\r\n                    <Typography variant='body2'>{texts.body.aside.content}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton, \r\n    MenuItem, \r\n    Select, \r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\nimport { InternalTransaction } from './internalTransaction.slice';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Transacciones internas'\r\n    },\r\n    body: {\r\n        field: {\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de transacción',\r\n                options: [\r\n                    {title: 'Consignación de efectivo a un banco', value: 'CONSIGNACION'},\r\n                    {title: 'Retiro de efectivo de un banco', value: 'RETIRO'},\r\n                    {title: 'Transferencia de un banco a otro banco', value: 'TRANSFERENCIA'}\r\n                ]\r\n            },\r\n            date: {\r\n                name: 'date',\r\n                helperText: 'Ingrese la fecha del movimiento',\r\n                placeholder: 'Fecha *'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial o código de transacción',\r\n                placeholder: 'Serial *'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: {\r\n                    optionOne: 'Escoja el banco a consignar',\r\n                    optionTwo: 'Escoja el banco a retirar',\r\n                    optionThree: 'Escoja el banco que transfiere'\r\n                },\r\n                options: [\r\n                    {title: 'Bancolombia', value: '674867836'},\r\n                    {title: 'BBVA', value: '7786786687'}\r\n                ]\r\n            },\r\n            secondBank: {\r\n                name: 'secondBank',\r\n                helperText: 'Escoja el banco a transferir'\r\n            },\r\n            value: {\r\n                name: 'value',\r\n                helperText: 'Ingrese el valor de la transacción',\r\n                placeholder: 'Value *'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState: InternalTransaction = {\r\n    type: '',\r\n    date: new Date(),\r\n    serial: '',\r\n    bank: '',\r\n    secondBank: undefined,\r\n    value: 0\r\n}\r\n\r\nexport default function InternalTransactionForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState<InternalTransaction>(initState);\r\n    const [ valueStr, setValueStr ] = useState('');\r\n    const [ newBankOptions, setNewBankOptions ] = useState(texts.body.field.bank.options);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n\r\n        // this code removes the option slected on the bank\r\n        // from the bank array, with this if the user wants \r\n        // to transfer from one bank to another the new options\r\n        // will be the other banks.\r\n        if(name === texts.body.field.bank.name){\r\n            let res = texts.body.field.bank.options.filter(e => e.value !== event.target.value);\r\n            setNewBankOptions(res);\r\n        }\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // Function for thousand separator\r\n    // this function adds thousand separator to numbers in:\r\n    // fields: valueNumber\r\n    const thousandSeparator = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n\r\n        if(name === texts.body.field.value.name){\r\n            setValueStr(value);\r\n\r\n            let input = value.split(',').join('');\r\n            let newInput = input.split('').reverse();\r\n            \r\n            let output = [];\r\n            let aux = '';\r\n            let paginator = Math.ceil(newInput.length / 3);\r\n            \r\n            for(let i = 0; i < paginator; i ++){\r\n                for(let j = 0; j < 3; j ++){\r\n                    if(newInput[j + (i * 3)] !== undefined){\r\n                        aux += newInput[j + (i * 3)];\r\n                    }\r\n                }\r\n                output.push(aux)\r\n                aux = '';\r\n                setValueStr(output.join(',').split('').reverse().join(''));\r\n            }\r\n        }\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        // this code become the valueStr to number\r\n        const r = /,/gi;\r\n        const newValue = valueStr.replace(r, '');\r\n        setForm({\r\n            ...form,\r\n            value: Number(newValue)\r\n        });\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n        setValueStr('');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                \r\n                    {/* ----- Form: item **type ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.field.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **date ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.date.name}\r\n                        value = {form.date}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.field.date.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.field.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.field.serial.helperText}\r\n                        placeholder = {texts.body.field.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **bank ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.field.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.field.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title} - {e.value}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>\r\n                            {\r\n                                form.type === texts.body.field.type.options[0].value \r\n                                ? \r\n                                texts.body.field.bank.helperText.optionOne\r\n                                : \r\n                                form.type === texts.body.field.type.options[1].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionTwo\r\n                                :\r\n                                form.type === texts.body.field.type.options[2].value\r\n                                ?\r\n                                texts.body.field.bank.helperText.optionThree\r\n                                :\r\n                                texts.body.field.bank.helperText.optionOne\r\n                            }\r\n                                \r\n                        </FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **secondBank ------*/}\r\n                    {\r\n                        // this item will depend on the value in form.type \r\n                        form.type === texts.body.field.type.options[2].value\r\n                        ?\r\n                        <Grid item md={6} sm={6} xs={12}>\r\n                            <Select\r\n                            name={texts.body.field.secondBank.name}\r\n                            value = {form.secondBank}\r\n                            variant = \"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChangeSelect}\r\n                            >\r\n                                {\r\n                                    newBankOptions.map((e, index) => \r\n                                        <MenuItem\r\n                                        key={index} \r\n                                        value={e.value} \r\n                                        >\r\n                                            {e.title} - {e.value}\r\n                                        </MenuItem>\r\n                                        )\r\n                                }\r\n                            </Select>\r\n                            <FormHelperText>{texts.body.field.secondBank.helperText}</FormHelperText>\r\n                        </Grid>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    {/* ----- Form: item **value ------*/}\r\n                    <Grid item md={6} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name={texts.body.field.value.name}\r\n                        value = {valueStr}\r\n                        onChange={thousandSeparator}\r\n                        fullWidth\r\n                        variant = \"outlined\"\r\n                        helperText = {texts.body.field.value.helperText}\r\n                        placeholder = {texts.body.field.value.placeholder}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de recibos de caja'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            serial: {\r\n                name: 'serial',\r\n                helperText: 'Ingrese el serial de la transacción',\r\n                placeholder: 'Serial'\r\n            },\r\n            third: {\r\n                name: 'third',\r\n                helperText: 'Escoja un tercero para filtrar',\r\n                options: [\r\n                    {title: 'Pedro Mario Carranza', value: '33344554'},\r\n                    {title: 'Eléctricos don pipe', value: '987675656'},\r\n                    {title: 'Maria Perdomo', value: '35765633'}\r\n                ]\r\n            },\r\n            wayPay: {\r\n                name: 'wayPay',\r\n                helperText: 'Escoja la manera de pago',\r\n                options: [\r\n                    {title: 'Efectivo', value: 'efectivo'},\r\n                    {title: 'Consignación', value: 'consignacion'},\r\n                    {title: 'Cheque', value: 'cheque'}\r\n                ]\r\n            },\r\n            concept: {\r\n                name: 'concept',\r\n                helperText: 'Escoja un concepto',\r\n                options: [\r\n                    {title: 'Exequias', value: '12005'},\r\n                    {title: 'Partidas', value: '11002'},\r\n                    {title: 'Donaciones', value: '10250'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    serial: '',\r\n    third: '',\r\n    wayPay: '',\r\n    concept: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **serial ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.serial.name}\r\n                        value = {form.serial}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        onChange= {handleChange}\r\n                        helperText = {texts.body.fields.serial.helperText}\r\n                        placeholder = {texts.body.fields.serial.placeholder}\r\n                        />\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **third ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.third.name}\r\n                        value = {form.third}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.third.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.third.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **way pay ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.wayPay.name}\r\n                        value = {form.wayPay}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.wayPay.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.wayPay.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Concept ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.concept.name}\r\n                        value = {form.concept}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.concept.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.concept.helperText}</FormHelperText>\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of cash receipt ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider,\r\n    FormHelperText,\r\n    Grid, \r\n    IconButton,\r\n    MenuItem,\r\n    Select,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { Cancel, NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '85%',\r\n        margin: '10vh auto 10vh auto',\r\n        height: 'auto'\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginBottom: '1vh'\r\n    },\r\n    divider: {\r\n        marginBottom: '6vh'\r\n    },\r\n    alignRight: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte de transacciones internas'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'from',\r\n                helperText: 'Desde'\r\n            },\r\n            to: {\r\n                name: 'to',\r\n                helperText: 'Hasta'\r\n            },\r\n            bank: {\r\n                name: 'bank',\r\n                helperText: 'Escoja un banco',\r\n                options: [\r\n                    {title: 'Bancolombia', value: '786786765'},\r\n                    {title: 'BBVA', value: '110546502'},\r\n                    {title: 'Galicia', value: '10250345'}\r\n                ]\r\n            },\r\n            type: {\r\n                name: 'type',\r\n                helperText: 'Escoja el tipo de recibo',\r\n                options: [\r\n                    {title: 'Ingreso', value: 'ingreso'},\r\n                    {title: 'Egreso', value: 'egreso'}\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    from: new Date(),\r\n    to: new Date(),\r\n    bank: '',\r\n    type: ''\r\n}\r\n\r\nexport default function CashReceiptReport() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user change the options \r\n    // on an input select.\r\n    const handleChangeSelect = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\r\n        const name = event.target.name as string;\r\n        setForm({\r\n            ...form,\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setForm(initState);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n             {/* ----- Header ------*/}\r\n             <React.Fragment>\r\n                <Typography \r\n                variant='h5'\r\n                className={classes.title}\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </React.Fragment>\r\n\r\n            <Divider\r\n            className={classes.divider}\r\n            />\r\n\r\n            {/* ----- Body ------*/}\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {/* ----- Form: item **from ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.from.name}\r\n                        value = {form.from}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.from.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **to ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <TextField\r\n                        required={true}\r\n                        name = {texts.body.fields.to.name}\r\n                        value = {form.to}\r\n                        id = 'outlined-helperText'\r\n                        variant = 'outlined'\r\n                        fullWidth\r\n                        type = 'date'\r\n                        onChange = {handleChange}\r\n                        helperText = {texts.body.fields.to.helperText}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    {/* ----- Form: item **Type of internal transaction ------*/}\r\n                    <Grid item md={4} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.type.name}\r\n                        value = {form.type}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.type.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.type.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    {/* ----- Form: item **Bank ------*/}\r\n                    <Grid item md={8} sm={6} xs={12}>\r\n                        <Select\r\n                        name={texts.body.fields.bank.name}\r\n                        value = {form.bank}\r\n                        variant = \"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChangeSelect}\r\n                        >\r\n                            {\r\n                                texts.body.fields.bank.options.map((e, index) => \r\n                                    <MenuItem\r\n                                    key={index} \r\n                                    value={e.value} \r\n                                    >\r\n                                        {e.title}\r\n                                    </MenuItem>\r\n                                    )\r\n                            }\r\n                        </Select>\r\n                        <FormHelperText>{texts.body.fields.bank.helperText}</FormHelperText>\r\n                    </Grid>\r\n\r\n                    <Grid item md={12} sm={12} xs ={12} className={classes.alignRight}>\r\n                        <IconButton\r\n                        type=\"submit\"\r\n                        >\r\n                            <NoteAdd fontSize={\"large\"} color=\"primary\"/>\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        type=\"button\"\r\n                        onClick={cancel}\r\n                        >\r\n                            <Cancel fontSize={\"large\"} color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Grid>\r\n                \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Item } from \"../../schemas/Item\";\r\n\r\nexport default function itemMapper(item: any | unknown): Item {\r\n  return {\r\n    code: item.code ?? '',\r\n    description: item.description ?? '',\r\n    price: item.price ?? undefined,\r\n    unitMeasure: {\r\n      code: item.unitMeasure?.code ?? '',\r\n      description: item.unitMeasure?.description ?? ''\r\n    } ?? undefined,\r\n    itemType: {\r\n      code: item.itemType?.code ?? 0,\r\n      description: item.itemType?.description ?? ''\r\n    } ?? undefined\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport itemMapper from '../../mappers/Item/item.mapper'\r\nimport { Item } from '../../schemas/Item'\r\n\r\nclass ItemService {\r\n  async saveItem(itemData: Item, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/item', itemData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getItems(token: string) : Promise<Item[]> {\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/item', {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n\r\n      const items = responseApi.data.map((item:any) => {\r\n        return itemMapper(item)\r\n      })\r\n\r\n      return items\r\n\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ItemService\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { Item } from '../../../schemas/Item'\r\nimport ItemService from '../../../services/Item'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Crear productos'\r\n  },\r\n  body: {\r\n    field: {\r\n      code: {\r\n        name: 'code',\r\n        helperText: 'Escriba el código del producto',\r\n        placeholder: 'Código'\r\n      },\r\n      description: {\r\n        name: 'description',\r\n        helperText: 'Escriba la descripción del producto',\r\n        placeholder: 'Nombre de producto'\r\n      },\r\n      price: {\r\n        name: 'price',\r\n        helperText: 'Escriba el precio en pesos colombianos sin decimales',\r\n        placeholder: 'Precio'\r\n      },\r\n      unitMeasure: {\r\n        name: 'unitMeasure',\r\n        helperText: 'Escoja una unidad de medida',\r\n        options: [\r\n          { description: 'Unidad', code: '70' },\r\n          { description: 'Kilogramo', code: '40' },\r\n          { description: 'Galón', code: '686' },\r\n          { description: 'Metro cúbico', code: '594' },\r\n          { description: 'Metro cuadrado', code: '472' },\r\n        ]\r\n      },\r\n      itemType: {\r\n        name: 'itemType',\r\n        helperText: 'Tipo de producto',\r\n        options: [\r\n          { description: 'UNSPSC', code: '1' },\r\n          { description: 'GTIN', code: '2' },\r\n          { description: 'Partida Arancelarias', code: '3' },\r\n          { description: 'Estándar de adopción del contribuyente', code: '4' }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: Item\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    code: '',\r\n    description: '',\r\n    price: undefined,\r\n    unitMeasure: undefined,\r\n    itemType: undefined\r\n  }\r\n}\r\n\r\nexport default function ItemForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState<State>(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string }) => {\r\n    setState({\r\n      ...state,\r\n      form:{\r\n        ...state.form,\r\n        [name]: item\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    try {\r\n      const itemService = new ItemService()\r\n      const itemCreated = await itemService.saveItem(state.form, userContext.token ?? '')\r\n      setState(initState)\r\n      return toast.success(`El producto ${itemCreated.code} fue creado con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography \r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: code ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.code.name}\r\n              value={state.form.code}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.code.helperText}\r\n              placeholder={texts.body.field.code.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: description ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.description.name}\r\n              value={state.form.description}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.description.helperText}\r\n              placeholder={texts.body.field.description.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              name={texts.body.field.price.name}\r\n              value={state.form.price ?? ''}\r\n              type='number'\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: unit measure ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.unitMeasure.name}\r\n              value={state.form.unitMeasure?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.unitMeasure.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.unitMeasure.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.unitMeasure.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item type ------*/}\r\n          <Grid item md={6} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.itemType.name}\r\n              value={state.form.itemType?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.itemType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.itemType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.itemType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { ElectronicBill } from '../../schemas/ElectronicBill'\r\n\r\nclass ElectronicBillService {\r\n  async saveBill(billData: ElectronicBill, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/bill/electronic', billData, {\r\n        headers: {\r\n          authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default ElectronicBillService\r\n","import { ElectronicBillFormSchema, ItemComplete, Tax } from \"./schemas/ElectronicBill\"\r\n\r\nconst Utils = {\r\n  buildItem: (form: ElectronicBillFormSchema, applyTaxes: boolean): ItemComplete => {\r\n    let tax = {\r\n      code: '',\r\n      description: '',\r\n      percent: 0,\r\n      taxAmount: 0,\r\n      taxableAmount: 0\r\n    }\r\n\r\n    if (applyTaxes) {\r\n      tax = {\r\n        ...form.selectedTax,\r\n        percent: form.currentPercentTax,\r\n        taxAmount: ((form.currentQuantity * form.currentPrice) * form.currentPercentTax / 100),\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    } else {\r\n      tax = {\r\n        code: '1',\r\n        description: 'Iva',\r\n        percent: 0,\r\n        taxAmount: 0,\r\n        taxableAmount: (form.currentQuantity * form.currentPrice)\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...form.currentItem,\r\n      itemType: form.currentItemType,\r\n      price: form.currentPrice,\r\n      quantity: form.currentQuantity,\r\n      total: (form.currentQuantity * form.currentPrice),\r\n      taxes: [\r\n        tax\r\n      ]\r\n    }\r\n  },\r\n\r\n  buildTaxesForElectronicBill: (items: ItemComplete[]) : Tax[] | [] => {\r\n    let res: Tax[]| any[] = []\r\n    items.forEach(item => {\r\n      res = res.concat(item.taxes)\r\n    })\r\n    console.log(res)\r\n    return res\r\n  }\r\n}\r\n\r\nexport default Utils;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst texts = {\r\n  table: {\r\n    headers: {\r\n      code: 'Código',\r\n      description: 'Descripción',\r\n      price: 'Precio',\r\n      quantity: 'Cantidad',\r\n      delete: 'Eliminar'\r\n    }\r\n  }\r\n}\r\nexport default function ItemTable({ rows, handleTable }: { rows: Array<any>, handleTable: Function }) {\r\n\r\n  const classes = useStyles();\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setReload(false)\r\n  }, [reload])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{texts.table.headers.code}</TableCell>\r\n            <TableCell>{texts.table.headers.description}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.price}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.quantity}</TableCell>\r\n            <TableCell align=\"right\">{texts.table.headers.delete}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" >{row.code}</TableCell>\r\n                <TableCell component=\"th\">{row.description}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleTable('REMOVE', row)}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { ElectronicBill, ElectronicBillFormSchema, ItemComplete } from \"../../schemas/ElectronicBill\";\r\nimport Utils from \"../../utils\";\r\n\r\nexport default function electronicBillMapper(form: ElectronicBillFormSchema, items: ItemComplete[]): ElectronicBill {\r\n  return {\r\n    date: form.date,\r\n    orderReference: form.orderReference,\r\n    third: form.third ?? {\r\n      document: '',\r\n      dv: undefined,\r\n      documentType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      organizationType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      liabilityType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      regimeType: {\r\n        code: '',\r\n        description: ''\r\n      },\r\n      name: undefined,\r\n      lastname: undefined,\r\n      businessName: undefined,\r\n      phone: '',\r\n      address: '',\r\n      email: ''\r\n    },\r\n    wayToPay: form.wayToPay,\r\n    paymentMethod: form.paymentMethod,\r\n    paymentDueDate: form.paymentDueDate,\r\n    note: form.note,\r\n    items: items,\r\n    taxes: Utils.buildTaxesForElectronicBill(items),\r\n    total: form.total,\r\n    totalTaxes: form.totalTaxes,\r\n    totalToPay: form.totalToPay\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Box,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { Cancel, NoteAdd, Save } from '@material-ui/icons'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport { ElectronicBillFormSchema } from '../../../schemas/ElectronicBill'\r\nimport ElectronicBillService from '../../../services/ElectronicBill'\r\nimport Utils from '../../../utils'\r\nimport ItemTable from './ItemTable'\r\nimport ThirdService from '../../../services/Third'\r\nimport electronicBillMapper from '../../../mappers/ElectronicBill/electronicBill.mapper'\r\nimport ItemService from '../../../services/Item'\r\nimport PlemsiService from '../../../services/Plemsi'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  loadingContainer: {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: '0',\r\n    right: '0',\r\n    background: '#BFBFBFBF',\r\n    opacity: 0.6,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '50vh'\r\n  },\r\n  description: {\r\n    fontWeight: 'bold',\r\n    marginBottom: '1vh'\r\n  },\r\n  divider: {\r\n    marginBottom: '6vh'\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right',\r\n  },\r\n  thirdClassTitle: {\r\n    color: '#757575',\r\n    marginBottom: '6vh'\r\n  },\r\n  addButton: {\r\n    width: '100%',\r\n    height: '70%',\r\n    color: '#ffff',\r\n  }\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    description: 'Facturación electrónica'\r\n  },\r\n  body: {\r\n    field: {\r\n      date: {\r\n        name: 'date',\r\n        helperText: 'Fecha de facturación',\r\n        placeholder: 'Fecha'\r\n      },\r\n      orderReference: {\r\n        name: 'orderReference',\r\n        helperText: 'Escriba la referencia de orden',\r\n        placeholder: 'Código de orden'\r\n      },\r\n      third: {\r\n        name: 'third',\r\n        helperText: 'Escoja el tercero',\r\n        placeholder: 'Tercero'\r\n      },\r\n      wayToPay: {\r\n        name: 'wayToPay',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Contado', code: '1' },\r\n          { description: 'Crédito', code: '2' },\r\n        ]\r\n      },\r\n      paymentMethod: {\r\n        name: 'paymentMethod',\r\n        helperText: 'Escoja una forma de pago',\r\n        options: [\r\n          { description: 'Cheque', code: '20' },\r\n          { description: 'Consignación bancaria', code: '42' },\r\n          { description: 'Efectivo', code: '10' },\r\n          { description: 'Instrumento no definido', code: '1' },\r\n          { description: 'Pago y depósito pre acordado (PPD)', code: '34' },\r\n          { description: 'Tarjeta Crédito', code: '48' },\r\n          { description: 'Tarjeta Débito', code: '49' },\r\n        ]\r\n      },\r\n      paymentDueDate: {\r\n        name: 'paymentDueDate',\r\n        helperText: 'Fecha de pago',\r\n        placeholder: 'AAAA/MM/DD'\r\n      },\r\n      note: {\r\n        name: 'note',\r\n        helperText: 'Nota para la factura',\r\n        placeholder: 'Nota para la factura'\r\n      },\r\n      item: {\r\n        name: 'currentItem',\r\n        helperText: 'Escoja el producto a facturar',\r\n        options: [\r\n          {\r\n            unitMeasure: { code: 12, description: 'Unidad'},\r\n            description: 'Producto de prueba',\r\n            code: '1',\r\n            price: 2500\r\n          }\r\n        ]\r\n      },\r\n      itemType: {\r\n        name: 'currentItemType',\r\n        helperText: 'Tipo de producto',\r\n        options: [\r\n          { description: 'UNSPSC', code: '1' },\r\n          { description: 'GTIN', code: '2' },\r\n          { description: 'Partida Arancelarias', code: '3' },\r\n          { description: 'Estándar de adopción del contribuyente', code: '4' }\r\n        ]\r\n      },\r\n      price: {\r\n        name: 'currentPrice',\r\n        helperText: 'Precio sin impuestos',\r\n        placeholder: 'Precio'\r\n      },\r\n      quantity: {\r\n        name: 'currentQuantity',\r\n        helperText: 'Cantiadad',\r\n        placeholder: 'Cantidad'\r\n      },\r\n      applyTaxes: {\r\n        name: 'applyTaxes',\r\n        helperText: 'Aplicar impuestos'\r\n      },\r\n      tax: {\r\n        name: 'selectedTax',\r\n        helperText: 'Escoja el impuesto',\r\n        options: [\r\n          { code: '1', description: 'IVA' },\r\n          { code: '4', description: 'Impuesto al consumo' }\r\n        ]\r\n      },\r\n      percent: {\r\n        name: 'currentPercentTax',\r\n        helperText: 'Porcentaje',\r\n        placeholder: '%',\r\n        options: [\r\n          { code: 0, description: '0%' },\r\n          { code: 5, description: '5%' },\r\n          { code: 8, description: '8%' },\r\n          { code: 19, description: '19%' },\r\n        ]\r\n      },\r\n      total: {\r\n        name: 'total',\r\n        helperText: 'Total sin impuestos',\r\n        placeholder: 'Total sin impuestos'\r\n      },\r\n      totalTaxes: {\r\n        name: 'totalTaxes',\r\n        helperText: 'Total de impuestos',\r\n        placeholder: 'Total de impuestos'\r\n      },\r\n      totalToPay: {\r\n        name: 'totalToPay',\r\n        helperText: 'Total final',\r\n        placeholder: 'Total'\r\n      }\r\n    },\r\n    subtitles: {\r\n      payment: 'Información acerca del pago',\r\n      itemsTable: 'Tabla de productos a facturar',\r\n      total: 'Información acerca de los totales de la factura'\r\n    },\r\n    buttons: {\r\n      addProduct: {\r\n        title: 'Agregar'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ------------ Init state -----------\r\ninterface State {\r\n  form: ElectronicBillFormSchema\r\n  applyTaxes: boolean\r\n  items: any[]\r\n  selectedItems: any[]\r\n  thirds: any[]\r\n  preview?: string\r\n  loading: boolean\r\n}\r\n\r\nconst initState: State = {\r\n  form: {\r\n    date: '',\r\n    orderReference: '',\r\n    third: undefined,\r\n    wayToPay: { code: '', description: '' },\r\n    paymentMethod: { code: '', description: '' },\r\n    paymentDueDate: '',\r\n    note: '',\r\n    currentItem: undefined,\r\n    currentItemType: {\r\n      code: '',\r\n      description: ''\r\n    },\r\n    currentPrice: 0,\r\n    currentQuantity: 0,\r\n    total: 0,\r\n    totalTaxes: 0,\r\n    totalToPay: 0,\r\n    selectedTax: { code: '', description: ''},\r\n    currentPercentTax: 0\r\n  },\r\n  applyTaxes: false,\r\n  items: [],\r\n  selectedItems: [],\r\n  thirds: [],\r\n  preview: undefined,\r\n  loading: false\r\n}\r\n\r\nexport default function ElectronicBillForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState(initState)\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  React.useEffect(() => {\r\n    async function loadData() {\r\n      const thirdService = new ThirdService()\r\n      const itemService = new ItemService()\r\n      const thirds = await thirdService.getThirds(userContext.token || '')\r\n      const items = await itemService.getItems(userContext.token || '')\r\n      setState({\r\n        ...state,\r\n        thirds: thirds,\r\n        items: items\r\n      })\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n  const handleChangeSelectValue = (name: string, value: string | number) => {\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleChangeSelect is the handler to update the state\r\n  // of the state, while the user change the options \r\n  // on an input select.\r\n  const handleChangeSelect = (name: string, item: { code: string, description: string, price?: number, itemType?: any }) => {\r\n    if (item.price && item.itemType) {\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [name]: item,\r\n          currentPrice: item.price,\r\n          currentItemType: {\r\n            code: item.itemType.code,\r\n            description: item.itemType.description\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [name]: item\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | {\r\n    name: string\r\n    value: unknown\r\n  }>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      form: {\r\n        ...state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setState({\r\n      ...state,\r\n      loading: true\r\n    })\r\n\r\n    try {\r\n      const res = electronicBillMapper(state.form, state.selectedItems)\r\n      const electronicBillService = new ElectronicBillService()\r\n      const plemsiService = new PlemsiService()\r\n      const bill = await electronicBillService.saveBill(res, userContext.token ?? '')\r\n      const billPlemsi = await plemsiService.getBill(bill.entityInformation.apikey, bill.entityInformation.number)\r\n      setState({\r\n        ...initState,\r\n        applyTaxes: false,\r\n        items: state.items,\r\n        selectedItems: [],\r\n        thirds: state.thirds,\r\n        preview: billPlemsi,\r\n        loading: false\r\n      })\r\n      return toast.success(`Factura creada con éxito`)\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // HandleTable is the handler to add and remove items\r\n  // from the concept table, it also adds or subtracts \r\n  // the value of the total receipt.\r\n  const handleTable = (func: string, selectedItem?: any) => {\r\n    if (func === 'ADD') {\r\n      const item = Utils.buildItem(state.form, state.applyTaxes)\r\n      const total = (state.form.total + item.total)\r\n      const totalTaxes = (state.form.totalTaxes + item.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems\r\n      items.push(item)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n          currentItemType: {\r\n            code: '',\r\n            description: ''\r\n          },\r\n          currentPrice: 0,\r\n          currentQuantity: 0,\r\n          selectedTax: { code: '', description: ''},\r\n          currentPercentTax: 0\r\n        },\r\n        applyTaxes: false,\r\n        selectedItems: items\r\n      })\r\n    }\r\n\r\n    if (func === 'REMOVE') {\r\n      const total = (state.form.total - selectedItem.total)\r\n      const totalTaxes = (state.form.totalTaxes - selectedItem.taxes[0].taxAmount)\r\n      const totalToPay = total + totalTaxes\r\n      const items = state.selectedItems.filter(item => item.code !== selectedItem.code)\r\n      setState({\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          total: total,\r\n          totalTaxes: totalTaxes,\r\n          totalToPay: totalToPay,\r\n        },\r\n        selectedItems: items\r\n      })\r\n    }\r\n  }\r\n\r\n  const onApplyTaxes = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { checked } = event.target\r\n    setState({\r\n      ...state,\r\n      applyTaxes: checked\r\n    })\r\n  }\r\n\r\n  const cancel = () => {\r\n    setState(initState)\r\n  }\r\n\r\n  const onPreviewBill = () => {\r\n    setState({\r\n      ...state,\r\n      preview: undefined\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* ----- Header -----*/}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant='h5'\r\n          className={classes.description}\r\n        >\r\n          {texts.header.description}\r\n        </Typography>\r\n      </React.Fragment>\r\n\r\n      <Divider\r\n        className={classes.divider}\r\n      />\r\n\r\n      {/* ----- Body ------*/}\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n\r\n          {/* ----- Form: date ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.date.name}\r\n              value={state.form.date}\r\n              variant='outlined'\r\n              type='date'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.date.helperText}\r\n              placeholder={texts.body.field.date.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: order reference ------*/}\r\n          <Grid item md={6} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.orderReference.name}\r\n              value={state.form.orderReference}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.orderReference.helperText}\r\n              placeholder={texts.body.field.orderReference.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: third ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.third.name}\r\n              value={state.form.third?.document ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.thirds.map((item) =>\r\n                  <MenuItem\r\n                    key={item.document}\r\n                    value={item.document}\r\n                    onClick={() => handleChangeSelect(texts.body.field.third.name, item)}\r\n                  >\r\n                    { item.name !== undefined ? `${item.name} ${item.lastname}` : `${item.businessName}`}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.third.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment ------*/}\r\n\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.wayToPay.name}\r\n              value={state.form.wayToPay.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.wayToPay.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.wayToPay.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.wayToPay.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment method ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.paymentMethod.name}\r\n              value={state.form.paymentMethod.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.paymentMethod.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.paymentMethod.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.paymentMethod.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: payment due date ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.paymentDueDate.name}\r\n              value={state.form.paymentDueDate}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.paymentDueDate.helperText}\r\n              placeholder={texts.body.field.paymentDueDate.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: note ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.note.name}\r\n              value={state.form.note}\r\n              variant='outlined'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.note.helperText}\r\n              placeholder={texts.body.field.note.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: item ------*/}\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Typography\r\n              variant='h6'\r\n            >\r\n              {texts.body.subtitles.itemsTable}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Divider className={classes.divider} />\r\n          </Grid>\r\n\r\n          <Grid item md={8} sm={12} xs={12}>\r\n            <Select\r\n              name={texts.body.field.item.name}\r\n              value={state.form.currentItem?.code ?? ''}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                state.items.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.item.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.item.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item type ------*/}\r\n          <Grid item md={4} sm={6} xs={12}>\r\n            <Select\r\n              name={texts.body.field.itemType.name}\r\n              value={state.form.currentItemType.code}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >\r\n              {\r\n                texts.body.field.itemType.options.map((item) =>\r\n                  <MenuItem\r\n                    key={item.description}\r\n                    value={item.code}\r\n                    onClick={() => handleChangeSelect(texts.body.field.itemType.name, item)}\r\n                  >\r\n                    {item.description}\r\n                  </MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n            <FormHelperText>{texts.body.field.itemType.helperText}</FormHelperText>\r\n          </Grid>\r\n\r\n          {/* ----- Form: price ------*/}\r\n          <Grid item md={8} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.price.name}\r\n              value={state.form.currentPrice}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.price.helperText}\r\n              placeholder={texts.body.field.price.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: quantity ------*/}\r\n          <Grid item md={4} sm={3} xs={10}>\r\n            <TextField\r\n              required={true}\r\n              name={texts.body.field.quantity.name}\r\n              value={state.form.currentQuantity}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.quantity.helperText}\r\n              placeholder={texts.body.field.quantity.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            {/* ----- apply taxes check ------*/}\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.applyTaxes} name={texts.body.field.applyTaxes.name} value={state.applyTaxes} onChange={(e) => onApplyTaxes(e)} color=\"primary\" />}\r\n              label={texts.body.field.applyTaxes.helperText}\r\n            />\r\n          </Grid>\r\n\r\n          {\r\n            state.applyTaxes ?\r\n              (\r\n                <React.Fragment>\r\n                  <Grid item md={6} sm={12} xs={12}>\r\n                    <Select\r\n                      name={texts.body.field.tax.name}\r\n                      value={state.form.selectedTax.code}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      {\r\n                        texts.body.field.tax.options.map((item) =>\r\n                          <MenuItem\r\n                            key={item.description}\r\n                            value={item.code}\r\n                            onClick={() => handleChangeSelect(texts.body.field.tax.name, item)}\r\n                          >\r\n                            {item.description}\r\n                          </MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    <FormHelperText>{texts.body.field.tax.helperText}</FormHelperText>\r\n                  </Grid>\r\n\r\n                  {/* ----- Form: percent ------*/}\r\n                  <Grid item md={3} sm={6} xs={10}>\r\n                    <Select\r\n                      name={texts.body.field.percent.name}\r\n                      value={state.form.currentPercentTax}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    >\r\n                      {\r\n                        texts.body.field.percent.options.map((item) =>\r\n                          <MenuItem\r\n                            key={item.description}\r\n                            value={item.code}\r\n                            onClick={() => handleChangeSelectValue(texts.body.field.percent.name, item.code)}\r\n                          >\r\n                            {item.description}\r\n                          </MenuItem>\r\n                        )\r\n                      }\r\n                    </Select>\r\n                    <FormHelperText>{texts.body.field.percent.helperText}</FormHelperText>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              ) : ''\r\n          }\r\n\r\n          <Grid item md={3} sm={6} xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"button\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => handleTable(\"ADD\")}\r\n              className={classes.addButton}\r\n              startIcon={<Save />}\r\n            >\r\n              {texts.body.buttons.addProduct.title}\r\n            </Button>\r\n          </Grid>\r\n\r\n          {/* ----- Form: item **concepts table rendering ------*/}\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <ItemTable rows={state.selectedItems} handleTable={handleTable} />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.total.name}\r\n              value={state.form.total}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.total.helperText}\r\n              placeholder={texts.body.field.total.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total taxes ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalTaxes.name}\r\n              value={state.form.totalTaxes}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalTaxes.helperText}\r\n              placeholder={texts.body.field.totalTaxes.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          {/* ----- Form: total to pay ------*/}\r\n          <Grid item md={4} sm={6} xs={10}>\r\n            <TextField\r\n              disabled={true}\r\n              name={texts.body.field.totalToPay.name}\r\n              value={state.form.totalToPay}\r\n              variant='outlined'\r\n              type='number'\r\n              fullWidth\r\n              onChange={handleChange}\r\n              helperText={texts.body.field.totalToPay.helperText}\r\n              placeholder={texts.body.field.totalToPay.placeholder}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={12} sm={6} xs={12} className={classes.alignRight}>\r\n            <IconButton\r\n              type=\"submit\"\r\n            >\r\n              <NoteAdd fontSize={\"large\"} color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              onClick={cancel}\r\n            >\r\n              <Cancel fontSize={\"large\"} color=\"secondary\" />\r\n            </IconButton>\r\n          </Grid>\r\n          {\r\n            state.preview !== undefined ?\r\n            (\r\n              <Grid item md={12} sm={12} xs={12} className={classes.alignRight}>\r\n                    <Link to={{ pathname: state.preview }} target='_blank' onClick={onPreviewBill}>\r\n                      Descargue su factura\r\n                    </Link>\r\n              </Grid>\r\n            ) : ''\r\n          }\r\n        </Grid>\r\n      </form>\r\n      {\r\n        state.loading ?\r\n        (\r\n          <div className={classes.loadingContainer}>\r\n            <Box>\r\n              <CircularProgress/>\r\n            </Box>\r\n          </div>\r\n        ) : ''\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { \r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    makeStyles,\r\n    Theme,\r\n    Tooltip,\r\n    Typography \r\n} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n// ------------------- Styles ----------------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    card: {\r\n        width: '100%',\r\n        background: '#ffff',\r\n        height: '30vh'\r\n    },\r\n    cardBody: {\r\n        marginTop: '8vh',\r\n    },\r\n    cardPrefix: {\r\n        fontSize: '3vh'\r\n    },\r\n    cardPorcent: {\r\n        fontSize: '2vh'\r\n    }\r\n}));\r\n\r\n// ---------- Type for the info from props ----------\r\ntype data = {\r\n    title: string,\r\n    value: string,\r\n    prefix: string,\r\n    percent: {\r\n        value: number,\r\n        tooltip: string,\r\n        prefix: string\r\n    }\r\n}\r\n\r\nexport default function BalanceCard({ data }: {data: data}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                {/* -------------- Header ----------- */}\r\n                <Typography variant=\"subtitle2\">\r\n                    {data.title}\r\n                </Typography>\r\n                <Divider />\r\n                <Typography\r\n                variant={\r\n                    // if the value is too big this code reduces the font size\r\n                    data.value.length <= 9 ? \"h3\" : \"h4\"\r\n                }\r\n                color=\"primary\"\r\n                className={classes.cardBody}\r\n                >\r\n                    {data.value}\r\n                    <span className={classes.cardPrefix}>\r\n                        {data.prefix}\r\n                    </span>\r\n                </Typography>\r\n\r\n                {/*This section has the code for porcent respect previous month */}\r\n                <Tooltip title={data.percent.tooltip}>\r\n                    <Typography\r\n                        align=\"right\"\r\n                        variant=\"subtitle1\"\r\n                        color={\r\n                        // if the value is negative this code changes the font color\r\n                        data.percent.value >= 0\r\n                            ? \"primary\"\r\n                            : \"secondary\"\r\n                        }\r\n                    >\r\n                        {\r\n                        // if the value is negative this code changes the icon\r\n                        data.percent.value >= 0 ? (\r\n                            <ArrowUpwardIcon className={classes.cardPorcent} />\r\n                        ) : (\r\n                            <ArrowDownwardIcon className={classes.cardPorcent} />\r\n                        )\r\n                        }{\" \"}\r\n                        {data.percent.value}{\" \"}\r\n                        <span className={classes.cardPorcent}>\r\n                        {data.percent.prefix}\r\n                        </span>\r\n                    </Typography>\r\n                </Tooltip>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer\r\n} from \"recharts\";\r\n\r\n// this data is just as example // data for the graphic\r\nconst data = [\r\n    {\r\n        name: \"Enero\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Febrero\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Marzo\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Abril\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Mayo\",\r\n        uv: 0,\r\n    },\r\n    {\r\n        name: \"Junio\",\r\n        uv: 0,\r\n    }\r\n];\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        width: '90vh',\r\n        height: '27vh',\r\n    }\r\n}));\r\n\r\nexport default function LineGraphic() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 5\r\n                    }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                  \r\n                        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { \r\n    Divider, \r\n    IconButton,\r\n    TextField, \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { NoteAdd } from '@material-ui/icons';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    form: {\r\n        marginTop: '5vh'\r\n    },\r\n    submitButton: {\r\n        textAlign: 'right'\r\n    }\r\n}));\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n    header: {\r\n        title: 'Reporte caja diario'\r\n    },\r\n    body: {\r\n        fields: {\r\n            from: {\r\n                name: 'date',\r\n                helperText: 'Fecha'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ------------- Init state -----------\r\nconst initState = {\r\n    date: new Date(),\r\n}\r\n\r\nexport default function DailyReportForm() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ form, setForm ] = useState(initState);\r\n\r\n    // HandleChange is the handler to update the state\r\n    // of the form, while the user writes on an input\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.target\r\n        setForm(prev => {\r\n            (prev as any)[name] = value\r\n            const newValue = {...prev}\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    // HandleSubmit is the handler to verify and send\r\n    // the form to redux (redux send the info to backend)\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Typography\r\n                variant=\"subtitle2\"\r\n                color=\"inherit\"\r\n                >\r\n                    {texts.header.title}\r\n                </Typography>\r\n            </div>\r\n            \r\n            <Divider />\r\n\r\n            <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>\r\n                <TextField\r\n                required={true}\r\n                name = {texts.body.fields.from.name}\r\n                value = {form.date}\r\n                fullWidth\r\n                type = 'date'\r\n                onChange = {handleChange}\r\n                helperText = {texts.body.fields.from.helperText}\r\n                />\r\n\r\n                <div className={classes.submitButton}>\r\n                    <IconButton\r\n                    type=\"submit\"\r\n                    className={classes.submitButton}\r\n                    >\r\n                        <NoteAdd fontSize={\"small\"} color=\"primary\"/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\nimport BalanceCard from './Card/BalanceCard'\r\nimport LineGraphic from './Graphics/LineGraphic/LineGraphic'\r\nimport DailyReportForm from './DailyReport/DailyReportForm'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '85%',\r\n    margin: '10vh auto 10vh auto',\r\n    height: 'auto'\r\n  },\r\n  container: {\r\n    marginTop: '10vh',\r\n    padding: '0'\r\n  },\r\n  gridCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  cardGraphic: {\r\n    width: '100%',\r\n    background: '#ffff',\r\n    height: '30vh'\r\n  },\r\n\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    title: 'Bienvenido',\r\n    user: 'Santiago Marin'\r\n  },\r\n  body: {\r\n    cards: {\r\n      cashBalance: {\r\n        title: 'Saldo de Caja',\r\n        value: '0.00',\r\n        prefix: '$',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a mes anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      bankBalance: {\r\n        title: 'Saldo de Banco',\r\n        value: '0.00',\r\n        prefix: '$',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a mes anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      percentBalance: {\r\n        title: 'Respecto mes anterior',\r\n        value: '0',\r\n        prefix: '%',\r\n        percent: {\r\n          value: 0,\r\n          tooltip: 'Relación en procentaje respecto a año anterior',\r\n          prefix: '%'\r\n        }\r\n      },\r\n      respectPreviousMonth: {\r\n        title: 'Respecto mes anterior',\r\n        value: 0,\r\n        prefix: '%'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function IndexApp() {\r\n\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { entityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/* -------------------- Header --------------- */}\r\n      <React.Fragment>\r\n        <Typography\r\n          variant=\"h4\"\r\n        >\r\n          {texts.header.title}, <span>{userContext.name} {userContext.lastname}</span>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n        >\r\n          {entityContext.name}\r\n        </Typography>\r\n        <div>\r\n          <Typography\r\n            variant=\"caption\"\r\n          >\r\n            {entityContext.document}\r\n          </Typography>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n      {/* -- Cards to show the values and percentages of the company --*/}\r\n      <React.Fragment>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n\r\n            {/* --------------------- *Cash balance card ------------------ */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.cashBalance} />\r\n            </Grid>\r\n\r\n            {/* --------------------- *Bank balance card ------------------ */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.bankBalance} />\r\n            </Grid>\r\n\r\n            {/* -------------------- *Percent balance card ----------------- */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <BalanceCard data={texts.body.cards.percentBalance} />\r\n            </Grid>\r\n\r\n            {/* -------------------- *Graphic balance card ----------------- */}\r\n            <Grid item md={8} sm={12} xs={12} className={classes.gridCard}>\r\n              <Card className={classes.cardGraphic}>\r\n                <CardContent>\r\n                  <LineGraphic />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            {/* -------------------- *Daily report form card ----------------- */}\r\n            <Grid item md={4} sm={6} xs={12} className={classes.gridCard}>\r\n              <Card className={classes.cardGraphic}>\r\n                <CardContent>\r\n                  <DailyReportForm />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport UserContext from '../../contexts/User'\r\nimport { UserContextType } from '../../schemas/User'\r\nimport { urls } from '../../urls'\r\n\r\nexport default function ProtectRoute({ children, ...rest }: { children: ReactElement }) {\r\n\r\n  const { userContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        userContext.id ? children : <Redirect to={urls.page.login} />\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport MainMenu from '../MainMenu/MainMenu';\r\nimport AppBarComponent from '../AppBar/AppBarComponent';\r\nimport CashReceiptForm from '../CashReceipt/CashReceiptForm';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport ThirdForm from '../Third/ThirdForm';\r\nimport ThirdMigration from '../Third/ThirdMigration';\r\nimport InternalTransactionForm from '../InternalTransaction/InternalTransactionForm';\r\nimport CashReceiptReport from '../CashReceipt/CashReceiptReport';\r\nimport InternalTransactionReport from '../InternalTransaction/InternalTransactionReport';\r\nimport ItemForm from '../Item/ItemForm';\r\nimport ElectronicBillForm from '../ElectronicBill/ElectronicBillForm';\r\nimport IndexApp from '../Index/IndexApp';\r\nimport ProtectRoute from '../../ComponentsForProtectRoutes/ProtectRoute';\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        minHeight: '100vh',\r\n        background: '#fafafa',\r\n    },\r\n    body: {\r\n        display: 'flex'\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function ContainerApp() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <div className={classes.body}>\r\n\r\n                <div>\r\n                    <MainMenu/>\r\n                </div>\r\n\r\n                <div className={classes.main}>\r\n\r\n                    <AppBarComponent />\r\n\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route path={urls.app.main.home}>\r\n                            <ProtectRoute>\r\n                                <IndexApp />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.form}>\r\n                            <ProtectRoute>\r\n                                <ThirdForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.third.thirdMigrationForm}>\r\n                            <ProtectRoute>\r\n                                <ThirdMigration />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.item.form}>\r\n                            <ProtectRoute>\r\n                                <ItemForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.form}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptForm/>\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.electronicBill.form}>\r\n                            <ProtectRoute>\r\n                                <ElectronicBillForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.cashReceipt.report}>\r\n                            <ProtectRoute>\r\n                                <CashReceiptReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.form}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionForm />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                        <Route path={urls.app.main.internalTransaction.report}>\r\n                            <ProtectRoute>\r\n                                <InternalTransactionReport />\r\n                            </ProtectRoute>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { User } from \"../../schemas/User\";\r\n\r\nexport default function userMapper(user: any | unknown): User {\r\n  return {\r\n    id: user.id ?? '',\r\n    email: user.email ?? '',\r\n    password: user.password ?? '',\r\n    name: user.name ?? '',\r\n    lastname: user.lastname ?? '',\r\n    entityId: user.entityId ?? '',\r\n    state: user.state ?? '',\r\n    permissions: user.permissions ?? [''],\r\n    token: user.token ?? ''\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport jwt from 'jwt-decode'\r\nimport entityMapper from '../../mappers/Entity/entity.mapper'\r\nimport userMapper from '../../mappers/User/user.mapper'\r\nimport { User } from '../../schemas/User'\r\n\r\ntype jwtDecode = {\r\n  data: any\r\n}\r\n\r\nclass UserService {\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/login', { email, password })\r\n      const response = responseApi.data\r\n      if (!response.token) throw new Error('No recuperó token')\r\n      const tokenData = jwt<jwtDecode>(response.token)\r\n      const userData = tokenData.data.user\r\n      const entityData = tokenData.data.entity\r\n      userData.token = response.token\r\n      const user = userMapper(userData)\r\n      const entity = entityMapper(entityData)\r\n\r\n      return {\r\n        user,\r\n        entity\r\n      }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async getUsers(token: string) {\r\n\r\n    try {\r\n      const responseApi = await axios.get('/api/v2/user', {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async saveUser(userData: User, token: string) {\r\n    try {\r\n      const responseApi = await axios.post('/api/v2/user', userData, {\r\n        headers: {\r\n          authorization: token\r\n        }\r\n      })\r\n      return responseApi.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserService\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport UserContext from '../../../contexts/User'\r\nimport { UserContextType } from '../../../schemas/User'\r\nimport EntityContext from '../../../contexts/Entity'\r\nimport { EntityContextType } from '../../../schemas/Entity'\r\nimport UserService from '../../../services/User/index'\r\nimport { urls } from '../../../urls'\r\nimport { ServerError } from '../../../schemas/Error'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\n// -------------- Styles --------------\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  state: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n// - in this part all the component texts are housed\r\nconst texts = {\r\n  header: {\r\n    title: 'Inicia sesión',\r\n    logo: {\r\n      path: '/images/logotipo-crecer-dmc.svg',\r\n      alt: 'logotipo de crecer dmc'\r\n    }\r\n  },\r\n  state: {\r\n    field: {\r\n      email: {\r\n        name: 'email',\r\n        label: 'Correo'\r\n      },\r\n      password: {\r\n        name: 'password',\r\n        label: 'Contraseña'\r\n      },\r\n      rememberCheck: {\r\n        value: 'remember',\r\n        label: 'Recordarme'\r\n      },\r\n      signinButton: {\r\n        title: 'Entrar'\r\n      }\r\n    },\r\n    footer: {\r\n      forgotPasswordLink: 'Olvidaste tu contraseña?',\r\n      createAccountLink: 'Aún no tienes un usuario?',\r\n      copyright: 'CRECER DMC'\r\n    }\r\n  }\r\n}\r\n\r\n// ------------- Init state -----------\r\ninterface LoginForm {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst initState: LoginForm = {\r\n  email: '',\r\n  password: ''\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        {texts.state.footer.copyright}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default function SignIn() {\r\n\r\n  const { userContext, setUserContext } = React.useContext(\r\n    UserContext\r\n  ) as UserContextType\r\n\r\n  const { setEntityContext } = React.useContext(\r\n    EntityContext\r\n  ) as EntityContextType\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const [state, setState] = useState<LoginForm>(initState)\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (userContext?.id) {\r\n      history.push(urls.app.main.home)\r\n    }\r\n  }, [])\r\n\r\n  // HandleChange is the handler to update the state\r\n  // of the state, while the user writes on an input.\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  // HandleSubmit is the handler to verify and send\r\n  // the state to redux (redux send the info to backend)\r\n  async function onLogin() {\r\n    try {\r\n      const userService = new UserService()\r\n      const data = await userService.login(state.email, state.password)\r\n      if (data) {\r\n        setUserContext(data.user)\r\n        setEntityContext(data.entity)\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        const serverError = error as AxiosError<ServerError>\r\n        if (serverError && serverError.response) {\r\n          return toast.error(serverError.response.data.message)\r\n        }\r\n      }\r\n    }\r\n    history.push(urls.app.main.home)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        {/* ------- *Header --------- */}\r\n        <Avatar className={classes.avatar}>\r\n          <img\r\n            src={texts.header.logo.path}\r\n            alt={texts.header.logo.alt}\r\n          />\r\n        </Avatar>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {texts.header.title}\r\n        </Typography>\r\n\r\n        {/* ------- *Body ----------- */}\r\n        <form className={classes.state} noValidate>\r\n\r\n          {/* ----- Form: item **email ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={state.email}\r\n            id={texts.state.field.email.name}\r\n            label={texts.state.field.email.label}\r\n            name={texts.state.field.email.name}\r\n            autoFocus\r\n          />\r\n\r\n          {/* ----- Form: item **password ------*/}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={state.password}\r\n            onChange={handleChange}\r\n            name={texts.state.field.password.name}\r\n            label={texts.state.field.password.label}\r\n            type=\"password\"\r\n            id={texts.state.field.password.name}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          {/* ----- Form: item **remember check ------*/}\r\n          <FormControlLabel\r\n            control={<Checkbox value={texts.state.field.rememberCheck.value} color=\"primary\" />}\r\n            label={texts.state.field.rememberCheck.label}\r\n          />\r\n\r\n          <Button\r\n            onClick={onLogin}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {texts.state.field.signinButton.title}\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.forgotPasswordLink}\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {texts.state.footer.createAccountLink}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { urls } from '../../../urls';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Login from '../Login/Login';\r\n\r\nexport default function ContainerApp() {\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline/>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        // This proyect uses the url.sts file to manage the urls\r\n                    }\r\n                    <Switch>\r\n                        <Route exact path={urls.page.home} >\r\n                            {/* here will be the home component */}\r\n                            <h1>Home</h1>\r\n                        </Route>\r\n                        <Route path={urls.page.login}>\r\n                            <Login />\r\n                        </Route>\r\n                    </Switch>\r\n              \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GlobalProvider from './contexts'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport theme from './theme'\r\nimport ContainerApp from './components/ComponentsForApp/ContainerApp/ContainerApp';\r\nimport { urls } from './urls';\r\nimport ContainerPage from './components/ComponentsForPage/ContainerPage/ContainerPage';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <GlobalProvider>\r\n        {\r\n          // This proyect uses the url.sts file to manage the urls\r\n        }\r\n\r\n        <Router>\r\n          <Switch>\r\n            {\r\n              // the page container has all the components\r\n              // that are part of Crecer´s single page\r\n            }\r\n            <Route path={urls.page.home}>\r\n              <ContainerPage />\r\n            </Route>\r\n\r\n            {\r\n              // the app container has all the components\r\n              // that are part of Crecer App\r\n            }\r\n            <Route path={urls.app.index}>\r\n              <ContainerApp />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        <ToastContainer/>\r\n      </GlobalProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}